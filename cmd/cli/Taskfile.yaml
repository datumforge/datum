version: "3"
tasks:
  org:create:
    desc: creates an organization against a running local instance of the datum server - see the CLI help commands for other variables
    aliases: [createorg]
    cmds:
      - go run main.go org create -n your_new_org -d "my new org again"
  user:verify:
    desc: a task to register a user, parse out the token response, and submit it to the verify endpoint
    aliases: [verifyuser]
    cmds:
      - curl http://localhost:17608/v1/verify?token={{.VERIFY_TOKEN}}
    vars:
      VERIFY_TOKEN:
        sh: go run main.go register --email="mitb@datum.net" --first-name="matt" --last-name="anderson" --password="mattisthebest1234" | jq -r .token
  login:creds:
    desc: a task to login the verified user
    aliases: [login]
    env:
      DATUM_PASSWORD: mattisthebest1234
    cmds:
      - go run main.go login -u mitb@datum.net
  user:all:
    desc: a task to register, verify, and login a new user
    cmds:
      - task: verifyuser
      - task: login
  login:google:
    desc: a task to login with google oauth
    aliases: [google]
    cmds:
      - go run main.go login -o google
  login:github:
    desc: a task to login with google oauth
    aliases: [github]
    cmds:
      - go run main.go login -o github
  template:create:
    desc: a task to create a new template
    aliases: [createtemplate]
    vars:
      ORG_ID:
        sh: go run main.go org create -n template-org -d "my new org that will have a template" -z json | jq -r .createOrganization.organization.id
    cmds:
      - go run main.go  template create -o "{{ .ORG_ID}}" -n Invoice --jsonconfig="../../exampledata/templates/invoice.json"
