#hooks:
#  afterOneFileWrite:
#    - prettier --write
config:
  strict: true
  useTypeImports: true
  maybeValue: T | null
  declarationKind: interface
  avoidOptionals: true
  preResolveTypes: true
  onlyOperationTypes: true
  namingConvention:
    enumValues: keep
  scalars:
    DateTime: string
    Date: string
    Decimal: number
    UUID: string
    ID: string
    JSON: any
    Upload: File
overwrite: true
schema: ../schema.graphql
documents: '../query/*.graphql'
generates:
  ./src/schema.ts:
#    preset: near-operation-file
#    presetConfig:
#      baseTypesPath: 'types.ts'
    plugins:
      - typescript
      - typescript-operations
      - typescript-resolvers # This plugin generates TypeScript signature for resolve functions of your GraphQL API. You can use this plugin to generate simple resolvers signature based on your GraphQL types, or you can change its behavior be providing custom model types (mappers)
      - typescript-graphql-request
      - typescript-react-query # This plugin generates React-Query Hooks with TypeScript typings
      - add:
          content: '/* eslint-disable */'