package api

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.39

import (
	"context"
	"fmt"

	"github.com/datumforge/datum/internal/ent/generated"
	"github.com/google/uuid"
)

// Node is the resolver for the node field.
func (r *queryResolver) Node(ctx context.Context, id uuid.UUID) (generated.Noder, error) {
	panic(fmt.Errorf("not implemented: Node - node"))
}

// Nodes is the resolver for the nodes field.
func (r *queryResolver) Nodes(ctx context.Context, ids []uuid.UUID) ([]generated.Noder, error) {
	panic(fmt.Errorf("not implemented: Nodes - nodes"))
}

// Integrations is the resolver for the integrations field.
func (r *queryResolver) Integrations(ctx context.Context) ([]*generated.Integration, error) {
	panic(fmt.Errorf("not implemented: Integrations - integrations"))
}

// Memberships is the resolver for the memberships field.
func (r *queryResolver) Memberships(ctx context.Context) ([]*generated.Membership, error) {
	panic(fmt.Errorf("not implemented: Memberships - memberships"))
}

// Organizations is the resolver for the organizations field.
func (r *queryResolver) Organizations(ctx context.Context) ([]*generated.Organization, error) {
	panic(fmt.Errorf("not implemented: Organizations - organizations"))
}

// Sessions is the resolver for the sessions field.
func (r *queryResolver) Sessions(ctx context.Context) ([]*generated.Session, error) {
	panic(fmt.Errorf("not implemented: Sessions - sessions"))
}

// Users is the resolver for the users field.
func (r *queryResolver) Users(ctx context.Context) ([]*generated.User, error) {
	panic(fmt.Errorf("not implemented: Users - users"))
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
