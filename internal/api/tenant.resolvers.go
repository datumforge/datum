package api

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.40

import (
	"context"
	"fmt"

	"github.com/datumforge/datum/internal/ent/generated"
	"github.com/google/uuid"
)

// CreateTenant is the resolver for the createTenant field.
func (r *mutationResolver) CreateTenant(ctx context.Context, input generated.CreateTenantInput) (*TenantCreatePayload, error) {
	panic(fmt.Errorf("not implemented: CreateTenant - createTenant"))
}

// UpdateTenant is the resolver for the updateTenant field.
func (r *mutationResolver) UpdateTenant(ctx context.Context, id uuid.UUID, input generated.UpdateTenantInput) (*TenantUpdatePayload, error) {
	panic(fmt.Errorf("not implemented: UpdateTenant - updateTenant"))
}

// DeleteTenant is the resolver for the deleteTenant field.
func (r *mutationResolver) DeleteTenant(ctx context.Context, id uuid.UUID) (*TenantDeletePayload, error) {
	panic(fmt.Errorf("not implemented: DeleteTenant - deleteTenant"))
}

// Tenant is the resolver for the tenant field.
func (r *queryResolver) Tenant(ctx context.Context, id uuid.UUID) (*generated.Tenant, error) {
	panic(fmt.Errorf("not implemented: Tenant - tenant"))
}
