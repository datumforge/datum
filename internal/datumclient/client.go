// Code generated by github.com/Yamashou/gqlgenc, DO NOT EDIT.

package datumclient

import (
	"net/http"

	"github.com/Yamashou/gqlgenc/clientv2"
	"github.com/datumforge/datum/internal/ent/generated"
)

type DatumClient interface {
}

type Client struct {
	Client *clientv2.Client
}

func NewClient(cli *http.Client, baseURL string, options *clientv2.Options, interceptors ...clientv2.RequestInterceptor) DatumClient {
	return &Client{Client: clientv2.NewClient(cli, baseURL, options, interceptors...)}
}

type Query struct {
	Node               generated.Noder   "json:\"node,omitempty\" graphql:\"node\""
	Nodes              []generated.Noder "json:\"nodes\" graphql:\"nodes\""
	Groups             GroupConnection   "json:\"groups\" graphql:\"groups\""
	GroupSettingsSlice []*GroupSettings  "json:\"groupSettingsSlice\" graphql:\"groupSettingsSlice\""
	Integrations       []*Integration    "json:\"integrations\" graphql:\"integrations\""
	Memberships        []*Membership     "json:\"memberships\" graphql:\"memberships\""
	Organizations      []*Organization   "json:\"organizations\" graphql:\"organizations\""
	Sessions           []*Session        "json:\"sessions\" graphql:\"sessions\""
	Users              []*User           "json:\"users\" graphql:\"users\""
	Group              Group             "json:\"group\" graphql:\"group\""
	Integration        Integration       "json:\"integration\" graphql:\"integration\""
	Membership         Membership        "json:\"membership\" graphql:\"membership\""
	Organization       Organization      "json:\"organization\" graphql:\"organization\""
	Session            Session           "json:\"session\" graphql:\"session\""
	User               User              "json:\"user\" graphql:\"user\""
	Service            Service           "json:\"_service\" graphql:\"_service\""
}
type Mutation struct {
	CreateGroup        GroupCreatePayload        "json:\"createGroup\" graphql:\"createGroup\""
	UpdateGroup        GroupUpdatePayload        "json:\"updateGroup\" graphql:\"updateGroup\""
	DeleteGroup        GroupDeletePayload        "json:\"deleteGroup\" graphql:\"deleteGroup\""
	CreateIntegration  IntegrationCreatePayload  "json:\"createIntegration\" graphql:\"createIntegration\""
	UpdateIntegration  IntegrationUpdatePayload  "json:\"updateIntegration\" graphql:\"updateIntegration\""
	DeleteIntegration  IntegrationDeletePayload  "json:\"deleteIntegration\" graphql:\"deleteIntegration\""
	CreateMembership   MembershipCreatePayload   "json:\"createMembership\" graphql:\"createMembership\""
	UpdateMembership   MembershipUpdatePayload   "json:\"updateMembership\" graphql:\"updateMembership\""
	DeleteMembership   MembershipDeletePayload   "json:\"deleteMembership\" graphql:\"deleteMembership\""
	CreateOrganization OrganizationCreatePayload "json:\"createOrganization\" graphql:\"createOrganization\""
	UpdateOrganization OrganizationUpdatePayload "json:\"updateOrganization\" graphql:\"updateOrganization\""
	DeleteOrganization OrganizationDeletePayload "json:\"deleteOrganization\" graphql:\"deleteOrganization\""
	CreateSession      SessionCreatePayload      "json:\"createSession\" graphql:\"createSession\""
	UpdateSession      SessionUpdatePayload      "json:\"updateSession\" graphql:\"updateSession\""
	DeleteSession      SessionDeletePayload      "json:\"deleteSession\" graphql:\"deleteSession\""
	CreateUser         UserCreatePayload         "json:\"createUser\" graphql:\"createUser\""
	UpdateUser         UserUpdatePayload         "json:\"updateUser\" graphql:\"updateUser\""
	DeleteUser         UserDeletePayload         "json:\"deleteUser\" graphql:\"deleteUser\""
}
