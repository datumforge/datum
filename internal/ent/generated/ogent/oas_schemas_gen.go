// Code generated by ogen, DO NOT EDIT.

package ogent

import (
	"time"

	"github.com/go-faster/jx"
	"github.com/google/uuid"
)

type CreateIntegrationReq struct {
	Kind         string      `json:"kind"`
	Description  OptString   `json:"description"`
	SecretName   string      `json:"secret_name"`
	CreatedAt    time.Time   `json:"created_at"`
	DeletedAt    OptDateTime `json:"deleted_at"`
	Organization uuid.UUID   `json:"organization"`
}

// GetKind returns the value of Kind.
func (s *CreateIntegrationReq) GetKind() string {
	return s.Kind
}

// GetDescription returns the value of Description.
func (s *CreateIntegrationReq) GetDescription() OptString {
	return s.Description
}

// GetSecretName returns the value of SecretName.
func (s *CreateIntegrationReq) GetSecretName() string {
	return s.SecretName
}

// GetCreatedAt returns the value of CreatedAt.
func (s *CreateIntegrationReq) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetDeletedAt returns the value of DeletedAt.
func (s *CreateIntegrationReq) GetDeletedAt() OptDateTime {
	return s.DeletedAt
}

// GetOrganization returns the value of Organization.
func (s *CreateIntegrationReq) GetOrganization() uuid.UUID {
	return s.Organization
}

// SetKind sets the value of Kind.
func (s *CreateIntegrationReq) SetKind(val string) {
	s.Kind = val
}

// SetDescription sets the value of Description.
func (s *CreateIntegrationReq) SetDescription(val OptString) {
	s.Description = val
}

// SetSecretName sets the value of SecretName.
func (s *CreateIntegrationReq) SetSecretName(val string) {
	s.SecretName = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *CreateIntegrationReq) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetDeletedAt sets the value of DeletedAt.
func (s *CreateIntegrationReq) SetDeletedAt(val OptDateTime) {
	s.DeletedAt = val
}

// SetOrganization sets the value of Organization.
func (s *CreateIntegrationReq) SetOrganization(val uuid.UUID) {
	s.Organization = val
}

type CreateMembershipReq struct {
	Current      bool      `json:"current"`
	CreatedAt    time.Time `json:"created_at"`
	UpdatedAt    time.Time `json:"updated_at"`
	Organization uuid.UUID `json:"organization"`
	User         uuid.UUID `json:"user"`
}

// GetCurrent returns the value of Current.
func (s *CreateMembershipReq) GetCurrent() bool {
	return s.Current
}

// GetCreatedAt returns the value of CreatedAt.
func (s *CreateMembershipReq) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *CreateMembershipReq) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetOrganization returns the value of Organization.
func (s *CreateMembershipReq) GetOrganization() uuid.UUID {
	return s.Organization
}

// GetUser returns the value of User.
func (s *CreateMembershipReq) GetUser() uuid.UUID {
	return s.User
}

// SetCurrent sets the value of Current.
func (s *CreateMembershipReq) SetCurrent(val bool) {
	s.Current = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *CreateMembershipReq) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *CreateMembershipReq) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetOrganization sets the value of Organization.
func (s *CreateMembershipReq) SetOrganization(val uuid.UUID) {
	s.Organization = val
}

// SetUser sets the value of User.
func (s *CreateMembershipReq) SetUser(val uuid.UUID) {
	s.User = val
}

type CreateOrganizationReq struct {
	Name         string      `json:"name"`
	CreatedAt    time.Time   `json:"created_at"`
	Memberships  []uuid.UUID `json:"memberships"`
	Integrations []uuid.UUID `json:"integrations"`
}

// GetName returns the value of Name.
func (s *CreateOrganizationReq) GetName() string {
	return s.Name
}

// GetCreatedAt returns the value of CreatedAt.
func (s *CreateOrganizationReq) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetMemberships returns the value of Memberships.
func (s *CreateOrganizationReq) GetMemberships() []uuid.UUID {
	return s.Memberships
}

// GetIntegrations returns the value of Integrations.
func (s *CreateOrganizationReq) GetIntegrations() []uuid.UUID {
	return s.Integrations
}

// SetName sets the value of Name.
func (s *CreateOrganizationReq) SetName(val string) {
	s.Name = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *CreateOrganizationReq) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetMemberships sets the value of Memberships.
func (s *CreateOrganizationReq) SetMemberships(val []uuid.UUID) {
	s.Memberships = val
}

// SetIntegrations sets the value of Integrations.
func (s *CreateOrganizationReq) SetIntegrations(val []uuid.UUID) {
	s.Integrations = val
}

type CreateUserReq struct {
	Email       string      `json:"email"`
	CreatedAt   time.Time   `json:"created_at"`
	Memberships []uuid.UUID `json:"memberships"`
}

// GetEmail returns the value of Email.
func (s *CreateUserReq) GetEmail() string {
	return s.Email
}

// GetCreatedAt returns the value of CreatedAt.
func (s *CreateUserReq) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetMemberships returns the value of Memberships.
func (s *CreateUserReq) GetMemberships() []uuid.UUID {
	return s.Memberships
}

// SetEmail sets the value of Email.
func (s *CreateUserReq) SetEmail(val string) {
	s.Email = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *CreateUserReq) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetMemberships sets the value of Memberships.
func (s *CreateUserReq) SetMemberships(val []uuid.UUID) {
	s.Memberships = val
}

// DeleteIntegrationNoContent is response for DeleteIntegration operation.
type DeleteIntegrationNoContent struct{}

func (*DeleteIntegrationNoContent) deleteIntegrationRes() {}

// DeleteMembershipNoContent is response for DeleteMembership operation.
type DeleteMembershipNoContent struct{}

func (*DeleteMembershipNoContent) deleteMembershipRes() {}

// DeleteOrganizationNoContent is response for DeleteOrganization operation.
type DeleteOrganizationNoContent struct{}

func (*DeleteOrganizationNoContent) deleteOrganizationRes() {}

// DeleteUserNoContent is response for DeleteUser operation.
type DeleteUserNoContent struct{}

func (*DeleteUserNoContent) deleteUserRes() {}

// Ref: #/components/schemas/IntegrationCreate
type IntegrationCreate struct {
	ID          uuid.UUID   `json:"id"`
	Kind        string      `json:"kind"`
	Description OptString   `json:"description"`
	SecretName  string      `json:"secret_name"`
	CreatedAt   time.Time   `json:"created_at"`
	DeletedAt   OptDateTime `json:"deleted_at"`
}

// GetID returns the value of ID.
func (s *IntegrationCreate) GetID() uuid.UUID {
	return s.ID
}

// GetKind returns the value of Kind.
func (s *IntegrationCreate) GetKind() string {
	return s.Kind
}

// GetDescription returns the value of Description.
func (s *IntegrationCreate) GetDescription() OptString {
	return s.Description
}

// GetSecretName returns the value of SecretName.
func (s *IntegrationCreate) GetSecretName() string {
	return s.SecretName
}

// GetCreatedAt returns the value of CreatedAt.
func (s *IntegrationCreate) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetDeletedAt returns the value of DeletedAt.
func (s *IntegrationCreate) GetDeletedAt() OptDateTime {
	return s.DeletedAt
}

// SetID sets the value of ID.
func (s *IntegrationCreate) SetID(val uuid.UUID) {
	s.ID = val
}

// SetKind sets the value of Kind.
func (s *IntegrationCreate) SetKind(val string) {
	s.Kind = val
}

// SetDescription sets the value of Description.
func (s *IntegrationCreate) SetDescription(val OptString) {
	s.Description = val
}

// SetSecretName sets the value of SecretName.
func (s *IntegrationCreate) SetSecretName(val string) {
	s.SecretName = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *IntegrationCreate) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetDeletedAt sets the value of DeletedAt.
func (s *IntegrationCreate) SetDeletedAt(val OptDateTime) {
	s.DeletedAt = val
}

func (*IntegrationCreate) createIntegrationRes() {}

// Ref: #/components/schemas/IntegrationList
type IntegrationList struct {
	ID          uuid.UUID   `json:"id"`
	Kind        string      `json:"kind"`
	Description OptString   `json:"description"`
	SecretName  string      `json:"secret_name"`
	CreatedAt   time.Time   `json:"created_at"`
	DeletedAt   OptDateTime `json:"deleted_at"`
}

// GetID returns the value of ID.
func (s *IntegrationList) GetID() uuid.UUID {
	return s.ID
}

// GetKind returns the value of Kind.
func (s *IntegrationList) GetKind() string {
	return s.Kind
}

// GetDescription returns the value of Description.
func (s *IntegrationList) GetDescription() OptString {
	return s.Description
}

// GetSecretName returns the value of SecretName.
func (s *IntegrationList) GetSecretName() string {
	return s.SecretName
}

// GetCreatedAt returns the value of CreatedAt.
func (s *IntegrationList) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetDeletedAt returns the value of DeletedAt.
func (s *IntegrationList) GetDeletedAt() OptDateTime {
	return s.DeletedAt
}

// SetID sets the value of ID.
func (s *IntegrationList) SetID(val uuid.UUID) {
	s.ID = val
}

// SetKind sets the value of Kind.
func (s *IntegrationList) SetKind(val string) {
	s.Kind = val
}

// SetDescription sets the value of Description.
func (s *IntegrationList) SetDescription(val OptString) {
	s.Description = val
}

// SetSecretName sets the value of SecretName.
func (s *IntegrationList) SetSecretName(val string) {
	s.SecretName = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *IntegrationList) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetDeletedAt sets the value of DeletedAt.
func (s *IntegrationList) SetDeletedAt(val OptDateTime) {
	s.DeletedAt = val
}

// Ref: #/components/schemas/Integration_OrganizationRead
type IntegrationOrganizationRead struct {
	ID        uuid.UUID `json:"id"`
	Name      string    `json:"name"`
	CreatedAt time.Time `json:"created_at"`
}

// GetID returns the value of ID.
func (s *IntegrationOrganizationRead) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *IntegrationOrganizationRead) GetName() string {
	return s.Name
}

// GetCreatedAt returns the value of CreatedAt.
func (s *IntegrationOrganizationRead) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *IntegrationOrganizationRead) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *IntegrationOrganizationRead) SetName(val string) {
	s.Name = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *IntegrationOrganizationRead) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

func (*IntegrationOrganizationRead) readIntegrationOrganizationRes() {}

// Ref: #/components/schemas/IntegrationRead
type IntegrationRead struct {
	ID          uuid.UUID   `json:"id"`
	Kind        string      `json:"kind"`
	Description OptString   `json:"description"`
	SecretName  string      `json:"secret_name"`
	CreatedAt   time.Time   `json:"created_at"`
	DeletedAt   OptDateTime `json:"deleted_at"`
}

// GetID returns the value of ID.
func (s *IntegrationRead) GetID() uuid.UUID {
	return s.ID
}

// GetKind returns the value of Kind.
func (s *IntegrationRead) GetKind() string {
	return s.Kind
}

// GetDescription returns the value of Description.
func (s *IntegrationRead) GetDescription() OptString {
	return s.Description
}

// GetSecretName returns the value of SecretName.
func (s *IntegrationRead) GetSecretName() string {
	return s.SecretName
}

// GetCreatedAt returns the value of CreatedAt.
func (s *IntegrationRead) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetDeletedAt returns the value of DeletedAt.
func (s *IntegrationRead) GetDeletedAt() OptDateTime {
	return s.DeletedAt
}

// SetID sets the value of ID.
func (s *IntegrationRead) SetID(val uuid.UUID) {
	s.ID = val
}

// SetKind sets the value of Kind.
func (s *IntegrationRead) SetKind(val string) {
	s.Kind = val
}

// SetDescription sets the value of Description.
func (s *IntegrationRead) SetDescription(val OptString) {
	s.Description = val
}

// SetSecretName sets the value of SecretName.
func (s *IntegrationRead) SetSecretName(val string) {
	s.SecretName = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *IntegrationRead) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetDeletedAt sets the value of DeletedAt.
func (s *IntegrationRead) SetDeletedAt(val OptDateTime) {
	s.DeletedAt = val
}

func (*IntegrationRead) readIntegrationRes() {}

// Ref: #/components/schemas/IntegrationUpdate
type IntegrationUpdate struct {
	ID          uuid.UUID   `json:"id"`
	Kind        string      `json:"kind"`
	Description OptString   `json:"description"`
	SecretName  string      `json:"secret_name"`
	CreatedAt   time.Time   `json:"created_at"`
	DeletedAt   OptDateTime `json:"deleted_at"`
}

// GetID returns the value of ID.
func (s *IntegrationUpdate) GetID() uuid.UUID {
	return s.ID
}

// GetKind returns the value of Kind.
func (s *IntegrationUpdate) GetKind() string {
	return s.Kind
}

// GetDescription returns the value of Description.
func (s *IntegrationUpdate) GetDescription() OptString {
	return s.Description
}

// GetSecretName returns the value of SecretName.
func (s *IntegrationUpdate) GetSecretName() string {
	return s.SecretName
}

// GetCreatedAt returns the value of CreatedAt.
func (s *IntegrationUpdate) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetDeletedAt returns the value of DeletedAt.
func (s *IntegrationUpdate) GetDeletedAt() OptDateTime {
	return s.DeletedAt
}

// SetID sets the value of ID.
func (s *IntegrationUpdate) SetID(val uuid.UUID) {
	s.ID = val
}

// SetKind sets the value of Kind.
func (s *IntegrationUpdate) SetKind(val string) {
	s.Kind = val
}

// SetDescription sets the value of Description.
func (s *IntegrationUpdate) SetDescription(val OptString) {
	s.Description = val
}

// SetSecretName sets the value of SecretName.
func (s *IntegrationUpdate) SetSecretName(val string) {
	s.SecretName = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *IntegrationUpdate) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetDeletedAt sets the value of DeletedAt.
func (s *IntegrationUpdate) SetDeletedAt(val OptDateTime) {
	s.DeletedAt = val
}

func (*IntegrationUpdate) updateIntegrationRes() {}

type ListIntegrationOKApplicationJSON []IntegrationList

func (*ListIntegrationOKApplicationJSON) listIntegrationRes() {}

type ListMembershipOKApplicationJSON []MembershipList

func (*ListMembershipOKApplicationJSON) listMembershipRes() {}

type ListOrganizationIntegrationsOKApplicationJSON []OrganizationIntegrationsList

func (*ListOrganizationIntegrationsOKApplicationJSON) listOrganizationIntegrationsRes() {}

type ListOrganizationMembershipsOKApplicationJSON []OrganizationMembershipsList

func (*ListOrganizationMembershipsOKApplicationJSON) listOrganizationMembershipsRes() {}

type ListOrganizationOKApplicationJSON []OrganizationList

func (*ListOrganizationOKApplicationJSON) listOrganizationRes() {}

type ListUserMembershipsOKApplicationJSON []UserMembershipsList

func (*ListUserMembershipsOKApplicationJSON) listUserMembershipsRes() {}

type ListUserOKApplicationJSON []UserList

func (*ListUserOKApplicationJSON) listUserRes() {}

// Ref: #/components/schemas/MembershipCreate
type MembershipCreate struct {
	ID        uuid.UUID `json:"id"`
	Current   bool      `json:"current"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *MembershipCreate) GetID() uuid.UUID {
	return s.ID
}

// GetCurrent returns the value of Current.
func (s *MembershipCreate) GetCurrent() bool {
	return s.Current
}

// GetCreatedAt returns the value of CreatedAt.
func (s *MembershipCreate) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *MembershipCreate) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *MembershipCreate) SetID(val uuid.UUID) {
	s.ID = val
}

// SetCurrent sets the value of Current.
func (s *MembershipCreate) SetCurrent(val bool) {
	s.Current = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *MembershipCreate) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *MembershipCreate) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

func (*MembershipCreate) createMembershipRes() {}

// Ref: #/components/schemas/MembershipList
type MembershipList struct {
	ID        uuid.UUID `json:"id"`
	Current   bool      `json:"current"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *MembershipList) GetID() uuid.UUID {
	return s.ID
}

// GetCurrent returns the value of Current.
func (s *MembershipList) GetCurrent() bool {
	return s.Current
}

// GetCreatedAt returns the value of CreatedAt.
func (s *MembershipList) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *MembershipList) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *MembershipList) SetID(val uuid.UUID) {
	s.ID = val
}

// SetCurrent sets the value of Current.
func (s *MembershipList) SetCurrent(val bool) {
	s.Current = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *MembershipList) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *MembershipList) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/Membership_OrganizationRead
type MembershipOrganizationRead struct {
	ID        uuid.UUID `json:"id"`
	Name      string    `json:"name"`
	CreatedAt time.Time `json:"created_at"`
}

// GetID returns the value of ID.
func (s *MembershipOrganizationRead) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *MembershipOrganizationRead) GetName() string {
	return s.Name
}

// GetCreatedAt returns the value of CreatedAt.
func (s *MembershipOrganizationRead) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *MembershipOrganizationRead) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *MembershipOrganizationRead) SetName(val string) {
	s.Name = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *MembershipOrganizationRead) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

func (*MembershipOrganizationRead) readMembershipOrganizationRes() {}

// Ref: #/components/schemas/MembershipRead
type MembershipRead struct {
	ID        uuid.UUID `json:"id"`
	Current   bool      `json:"current"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *MembershipRead) GetID() uuid.UUID {
	return s.ID
}

// GetCurrent returns the value of Current.
func (s *MembershipRead) GetCurrent() bool {
	return s.Current
}

// GetCreatedAt returns the value of CreatedAt.
func (s *MembershipRead) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *MembershipRead) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *MembershipRead) SetID(val uuid.UUID) {
	s.ID = val
}

// SetCurrent sets the value of Current.
func (s *MembershipRead) SetCurrent(val bool) {
	s.Current = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *MembershipRead) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *MembershipRead) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

func (*MembershipRead) readMembershipRes() {}

// Ref: #/components/schemas/MembershipUpdate
type MembershipUpdate struct {
	ID        uuid.UUID `json:"id"`
	Current   bool      `json:"current"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *MembershipUpdate) GetID() uuid.UUID {
	return s.ID
}

// GetCurrent returns the value of Current.
func (s *MembershipUpdate) GetCurrent() bool {
	return s.Current
}

// GetCreatedAt returns the value of CreatedAt.
func (s *MembershipUpdate) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *MembershipUpdate) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *MembershipUpdate) SetID(val uuid.UUID) {
	s.ID = val
}

// SetCurrent sets the value of Current.
func (s *MembershipUpdate) SetCurrent(val bool) {
	s.Current = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *MembershipUpdate) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *MembershipUpdate) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

func (*MembershipUpdate) updateMembershipRes() {}

// Ref: #/components/schemas/Membership_UserRead
type MembershipUserRead struct {
	ID        uuid.UUID `json:"id"`
	Email     string    `json:"email"`
	CreatedAt time.Time `json:"created_at"`
}

// GetID returns the value of ID.
func (s *MembershipUserRead) GetID() uuid.UUID {
	return s.ID
}

// GetEmail returns the value of Email.
func (s *MembershipUserRead) GetEmail() string {
	return s.Email
}

// GetCreatedAt returns the value of CreatedAt.
func (s *MembershipUserRead) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *MembershipUserRead) SetID(val uuid.UUID) {
	s.ID = val
}

// SetEmail sets the value of Email.
func (s *MembershipUserRead) SetEmail(val string) {
	s.Email = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *MembershipUserRead) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

func (*MembershipUserRead) readMembershipUserRes() {}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUUID returns new OptUUID with value set to v.
func NewOptUUID(v uuid.UUID) OptUUID {
	return OptUUID{
		Value: v,
		Set:   true,
	}
}

// OptUUID is optional uuid.UUID.
type OptUUID struct {
	Value uuid.UUID
	Set   bool
}

// IsSet returns true if OptUUID was set.
func (o OptUUID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUUID) Reset() {
	var v uuid.UUID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUUID) SetTo(v uuid.UUID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUUID) Get() (v uuid.UUID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUUID) Or(d uuid.UUID) uuid.UUID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/OrganizationCreate
type OrganizationCreate struct {
	ID        uuid.UUID `json:"id"`
	Name      string    `json:"name"`
	CreatedAt time.Time `json:"created_at"`
}

// GetID returns the value of ID.
func (s *OrganizationCreate) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *OrganizationCreate) GetName() string {
	return s.Name
}

// GetCreatedAt returns the value of CreatedAt.
func (s *OrganizationCreate) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *OrganizationCreate) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *OrganizationCreate) SetName(val string) {
	s.Name = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *OrganizationCreate) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

func (*OrganizationCreate) createOrganizationRes() {}

// Ref: #/components/schemas/Organization_IntegrationsList
type OrganizationIntegrationsList struct {
	ID          uuid.UUID   `json:"id"`
	Kind        string      `json:"kind"`
	Description OptString   `json:"description"`
	SecretName  string      `json:"secret_name"`
	CreatedAt   time.Time   `json:"created_at"`
	DeletedAt   OptDateTime `json:"deleted_at"`
}

// GetID returns the value of ID.
func (s *OrganizationIntegrationsList) GetID() uuid.UUID {
	return s.ID
}

// GetKind returns the value of Kind.
func (s *OrganizationIntegrationsList) GetKind() string {
	return s.Kind
}

// GetDescription returns the value of Description.
func (s *OrganizationIntegrationsList) GetDescription() OptString {
	return s.Description
}

// GetSecretName returns the value of SecretName.
func (s *OrganizationIntegrationsList) GetSecretName() string {
	return s.SecretName
}

// GetCreatedAt returns the value of CreatedAt.
func (s *OrganizationIntegrationsList) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetDeletedAt returns the value of DeletedAt.
func (s *OrganizationIntegrationsList) GetDeletedAt() OptDateTime {
	return s.DeletedAt
}

// SetID sets the value of ID.
func (s *OrganizationIntegrationsList) SetID(val uuid.UUID) {
	s.ID = val
}

// SetKind sets the value of Kind.
func (s *OrganizationIntegrationsList) SetKind(val string) {
	s.Kind = val
}

// SetDescription sets the value of Description.
func (s *OrganizationIntegrationsList) SetDescription(val OptString) {
	s.Description = val
}

// SetSecretName sets the value of SecretName.
func (s *OrganizationIntegrationsList) SetSecretName(val string) {
	s.SecretName = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *OrganizationIntegrationsList) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetDeletedAt sets the value of DeletedAt.
func (s *OrganizationIntegrationsList) SetDeletedAt(val OptDateTime) {
	s.DeletedAt = val
}

// Ref: #/components/schemas/OrganizationList
type OrganizationList struct {
	ID        uuid.UUID `json:"id"`
	Name      string    `json:"name"`
	CreatedAt time.Time `json:"created_at"`
}

// GetID returns the value of ID.
func (s *OrganizationList) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *OrganizationList) GetName() string {
	return s.Name
}

// GetCreatedAt returns the value of CreatedAt.
func (s *OrganizationList) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *OrganizationList) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *OrganizationList) SetName(val string) {
	s.Name = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *OrganizationList) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// Ref: #/components/schemas/Organization_MembershipsList
type OrganizationMembershipsList struct {
	ID        uuid.UUID `json:"id"`
	Current   bool      `json:"current"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *OrganizationMembershipsList) GetID() uuid.UUID {
	return s.ID
}

// GetCurrent returns the value of Current.
func (s *OrganizationMembershipsList) GetCurrent() bool {
	return s.Current
}

// GetCreatedAt returns the value of CreatedAt.
func (s *OrganizationMembershipsList) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *OrganizationMembershipsList) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *OrganizationMembershipsList) SetID(val uuid.UUID) {
	s.ID = val
}

// SetCurrent sets the value of Current.
func (s *OrganizationMembershipsList) SetCurrent(val bool) {
	s.Current = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *OrganizationMembershipsList) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *OrganizationMembershipsList) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/OrganizationRead
type OrganizationRead struct {
	ID        uuid.UUID `json:"id"`
	Name      string    `json:"name"`
	CreatedAt time.Time `json:"created_at"`
}

// GetID returns the value of ID.
func (s *OrganizationRead) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *OrganizationRead) GetName() string {
	return s.Name
}

// GetCreatedAt returns the value of CreatedAt.
func (s *OrganizationRead) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *OrganizationRead) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *OrganizationRead) SetName(val string) {
	s.Name = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *OrganizationRead) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

func (*OrganizationRead) readOrganizationRes() {}

// Ref: #/components/schemas/OrganizationUpdate
type OrganizationUpdate struct {
	ID        uuid.UUID `json:"id"`
	Name      string    `json:"name"`
	CreatedAt time.Time `json:"created_at"`
}

// GetID returns the value of ID.
func (s *OrganizationUpdate) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *OrganizationUpdate) GetName() string {
	return s.Name
}

// GetCreatedAt returns the value of CreatedAt.
func (s *OrganizationUpdate) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *OrganizationUpdate) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *OrganizationUpdate) SetName(val string) {
	s.Name = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *OrganizationUpdate) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

func (*OrganizationUpdate) updateOrganizationRes() {}

type R400 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R400) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R400) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R400) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R400) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R400) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R400) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R400) createIntegrationRes()            {}
func (*R400) createMembershipRes()             {}
func (*R400) createOrganizationRes()           {}
func (*R400) createUserRes()                   {}
func (*R400) deleteIntegrationRes()            {}
func (*R400) deleteMembershipRes()             {}
func (*R400) deleteOrganizationRes()           {}
func (*R400) deleteUserRes()                   {}
func (*R400) listIntegrationRes()              {}
func (*R400) listMembershipRes()               {}
func (*R400) listOrganizationIntegrationsRes() {}
func (*R400) listOrganizationMembershipsRes()  {}
func (*R400) listOrganizationRes()             {}
func (*R400) listUserMembershipsRes()          {}
func (*R400) listUserRes()                     {}
func (*R400) readIntegrationOrganizationRes()  {}
func (*R400) readIntegrationRes()              {}
func (*R400) readMembershipOrganizationRes()   {}
func (*R400) readMembershipRes()               {}
func (*R400) readMembershipUserRes()           {}
func (*R400) readOrganizationRes()             {}
func (*R400) readUserRes()                     {}
func (*R400) updateIntegrationRes()            {}
func (*R400) updateMembershipRes()             {}
func (*R400) updateOrganizationRes()           {}
func (*R400) updateUserRes()                   {}

type R404 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R404) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R404) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R404) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R404) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R404) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R404) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R404) deleteIntegrationRes()            {}
func (*R404) deleteMembershipRes()             {}
func (*R404) deleteOrganizationRes()           {}
func (*R404) deleteUserRes()                   {}
func (*R404) listIntegrationRes()              {}
func (*R404) listMembershipRes()               {}
func (*R404) listOrganizationIntegrationsRes() {}
func (*R404) listOrganizationMembershipsRes()  {}
func (*R404) listOrganizationRes()             {}
func (*R404) listUserMembershipsRes()          {}
func (*R404) listUserRes()                     {}
func (*R404) readIntegrationOrganizationRes()  {}
func (*R404) readIntegrationRes()              {}
func (*R404) readMembershipOrganizationRes()   {}
func (*R404) readMembershipRes()               {}
func (*R404) readMembershipUserRes()           {}
func (*R404) readOrganizationRes()             {}
func (*R404) readUserRes()                     {}
func (*R404) updateIntegrationRes()            {}
func (*R404) updateMembershipRes()             {}
func (*R404) updateOrganizationRes()           {}
func (*R404) updateUserRes()                   {}

type R409 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R409) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R409) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R409) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R409) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R409) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R409) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R409) createIntegrationRes()            {}
func (*R409) createMembershipRes()             {}
func (*R409) createOrganizationRes()           {}
func (*R409) createUserRes()                   {}
func (*R409) deleteIntegrationRes()            {}
func (*R409) deleteMembershipRes()             {}
func (*R409) deleteOrganizationRes()           {}
func (*R409) deleteUserRes()                   {}
func (*R409) listIntegrationRes()              {}
func (*R409) listMembershipRes()               {}
func (*R409) listOrganizationIntegrationsRes() {}
func (*R409) listOrganizationMembershipsRes()  {}
func (*R409) listOrganizationRes()             {}
func (*R409) listUserMembershipsRes()          {}
func (*R409) listUserRes()                     {}
func (*R409) readIntegrationOrganizationRes()  {}
func (*R409) readIntegrationRes()              {}
func (*R409) readMembershipOrganizationRes()   {}
func (*R409) readMembershipRes()               {}
func (*R409) readMembershipUserRes()           {}
func (*R409) readOrganizationRes()             {}
func (*R409) readUserRes()                     {}
func (*R409) updateIntegrationRes()            {}
func (*R409) updateMembershipRes()             {}
func (*R409) updateOrganizationRes()           {}
func (*R409) updateUserRes()                   {}

type R500 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R500) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R500) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R500) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R500) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R500) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R500) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R500) createIntegrationRes()            {}
func (*R500) createMembershipRes()             {}
func (*R500) createOrganizationRes()           {}
func (*R500) createUserRes()                   {}
func (*R500) deleteIntegrationRes()            {}
func (*R500) deleteMembershipRes()             {}
func (*R500) deleteOrganizationRes()           {}
func (*R500) deleteUserRes()                   {}
func (*R500) listIntegrationRes()              {}
func (*R500) listMembershipRes()               {}
func (*R500) listOrganizationIntegrationsRes() {}
func (*R500) listOrganizationMembershipsRes()  {}
func (*R500) listOrganizationRes()             {}
func (*R500) listUserMembershipsRes()          {}
func (*R500) listUserRes()                     {}
func (*R500) readIntegrationOrganizationRes()  {}
func (*R500) readIntegrationRes()              {}
func (*R500) readMembershipOrganizationRes()   {}
func (*R500) readMembershipRes()               {}
func (*R500) readMembershipUserRes()           {}
func (*R500) readOrganizationRes()             {}
func (*R500) readUserRes()                     {}
func (*R500) updateIntegrationRes()            {}
func (*R500) updateMembershipRes()             {}
func (*R500) updateOrganizationRes()           {}
func (*R500) updateUserRes()                   {}

type UpdateIntegrationReq struct {
	Description  OptString   `json:"description"`
	DeletedAt    OptDateTime `json:"deleted_at"`
	Organization OptUUID     `json:"organization"`
}

// GetDescription returns the value of Description.
func (s *UpdateIntegrationReq) GetDescription() OptString {
	return s.Description
}

// GetDeletedAt returns the value of DeletedAt.
func (s *UpdateIntegrationReq) GetDeletedAt() OptDateTime {
	return s.DeletedAt
}

// GetOrganization returns the value of Organization.
func (s *UpdateIntegrationReq) GetOrganization() OptUUID {
	return s.Organization
}

// SetDescription sets the value of Description.
func (s *UpdateIntegrationReq) SetDescription(val OptString) {
	s.Description = val
}

// SetDeletedAt sets the value of DeletedAt.
func (s *UpdateIntegrationReq) SetDeletedAt(val OptDateTime) {
	s.DeletedAt = val
}

// SetOrganization sets the value of Organization.
func (s *UpdateIntegrationReq) SetOrganization(val OptUUID) {
	s.Organization = val
}

type UpdateMembershipReq struct {
	Current      OptBool     `json:"current"`
	UpdatedAt    OptDateTime `json:"updated_at"`
	Organization OptUUID     `json:"organization"`
	User         OptUUID     `json:"user"`
}

// GetCurrent returns the value of Current.
func (s *UpdateMembershipReq) GetCurrent() OptBool {
	return s.Current
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *UpdateMembershipReq) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// GetOrganization returns the value of Organization.
func (s *UpdateMembershipReq) GetOrganization() OptUUID {
	return s.Organization
}

// GetUser returns the value of User.
func (s *UpdateMembershipReq) GetUser() OptUUID {
	return s.User
}

// SetCurrent sets the value of Current.
func (s *UpdateMembershipReq) SetCurrent(val OptBool) {
	s.Current = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *UpdateMembershipReq) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

// SetOrganization sets the value of Organization.
func (s *UpdateMembershipReq) SetOrganization(val OptUUID) {
	s.Organization = val
}

// SetUser sets the value of User.
func (s *UpdateMembershipReq) SetUser(val OptUUID) {
	s.User = val
}

type UpdateOrganizationReq struct {
	Name         OptString   `json:"name"`
	Memberships  []uuid.UUID `json:"memberships"`
	Integrations []uuid.UUID `json:"integrations"`
}

// GetName returns the value of Name.
func (s *UpdateOrganizationReq) GetName() OptString {
	return s.Name
}

// GetMemberships returns the value of Memberships.
func (s *UpdateOrganizationReq) GetMemberships() []uuid.UUID {
	return s.Memberships
}

// GetIntegrations returns the value of Integrations.
func (s *UpdateOrganizationReq) GetIntegrations() []uuid.UUID {
	return s.Integrations
}

// SetName sets the value of Name.
func (s *UpdateOrganizationReq) SetName(val OptString) {
	s.Name = val
}

// SetMemberships sets the value of Memberships.
func (s *UpdateOrganizationReq) SetMemberships(val []uuid.UUID) {
	s.Memberships = val
}

// SetIntegrations sets the value of Integrations.
func (s *UpdateOrganizationReq) SetIntegrations(val []uuid.UUID) {
	s.Integrations = val
}

type UpdateUserReq struct {
	Email       OptString   `json:"email"`
	Memberships []uuid.UUID `json:"memberships"`
}

// GetEmail returns the value of Email.
func (s *UpdateUserReq) GetEmail() OptString {
	return s.Email
}

// GetMemberships returns the value of Memberships.
func (s *UpdateUserReq) GetMemberships() []uuid.UUID {
	return s.Memberships
}

// SetEmail sets the value of Email.
func (s *UpdateUserReq) SetEmail(val OptString) {
	s.Email = val
}

// SetMemberships sets the value of Memberships.
func (s *UpdateUserReq) SetMemberships(val []uuid.UUID) {
	s.Memberships = val
}

// Ref: #/components/schemas/UserCreate
type UserCreate struct {
	ID        uuid.UUID `json:"id"`
	Email     string    `json:"email"`
	CreatedAt time.Time `json:"created_at"`
}

// GetID returns the value of ID.
func (s *UserCreate) GetID() uuid.UUID {
	return s.ID
}

// GetEmail returns the value of Email.
func (s *UserCreate) GetEmail() string {
	return s.Email
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserCreate) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *UserCreate) SetID(val uuid.UUID) {
	s.ID = val
}

// SetEmail sets the value of Email.
func (s *UserCreate) SetEmail(val string) {
	s.Email = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserCreate) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

func (*UserCreate) createUserRes() {}

// Ref: #/components/schemas/UserList
type UserList struct {
	ID        uuid.UUID `json:"id"`
	Email     string    `json:"email"`
	CreatedAt time.Time `json:"created_at"`
}

// GetID returns the value of ID.
func (s *UserList) GetID() uuid.UUID {
	return s.ID
}

// GetEmail returns the value of Email.
func (s *UserList) GetEmail() string {
	return s.Email
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserList) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *UserList) SetID(val uuid.UUID) {
	s.ID = val
}

// SetEmail sets the value of Email.
func (s *UserList) SetEmail(val string) {
	s.Email = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserList) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// Ref: #/components/schemas/User_MembershipsList
type UserMembershipsList struct {
	ID        uuid.UUID `json:"id"`
	Current   bool      `json:"current"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *UserMembershipsList) GetID() uuid.UUID {
	return s.ID
}

// GetCurrent returns the value of Current.
func (s *UserMembershipsList) GetCurrent() bool {
	return s.Current
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserMembershipsList) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *UserMembershipsList) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *UserMembershipsList) SetID(val uuid.UUID) {
	s.ID = val
}

// SetCurrent sets the value of Current.
func (s *UserMembershipsList) SetCurrent(val bool) {
	s.Current = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserMembershipsList) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *UserMembershipsList) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/UserRead
type UserRead struct {
	ID        uuid.UUID `json:"id"`
	Email     string    `json:"email"`
	CreatedAt time.Time `json:"created_at"`
}

// GetID returns the value of ID.
func (s *UserRead) GetID() uuid.UUID {
	return s.ID
}

// GetEmail returns the value of Email.
func (s *UserRead) GetEmail() string {
	return s.Email
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserRead) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *UserRead) SetID(val uuid.UUID) {
	s.ID = val
}

// SetEmail sets the value of Email.
func (s *UserRead) SetEmail(val string) {
	s.Email = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserRead) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

func (*UserRead) readUserRes() {}

// Ref: #/components/schemas/UserUpdate
type UserUpdate struct {
	ID        uuid.UUID `json:"id"`
	Email     string    `json:"email"`
	CreatedAt time.Time `json:"created_at"`
}

// GetID returns the value of ID.
func (s *UserUpdate) GetID() uuid.UUID {
	return s.ID
}

// GetEmail returns the value of Email.
func (s *UserUpdate) GetEmail() string {
	return s.Email
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserUpdate) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *UserUpdate) SetID(val uuid.UUID) {
	s.ID = val
}

// SetEmail sets the value of Email.
func (s *UserUpdate) SetEmail(val string) {
	s.Email = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserUpdate) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

func (*UserUpdate) updateUserRes() {}
