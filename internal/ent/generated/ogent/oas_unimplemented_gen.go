// Code generated by ogen, DO NOT EDIT.

package ogent

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// CreateGroup implements createGroup operation.
//
// Creates a new Group and persists it to storage.
//
// POST /groups
func (UnimplementedHandler) CreateGroup(ctx context.Context, req *CreateGroupReq) (r CreateGroupRes, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateGroupSettings implements createGroupSettings operation.
//
// Creates a new GroupSettings and persists it to storage.
//
// POST /group-settings
func (UnimplementedHandler) CreateGroupSettings(ctx context.Context, req *CreateGroupSettingsReq) (r CreateGroupSettingsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateIntegration implements createIntegration operation.
//
// Creates a new Integration and persists it to storage.
//
// POST /integrations
func (UnimplementedHandler) CreateIntegration(ctx context.Context, req *CreateIntegrationReq) (r CreateIntegrationRes, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateOrganization implements createOrganization operation.
//
// Creates a new Organization and persists it to storage.
//
// POST /organizations
func (UnimplementedHandler) CreateOrganization(ctx context.Context, req *CreateOrganizationReq) (r CreateOrganizationRes, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateRefreshToken implements createRefreshToken operation.
//
// Creates a new RefreshToken and persists it to storage.
//
// POST /refresh-tokens
func (UnimplementedHandler) CreateRefreshToken(ctx context.Context, req *CreateRefreshTokenReq) (r CreateRefreshTokenRes, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateSession implements createSession operation.
//
// Creates a new Session and persists it to storage.
//
// POST /sessions
func (UnimplementedHandler) CreateSession(ctx context.Context, req *CreateSessionReq) (r CreateSessionRes, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateUser implements createUser operation.
//
// Creates a new User and persists it to storage.
//
// POST /users
func (UnimplementedHandler) CreateUser(ctx context.Context, req *CreateUserReq) (r CreateUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteGroup implements deleteGroup operation.
//
// Deletes the Group with the requested ID.
//
// DELETE /groups/{id}
func (UnimplementedHandler) DeleteGroup(ctx context.Context, params DeleteGroupParams) (r DeleteGroupRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteGroupSettings implements deleteGroupSettings operation.
//
// Deletes the GroupSettings with the requested ID.
//
// DELETE /group-settings/{id}
func (UnimplementedHandler) DeleteGroupSettings(ctx context.Context, params DeleteGroupSettingsParams) (r DeleteGroupSettingsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteIntegration implements deleteIntegration operation.
//
// Deletes the Integration with the requested ID.
//
// DELETE /integrations/{id}
func (UnimplementedHandler) DeleteIntegration(ctx context.Context, params DeleteIntegrationParams) (r DeleteIntegrationRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteOrganization implements deleteOrganization operation.
//
// Deletes the Organization with the requested ID.
//
// DELETE /organizations/{id}
func (UnimplementedHandler) DeleteOrganization(ctx context.Context, params DeleteOrganizationParams) (r DeleteOrganizationRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteRefreshToken implements deleteRefreshToken operation.
//
// Deletes the RefreshToken with the requested ID.
//
// DELETE /refresh-tokens/{id}
func (UnimplementedHandler) DeleteRefreshToken(ctx context.Context, params DeleteRefreshTokenParams) (r DeleteRefreshTokenRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteSession implements deleteSession operation.
//
// Deletes the Session with the requested ID.
//
// DELETE /sessions/{id}
func (UnimplementedHandler) DeleteSession(ctx context.Context, params DeleteSessionParams) (r DeleteSessionRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteUser implements deleteUser operation.
//
// Deletes the User with the requested ID.
//
// DELETE /users/{id}
func (UnimplementedHandler) DeleteUser(ctx context.Context, params DeleteUserParams) (r DeleteUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListGroup implements listGroup operation.
//
// List Groups.
//
// GET /groups
func (UnimplementedHandler) ListGroup(ctx context.Context, params ListGroupParams) (r ListGroupRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListGroupSettings implements listGroupSettings operation.
//
// List GroupSettings.
//
// GET /group-settings
func (UnimplementedHandler) ListGroupSettings(ctx context.Context, params ListGroupSettingsParams) (r ListGroupSettingsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListGroupUsers implements listGroupUsers operation.
//
// List attached Users.
//
// GET /groups/{id}/users
func (UnimplementedHandler) ListGroupUsers(ctx context.Context, params ListGroupUsersParams) (r ListGroupUsersRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListIntegration implements listIntegration operation.
//
// List Integrations.
//
// GET /integrations
func (UnimplementedHandler) ListIntegration(ctx context.Context, params ListIntegrationParams) (r ListIntegrationRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListOrganization implements listOrganization operation.
//
// List Organizations.
//
// GET /organizations
func (UnimplementedHandler) ListOrganization(ctx context.Context, params ListOrganizationParams) (r ListOrganizationRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListOrganizationChildren implements listOrganizationChildren operation.
//
// List attached Childrens.
//
// GET /organizations/{id}/children
func (UnimplementedHandler) ListOrganizationChildren(ctx context.Context, params ListOrganizationChildrenParams) (r ListOrganizationChildrenRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListOrganizationGroups implements listOrganizationGroups operation.
//
// List attached Groups.
//
// GET /organizations/{id}/groups
func (UnimplementedHandler) ListOrganizationGroups(ctx context.Context, params ListOrganizationGroupsParams) (r ListOrganizationGroupsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListOrganizationIntegrations implements listOrganizationIntegrations operation.
//
// List attached Integrations.
//
// GET /organizations/{id}/integrations
func (UnimplementedHandler) ListOrganizationIntegrations(ctx context.Context, params ListOrganizationIntegrationsParams) (r ListOrganizationIntegrationsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListOrganizationUsers implements listOrganizationUsers operation.
//
// List attached Users.
//
// GET /organizations/{id}/users
func (UnimplementedHandler) ListOrganizationUsers(ctx context.Context, params ListOrganizationUsersParams) (r ListOrganizationUsersRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListRefreshToken implements listRefreshToken operation.
//
// List RefreshTokens.
//
// GET /refresh-tokens
func (UnimplementedHandler) ListRefreshToken(ctx context.Context, params ListRefreshTokenParams) (r ListRefreshTokenRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListSession implements listSession operation.
//
// List Sessions.
//
// GET /sessions
func (UnimplementedHandler) ListSession(ctx context.Context, params ListSessionParams) (r ListSessionRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListUser implements listUser operation.
//
// List Users.
//
// GET /users
func (UnimplementedHandler) ListUser(ctx context.Context, params ListUserParams) (r ListUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListUserGroups implements listUserGroups operation.
//
// List attached Groups.
//
// GET /users/{id}/groups
func (UnimplementedHandler) ListUserGroups(ctx context.Context, params ListUserGroupsParams) (r ListUserGroupsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListUserOrganizations implements listUserOrganizations operation.
//
// List attached Organizations.
//
// GET /users/{id}/organizations
func (UnimplementedHandler) ListUserOrganizations(ctx context.Context, params ListUserOrganizationsParams) (r ListUserOrganizationsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListUserSessions implements listUserSessions operation.
//
// List attached Sessions.
//
// GET /users/{id}/sessions
func (UnimplementedHandler) ListUserSessions(ctx context.Context, params ListUserSessionsParams) (r ListUserSessionsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadGroup implements readGroup operation.
//
// Finds the Group with the requested ID and returns it.
//
// GET /groups/{id}
func (UnimplementedHandler) ReadGroup(ctx context.Context, params ReadGroupParams) (r ReadGroupRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadGroupOwner implements readGroupOwner operation.
//
// Find the attached Organization of the Group with the given ID.
//
// GET /groups/{id}/owner
func (UnimplementedHandler) ReadGroupOwner(ctx context.Context, params ReadGroupOwnerParams) (r ReadGroupOwnerRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadGroupSetting implements readGroupSetting operation.
//
// Find the attached GroupSettings of the Group with the given ID.
//
// GET /groups/{id}/setting
func (UnimplementedHandler) ReadGroupSetting(ctx context.Context, params ReadGroupSettingParams) (r ReadGroupSettingRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadGroupSettings implements readGroupSettings operation.
//
// Finds the GroupSettings with the requested ID and returns it.
//
// GET /group-settings/{id}
func (UnimplementedHandler) ReadGroupSettings(ctx context.Context, params ReadGroupSettingsParams) (r ReadGroupSettingsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadGroupSettingsGroup implements readGroupSettingsGroup operation.
//
// Find the attached Group of the GroupSettings with the given ID.
//
// GET /group-settings/{id}/group
func (UnimplementedHandler) ReadGroupSettingsGroup(ctx context.Context, params ReadGroupSettingsGroupParams) (r ReadGroupSettingsGroupRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadIntegration implements readIntegration operation.
//
// Finds the Integration with the requested ID and returns it.
//
// GET /integrations/{id}
func (UnimplementedHandler) ReadIntegration(ctx context.Context, params ReadIntegrationParams) (r ReadIntegrationRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadIntegrationOwner implements readIntegrationOwner operation.
//
// Find the attached Organization of the Integration with the given ID.
//
// GET /integrations/{id}/owner
func (UnimplementedHandler) ReadIntegrationOwner(ctx context.Context, params ReadIntegrationOwnerParams) (r ReadIntegrationOwnerRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadOrganization implements readOrganization operation.
//
// Finds the Organization with the requested ID and returns it.
//
// GET /organizations/{id}
func (UnimplementedHandler) ReadOrganization(ctx context.Context, params ReadOrganizationParams) (r ReadOrganizationRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadOrganizationParent implements readOrganizationParent operation.
//
// Find the attached Organization of the Organization with the given ID.
//
// GET /organizations/{id}/parent
func (UnimplementedHandler) ReadOrganizationParent(ctx context.Context, params ReadOrganizationParentParams) (r ReadOrganizationParentRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadRefreshToken implements readRefreshToken operation.
//
// Finds the RefreshToken with the requested ID and returns it.
//
// GET /refresh-tokens/{id}
func (UnimplementedHandler) ReadRefreshToken(ctx context.Context, params ReadRefreshTokenParams) (r ReadRefreshTokenRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadSession implements readSession operation.
//
// Finds the Session with the requested ID and returns it.
//
// GET /sessions/{id}
func (UnimplementedHandler) ReadSession(ctx context.Context, params ReadSessionParams) (r ReadSessionRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadSessionUsers implements readSessionUsers operation.
//
// Find the attached User of the Session with the given ID.
//
// GET /sessions/{id}/users
func (UnimplementedHandler) ReadSessionUsers(ctx context.Context, params ReadSessionUsersParams) (r ReadSessionUsersRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadUser implements readUser operation.
//
// Finds the User with the requested ID and returns it.
//
// GET /users/{id}
func (UnimplementedHandler) ReadUser(ctx context.Context, params ReadUserParams) (r ReadUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateGroup implements updateGroup operation.
//
// Updates a Group and persists changes to storage.
//
// PATCH /groups/{id}
func (UnimplementedHandler) UpdateGroup(ctx context.Context, req *UpdateGroupReq, params UpdateGroupParams) (r UpdateGroupRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateGroupSettings implements updateGroupSettings operation.
//
// Updates a GroupSettings and persists changes to storage.
//
// PATCH /group-settings/{id}
func (UnimplementedHandler) UpdateGroupSettings(ctx context.Context, req *UpdateGroupSettingsReq, params UpdateGroupSettingsParams) (r UpdateGroupSettingsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateIntegration implements updateIntegration operation.
//
// Updates a Integration and persists changes to storage.
//
// PATCH /integrations/{id}
func (UnimplementedHandler) UpdateIntegration(ctx context.Context, req *UpdateIntegrationReq, params UpdateIntegrationParams) (r UpdateIntegrationRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateOrganization implements updateOrganization operation.
//
// Updates a Organization and persists changes to storage.
//
// PATCH /organizations/{id}
func (UnimplementedHandler) UpdateOrganization(ctx context.Context, req *UpdateOrganizationReq, params UpdateOrganizationParams) (r UpdateOrganizationRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateRefreshToken implements updateRefreshToken operation.
//
// Updates a RefreshToken and persists changes to storage.
//
// PATCH /refresh-tokens/{id}
func (UnimplementedHandler) UpdateRefreshToken(ctx context.Context, req *UpdateRefreshTokenReq, params UpdateRefreshTokenParams) (r UpdateRefreshTokenRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateSession implements updateSession operation.
//
// Updates a Session and persists changes to storage.
//
// PATCH /sessions/{id}
func (UnimplementedHandler) UpdateSession(ctx context.Context, req *UpdateSessionReq, params UpdateSessionParams) (r UpdateSessionRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateUser implements updateUser operation.
//
// Updates a User and persists changes to storage.
//
// PATCH /users/{id}
func (UnimplementedHandler) UpdateUser(ctx context.Context, req *UpdateUserReq, params UpdateUserParams) (r UpdateUserRes, _ error) {
	return r, ht.ErrNotImplemented
}
