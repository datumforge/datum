// Code generated by ent, DO NOT EDIT.

package organizationsettings

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/datumforge/datum/internal/ent/generated/predicate"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldContainsFold(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEQ(FieldUpdatedAt, v))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEQ(FieldCreatedBy, v))
}

// UpdatedBy applies equality check predicate on the "updated_by" field. It's identical to UpdatedByEQ.
func UpdatedBy(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEQ(FieldUpdatedBy, v))
}

// SSOCert applies equality check predicate on the "sso_cert" field. It's identical to SSOCertEQ.
func SSOCert(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEQ(FieldSSOCert, v))
}

// SSOEntrypoint applies equality check predicate on the "sso_entrypoint" field. It's identical to SSOEntrypointEQ.
func SSOEntrypoint(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEQ(FieldSSOEntrypoint, v))
}

// SSOIssuer applies equality check predicate on the "sso_issuer" field. It's identical to SSOIssuerEQ.
func SSOIssuer(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEQ(FieldSSOIssuer, v))
}

// BillingContact applies equality check predicate on the "billing_contact" field. It's identical to BillingContactEQ.
func BillingContact(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEQ(FieldBillingContact, v))
}

// BillingEmail applies equality check predicate on the "billing_email" field. It's identical to BillingEmailEQ.
func BillingEmail(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEQ(FieldBillingEmail, v))
}

// BillingPhone applies equality check predicate on the "billing_phone" field. It's identical to BillingPhoneEQ.
func BillingPhone(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEQ(FieldBillingPhone, v))
}

// BillingAddress applies equality check predicate on the "billing_address" field. It's identical to BillingAddressEQ.
func BillingAddress(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEQ(FieldBillingAddress, v))
}

// TaxIdentifier applies equality check predicate on the "tax_identifier" field. It's identical to TaxIdentifierEQ.
func TaxIdentifier(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEQ(FieldTaxIdentifier, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldLTE(FieldUpdatedAt, v))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "created_by" field.
func CreatedByGT(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "created_by" field.
func CreatedByGTE(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "created_by" field.
func CreatedByLT(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "created_by" field.
func CreatedByLTE(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByContains applies the Contains predicate on the "created_by" field.
func CreatedByContains(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldContains(FieldCreatedBy, v))
}

// CreatedByHasPrefix applies the HasPrefix predicate on the "created_by" field.
func CreatedByHasPrefix(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldHasPrefix(FieldCreatedBy, v))
}

// CreatedByHasSuffix applies the HasSuffix predicate on the "created_by" field.
func CreatedByHasSuffix(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldHasSuffix(FieldCreatedBy, v))
}

// CreatedByIsNil applies the IsNil predicate on the "created_by" field.
func CreatedByIsNil() predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "created_by" field.
func CreatedByNotNil() predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldNotNull(FieldCreatedBy))
}

// CreatedByEqualFold applies the EqualFold predicate on the "created_by" field.
func CreatedByEqualFold(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEqualFold(FieldCreatedBy, v))
}

// CreatedByContainsFold applies the ContainsFold predicate on the "created_by" field.
func CreatedByContainsFold(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldContainsFold(FieldCreatedBy, v))
}

// UpdatedByEQ applies the EQ predicate on the "updated_by" field.
func UpdatedByEQ(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "updated_by" field.
func UpdatedByNEQ(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "updated_by" field.
func UpdatedByIn(vs ...string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "updated_by" field.
func UpdatedByNotIn(vs ...string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "updated_by" field.
func UpdatedByGT(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "updated_by" field.
func UpdatedByGTE(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "updated_by" field.
func UpdatedByLT(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "updated_by" field.
func UpdatedByLTE(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByContains applies the Contains predicate on the "updated_by" field.
func UpdatedByContains(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldContains(FieldUpdatedBy, v))
}

// UpdatedByHasPrefix applies the HasPrefix predicate on the "updated_by" field.
func UpdatedByHasPrefix(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldHasPrefix(FieldUpdatedBy, v))
}

// UpdatedByHasSuffix applies the HasSuffix predicate on the "updated_by" field.
func UpdatedByHasSuffix(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldHasSuffix(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "updated_by" field.
func UpdatedByIsNil() predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "updated_by" field.
func UpdatedByNotNil() predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldNotNull(FieldUpdatedBy))
}

// UpdatedByEqualFold applies the EqualFold predicate on the "updated_by" field.
func UpdatedByEqualFold(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEqualFold(FieldUpdatedBy, v))
}

// UpdatedByContainsFold applies the ContainsFold predicate on the "updated_by" field.
func UpdatedByContainsFold(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldContainsFold(FieldUpdatedBy, v))
}

// SSOCertEQ applies the EQ predicate on the "sso_cert" field.
func SSOCertEQ(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEQ(FieldSSOCert, v))
}

// SSOCertNEQ applies the NEQ predicate on the "sso_cert" field.
func SSOCertNEQ(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldNEQ(FieldSSOCert, v))
}

// SSOCertIn applies the In predicate on the "sso_cert" field.
func SSOCertIn(vs ...string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldIn(FieldSSOCert, vs...))
}

// SSOCertNotIn applies the NotIn predicate on the "sso_cert" field.
func SSOCertNotIn(vs ...string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldNotIn(FieldSSOCert, vs...))
}

// SSOCertGT applies the GT predicate on the "sso_cert" field.
func SSOCertGT(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldGT(FieldSSOCert, v))
}

// SSOCertGTE applies the GTE predicate on the "sso_cert" field.
func SSOCertGTE(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldGTE(FieldSSOCert, v))
}

// SSOCertLT applies the LT predicate on the "sso_cert" field.
func SSOCertLT(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldLT(FieldSSOCert, v))
}

// SSOCertLTE applies the LTE predicate on the "sso_cert" field.
func SSOCertLTE(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldLTE(FieldSSOCert, v))
}

// SSOCertContains applies the Contains predicate on the "sso_cert" field.
func SSOCertContains(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldContains(FieldSSOCert, v))
}

// SSOCertHasPrefix applies the HasPrefix predicate on the "sso_cert" field.
func SSOCertHasPrefix(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldHasPrefix(FieldSSOCert, v))
}

// SSOCertHasSuffix applies the HasSuffix predicate on the "sso_cert" field.
func SSOCertHasSuffix(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldHasSuffix(FieldSSOCert, v))
}

// SSOCertEqualFold applies the EqualFold predicate on the "sso_cert" field.
func SSOCertEqualFold(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEqualFold(FieldSSOCert, v))
}

// SSOCertContainsFold applies the ContainsFold predicate on the "sso_cert" field.
func SSOCertContainsFold(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldContainsFold(FieldSSOCert, v))
}

// SSOEntrypointEQ applies the EQ predicate on the "sso_entrypoint" field.
func SSOEntrypointEQ(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEQ(FieldSSOEntrypoint, v))
}

// SSOEntrypointNEQ applies the NEQ predicate on the "sso_entrypoint" field.
func SSOEntrypointNEQ(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldNEQ(FieldSSOEntrypoint, v))
}

// SSOEntrypointIn applies the In predicate on the "sso_entrypoint" field.
func SSOEntrypointIn(vs ...string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldIn(FieldSSOEntrypoint, vs...))
}

// SSOEntrypointNotIn applies the NotIn predicate on the "sso_entrypoint" field.
func SSOEntrypointNotIn(vs ...string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldNotIn(FieldSSOEntrypoint, vs...))
}

// SSOEntrypointGT applies the GT predicate on the "sso_entrypoint" field.
func SSOEntrypointGT(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldGT(FieldSSOEntrypoint, v))
}

// SSOEntrypointGTE applies the GTE predicate on the "sso_entrypoint" field.
func SSOEntrypointGTE(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldGTE(FieldSSOEntrypoint, v))
}

// SSOEntrypointLT applies the LT predicate on the "sso_entrypoint" field.
func SSOEntrypointLT(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldLT(FieldSSOEntrypoint, v))
}

// SSOEntrypointLTE applies the LTE predicate on the "sso_entrypoint" field.
func SSOEntrypointLTE(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldLTE(FieldSSOEntrypoint, v))
}

// SSOEntrypointContains applies the Contains predicate on the "sso_entrypoint" field.
func SSOEntrypointContains(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldContains(FieldSSOEntrypoint, v))
}

// SSOEntrypointHasPrefix applies the HasPrefix predicate on the "sso_entrypoint" field.
func SSOEntrypointHasPrefix(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldHasPrefix(FieldSSOEntrypoint, v))
}

// SSOEntrypointHasSuffix applies the HasSuffix predicate on the "sso_entrypoint" field.
func SSOEntrypointHasSuffix(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldHasSuffix(FieldSSOEntrypoint, v))
}

// SSOEntrypointEqualFold applies the EqualFold predicate on the "sso_entrypoint" field.
func SSOEntrypointEqualFold(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEqualFold(FieldSSOEntrypoint, v))
}

// SSOEntrypointContainsFold applies the ContainsFold predicate on the "sso_entrypoint" field.
func SSOEntrypointContainsFold(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldContainsFold(FieldSSOEntrypoint, v))
}

// SSOIssuerEQ applies the EQ predicate on the "sso_issuer" field.
func SSOIssuerEQ(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEQ(FieldSSOIssuer, v))
}

// SSOIssuerNEQ applies the NEQ predicate on the "sso_issuer" field.
func SSOIssuerNEQ(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldNEQ(FieldSSOIssuer, v))
}

// SSOIssuerIn applies the In predicate on the "sso_issuer" field.
func SSOIssuerIn(vs ...string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldIn(FieldSSOIssuer, vs...))
}

// SSOIssuerNotIn applies the NotIn predicate on the "sso_issuer" field.
func SSOIssuerNotIn(vs ...string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldNotIn(FieldSSOIssuer, vs...))
}

// SSOIssuerGT applies the GT predicate on the "sso_issuer" field.
func SSOIssuerGT(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldGT(FieldSSOIssuer, v))
}

// SSOIssuerGTE applies the GTE predicate on the "sso_issuer" field.
func SSOIssuerGTE(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldGTE(FieldSSOIssuer, v))
}

// SSOIssuerLT applies the LT predicate on the "sso_issuer" field.
func SSOIssuerLT(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldLT(FieldSSOIssuer, v))
}

// SSOIssuerLTE applies the LTE predicate on the "sso_issuer" field.
func SSOIssuerLTE(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldLTE(FieldSSOIssuer, v))
}

// SSOIssuerContains applies the Contains predicate on the "sso_issuer" field.
func SSOIssuerContains(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldContains(FieldSSOIssuer, v))
}

// SSOIssuerHasPrefix applies the HasPrefix predicate on the "sso_issuer" field.
func SSOIssuerHasPrefix(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldHasPrefix(FieldSSOIssuer, v))
}

// SSOIssuerHasSuffix applies the HasSuffix predicate on the "sso_issuer" field.
func SSOIssuerHasSuffix(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldHasSuffix(FieldSSOIssuer, v))
}

// SSOIssuerEqualFold applies the EqualFold predicate on the "sso_issuer" field.
func SSOIssuerEqualFold(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEqualFold(FieldSSOIssuer, v))
}

// SSOIssuerContainsFold applies the ContainsFold predicate on the "sso_issuer" field.
func SSOIssuerContainsFold(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldContainsFold(FieldSSOIssuer, v))
}

// BillingContactEQ applies the EQ predicate on the "billing_contact" field.
func BillingContactEQ(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEQ(FieldBillingContact, v))
}

// BillingContactNEQ applies the NEQ predicate on the "billing_contact" field.
func BillingContactNEQ(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldNEQ(FieldBillingContact, v))
}

// BillingContactIn applies the In predicate on the "billing_contact" field.
func BillingContactIn(vs ...string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldIn(FieldBillingContact, vs...))
}

// BillingContactNotIn applies the NotIn predicate on the "billing_contact" field.
func BillingContactNotIn(vs ...string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldNotIn(FieldBillingContact, vs...))
}

// BillingContactGT applies the GT predicate on the "billing_contact" field.
func BillingContactGT(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldGT(FieldBillingContact, v))
}

// BillingContactGTE applies the GTE predicate on the "billing_contact" field.
func BillingContactGTE(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldGTE(FieldBillingContact, v))
}

// BillingContactLT applies the LT predicate on the "billing_contact" field.
func BillingContactLT(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldLT(FieldBillingContact, v))
}

// BillingContactLTE applies the LTE predicate on the "billing_contact" field.
func BillingContactLTE(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldLTE(FieldBillingContact, v))
}

// BillingContactContains applies the Contains predicate on the "billing_contact" field.
func BillingContactContains(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldContains(FieldBillingContact, v))
}

// BillingContactHasPrefix applies the HasPrefix predicate on the "billing_contact" field.
func BillingContactHasPrefix(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldHasPrefix(FieldBillingContact, v))
}

// BillingContactHasSuffix applies the HasSuffix predicate on the "billing_contact" field.
func BillingContactHasSuffix(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldHasSuffix(FieldBillingContact, v))
}

// BillingContactEqualFold applies the EqualFold predicate on the "billing_contact" field.
func BillingContactEqualFold(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEqualFold(FieldBillingContact, v))
}

// BillingContactContainsFold applies the ContainsFold predicate on the "billing_contact" field.
func BillingContactContainsFold(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldContainsFold(FieldBillingContact, v))
}

// BillingEmailEQ applies the EQ predicate on the "billing_email" field.
func BillingEmailEQ(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEQ(FieldBillingEmail, v))
}

// BillingEmailNEQ applies the NEQ predicate on the "billing_email" field.
func BillingEmailNEQ(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldNEQ(FieldBillingEmail, v))
}

// BillingEmailIn applies the In predicate on the "billing_email" field.
func BillingEmailIn(vs ...string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldIn(FieldBillingEmail, vs...))
}

// BillingEmailNotIn applies the NotIn predicate on the "billing_email" field.
func BillingEmailNotIn(vs ...string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldNotIn(FieldBillingEmail, vs...))
}

// BillingEmailGT applies the GT predicate on the "billing_email" field.
func BillingEmailGT(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldGT(FieldBillingEmail, v))
}

// BillingEmailGTE applies the GTE predicate on the "billing_email" field.
func BillingEmailGTE(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldGTE(FieldBillingEmail, v))
}

// BillingEmailLT applies the LT predicate on the "billing_email" field.
func BillingEmailLT(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldLT(FieldBillingEmail, v))
}

// BillingEmailLTE applies the LTE predicate on the "billing_email" field.
func BillingEmailLTE(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldLTE(FieldBillingEmail, v))
}

// BillingEmailContains applies the Contains predicate on the "billing_email" field.
func BillingEmailContains(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldContains(FieldBillingEmail, v))
}

// BillingEmailHasPrefix applies the HasPrefix predicate on the "billing_email" field.
func BillingEmailHasPrefix(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldHasPrefix(FieldBillingEmail, v))
}

// BillingEmailHasSuffix applies the HasSuffix predicate on the "billing_email" field.
func BillingEmailHasSuffix(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldHasSuffix(FieldBillingEmail, v))
}

// BillingEmailEqualFold applies the EqualFold predicate on the "billing_email" field.
func BillingEmailEqualFold(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEqualFold(FieldBillingEmail, v))
}

// BillingEmailContainsFold applies the ContainsFold predicate on the "billing_email" field.
func BillingEmailContainsFold(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldContainsFold(FieldBillingEmail, v))
}

// BillingPhoneEQ applies the EQ predicate on the "billing_phone" field.
func BillingPhoneEQ(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEQ(FieldBillingPhone, v))
}

// BillingPhoneNEQ applies the NEQ predicate on the "billing_phone" field.
func BillingPhoneNEQ(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldNEQ(FieldBillingPhone, v))
}

// BillingPhoneIn applies the In predicate on the "billing_phone" field.
func BillingPhoneIn(vs ...string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldIn(FieldBillingPhone, vs...))
}

// BillingPhoneNotIn applies the NotIn predicate on the "billing_phone" field.
func BillingPhoneNotIn(vs ...string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldNotIn(FieldBillingPhone, vs...))
}

// BillingPhoneGT applies the GT predicate on the "billing_phone" field.
func BillingPhoneGT(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldGT(FieldBillingPhone, v))
}

// BillingPhoneGTE applies the GTE predicate on the "billing_phone" field.
func BillingPhoneGTE(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldGTE(FieldBillingPhone, v))
}

// BillingPhoneLT applies the LT predicate on the "billing_phone" field.
func BillingPhoneLT(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldLT(FieldBillingPhone, v))
}

// BillingPhoneLTE applies the LTE predicate on the "billing_phone" field.
func BillingPhoneLTE(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldLTE(FieldBillingPhone, v))
}

// BillingPhoneContains applies the Contains predicate on the "billing_phone" field.
func BillingPhoneContains(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldContains(FieldBillingPhone, v))
}

// BillingPhoneHasPrefix applies the HasPrefix predicate on the "billing_phone" field.
func BillingPhoneHasPrefix(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldHasPrefix(FieldBillingPhone, v))
}

// BillingPhoneHasSuffix applies the HasSuffix predicate on the "billing_phone" field.
func BillingPhoneHasSuffix(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldHasSuffix(FieldBillingPhone, v))
}

// BillingPhoneEqualFold applies the EqualFold predicate on the "billing_phone" field.
func BillingPhoneEqualFold(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEqualFold(FieldBillingPhone, v))
}

// BillingPhoneContainsFold applies the ContainsFold predicate on the "billing_phone" field.
func BillingPhoneContainsFold(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldContainsFold(FieldBillingPhone, v))
}

// BillingAddressEQ applies the EQ predicate on the "billing_address" field.
func BillingAddressEQ(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEQ(FieldBillingAddress, v))
}

// BillingAddressNEQ applies the NEQ predicate on the "billing_address" field.
func BillingAddressNEQ(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldNEQ(FieldBillingAddress, v))
}

// BillingAddressIn applies the In predicate on the "billing_address" field.
func BillingAddressIn(vs ...string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldIn(FieldBillingAddress, vs...))
}

// BillingAddressNotIn applies the NotIn predicate on the "billing_address" field.
func BillingAddressNotIn(vs ...string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldNotIn(FieldBillingAddress, vs...))
}

// BillingAddressGT applies the GT predicate on the "billing_address" field.
func BillingAddressGT(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldGT(FieldBillingAddress, v))
}

// BillingAddressGTE applies the GTE predicate on the "billing_address" field.
func BillingAddressGTE(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldGTE(FieldBillingAddress, v))
}

// BillingAddressLT applies the LT predicate on the "billing_address" field.
func BillingAddressLT(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldLT(FieldBillingAddress, v))
}

// BillingAddressLTE applies the LTE predicate on the "billing_address" field.
func BillingAddressLTE(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldLTE(FieldBillingAddress, v))
}

// BillingAddressContains applies the Contains predicate on the "billing_address" field.
func BillingAddressContains(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldContains(FieldBillingAddress, v))
}

// BillingAddressHasPrefix applies the HasPrefix predicate on the "billing_address" field.
func BillingAddressHasPrefix(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldHasPrefix(FieldBillingAddress, v))
}

// BillingAddressHasSuffix applies the HasSuffix predicate on the "billing_address" field.
func BillingAddressHasSuffix(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldHasSuffix(FieldBillingAddress, v))
}

// BillingAddressEqualFold applies the EqualFold predicate on the "billing_address" field.
func BillingAddressEqualFold(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEqualFold(FieldBillingAddress, v))
}

// BillingAddressContainsFold applies the ContainsFold predicate on the "billing_address" field.
func BillingAddressContainsFold(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldContainsFold(FieldBillingAddress, v))
}

// TaxIdentifierEQ applies the EQ predicate on the "tax_identifier" field.
func TaxIdentifierEQ(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEQ(FieldTaxIdentifier, v))
}

// TaxIdentifierNEQ applies the NEQ predicate on the "tax_identifier" field.
func TaxIdentifierNEQ(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldNEQ(FieldTaxIdentifier, v))
}

// TaxIdentifierIn applies the In predicate on the "tax_identifier" field.
func TaxIdentifierIn(vs ...string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldIn(FieldTaxIdentifier, vs...))
}

// TaxIdentifierNotIn applies the NotIn predicate on the "tax_identifier" field.
func TaxIdentifierNotIn(vs ...string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldNotIn(FieldTaxIdentifier, vs...))
}

// TaxIdentifierGT applies the GT predicate on the "tax_identifier" field.
func TaxIdentifierGT(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldGT(FieldTaxIdentifier, v))
}

// TaxIdentifierGTE applies the GTE predicate on the "tax_identifier" field.
func TaxIdentifierGTE(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldGTE(FieldTaxIdentifier, v))
}

// TaxIdentifierLT applies the LT predicate on the "tax_identifier" field.
func TaxIdentifierLT(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldLT(FieldTaxIdentifier, v))
}

// TaxIdentifierLTE applies the LTE predicate on the "tax_identifier" field.
func TaxIdentifierLTE(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldLTE(FieldTaxIdentifier, v))
}

// TaxIdentifierContains applies the Contains predicate on the "tax_identifier" field.
func TaxIdentifierContains(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldContains(FieldTaxIdentifier, v))
}

// TaxIdentifierHasPrefix applies the HasPrefix predicate on the "tax_identifier" field.
func TaxIdentifierHasPrefix(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldHasPrefix(FieldTaxIdentifier, v))
}

// TaxIdentifierHasSuffix applies the HasSuffix predicate on the "tax_identifier" field.
func TaxIdentifierHasSuffix(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldHasSuffix(FieldTaxIdentifier, v))
}

// TaxIdentifierEqualFold applies the EqualFold predicate on the "tax_identifier" field.
func TaxIdentifierEqualFold(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldEqualFold(FieldTaxIdentifier, v))
}

// TaxIdentifierContainsFold applies the ContainsFold predicate on the "tax_identifier" field.
func TaxIdentifierContainsFold(v string) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.FieldContainsFold(FieldTaxIdentifier, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.OrganizationSettings) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.OrganizationSettings) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.OrganizationSettings) predicate.OrganizationSettings {
	return predicate.OrganizationSettings(sql.NotPredicates(p))
}
