// Code generated by ent, DO NOT EDIT.

package runtime

import (
	"context"
	"time"

	"github.com/datumforge/datum/internal/ent/generated/accesstoken"
	"github.com/datumforge/datum/internal/ent/generated/entitlement"
	"github.com/datumforge/datum/internal/ent/generated/group"
	"github.com/datumforge/datum/internal/ent/generated/groupsetting"
	"github.com/datumforge/datum/internal/ent/generated/integration"
	"github.com/datumforge/datum/internal/ent/generated/oauthprovider"
	"github.com/datumforge/datum/internal/ent/generated/ohauthtootoken"
	"github.com/datumforge/datum/internal/ent/generated/organization"
	"github.com/datumforge/datum/internal/ent/generated/organizationsetting"
	"github.com/datumforge/datum/internal/ent/generated/personalaccesstoken"
	"github.com/datumforge/datum/internal/ent/generated/refreshtoken"
	"github.com/datumforge/datum/internal/ent/generated/session"
	"github.com/datumforge/datum/internal/ent/generated/user"
	"github.com/datumforge/datum/internal/ent/generated/usersetting"
	"github.com/datumforge/datum/internal/ent/schema"

	"entgo.io/ent"
	"entgo.io/ent/privacy"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	accesstokenMixin := schema.AccessToken{}.Mixin()
	accesstokenMixinHooks0 := accesstokenMixin[0].Hooks()
	accesstoken.Hooks[0] = accesstokenMixinHooks0[0]
	accesstokenMixinFields0 := accesstokenMixin[0].Fields()
	_ = accesstokenMixinFields0
	accesstokenMixinFields1 := accesstokenMixin[1].Fields()
	_ = accesstokenMixinFields1
	accesstokenFields := schema.AccessToken{}.Fields()
	_ = accesstokenFields
	// accesstokenDescCreatedAt is the schema descriptor for created_at field.
	accesstokenDescCreatedAt := accesstokenMixinFields0[0].Descriptor()
	// accesstoken.DefaultCreatedAt holds the default value on creation for the created_at field.
	accesstoken.DefaultCreatedAt = accesstokenDescCreatedAt.Default.(func() time.Time)
	// accesstokenDescUpdatedAt is the schema descriptor for updated_at field.
	accesstokenDescUpdatedAt := accesstokenMixinFields0[1].Descriptor()
	// accesstoken.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	accesstoken.DefaultUpdatedAt = accesstokenDescUpdatedAt.Default.(func() time.Time)
	// accesstoken.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	accesstoken.UpdateDefaultUpdatedAt = accesstokenDescUpdatedAt.UpdateDefault.(func() time.Time)
	// accesstokenDescExpiresAt is the schema descriptor for expires_at field.
	accesstokenDescExpiresAt := accesstokenFields[1].Descriptor()
	// accesstoken.DefaultExpiresAt holds the default value on creation for the expires_at field.
	accesstoken.DefaultExpiresAt = accesstokenDescExpiresAt.Default.(func() time.Time)
	// accesstokenDescIssuedAt is the schema descriptor for issued_at field.
	accesstokenDescIssuedAt := accesstokenFields[2].Descriptor()
	// accesstoken.DefaultIssuedAt holds the default value on creation for the issued_at field.
	accesstoken.DefaultIssuedAt = accesstokenDescIssuedAt.Default.(time.Time)
	// accesstokenDescLastUsedAt is the schema descriptor for last_used_at field.
	accesstokenDescLastUsedAt := accesstokenFields[3].Descriptor()
	// accesstoken.UpdateDefaultLastUsedAt holds the default value on update for the last_used_at field.
	accesstoken.UpdateDefaultLastUsedAt = accesstokenDescLastUsedAt.UpdateDefault.(func() time.Time)
	// accesstokenDescID is the schema descriptor for id field.
	accesstokenDescID := accesstokenMixinFields1[0].Descriptor()
	// accesstoken.DefaultID holds the default value on creation for the id field.
	accesstoken.DefaultID = accesstokenDescID.Default.(func() string)
	entitlementMixin := schema.Entitlement{}.Mixin()
	entitlementMixinHooks0 := entitlementMixin[0].Hooks()
	entitlement.Hooks[0] = entitlementMixinHooks0[0]
	entitlementMixinFields0 := entitlementMixin[0].Fields()
	_ = entitlementMixinFields0
	entitlementMixinFields1 := entitlementMixin[1].Fields()
	_ = entitlementMixinFields1
	entitlementFields := schema.Entitlement{}.Fields()
	_ = entitlementFields
	// entitlementDescCreatedAt is the schema descriptor for created_at field.
	entitlementDescCreatedAt := entitlementMixinFields0[0].Descriptor()
	// entitlement.DefaultCreatedAt holds the default value on creation for the created_at field.
	entitlement.DefaultCreatedAt = entitlementDescCreatedAt.Default.(func() time.Time)
	// entitlementDescUpdatedAt is the schema descriptor for updated_at field.
	entitlementDescUpdatedAt := entitlementMixinFields0[1].Descriptor()
	// entitlement.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	entitlement.DefaultUpdatedAt = entitlementDescUpdatedAt.Default.(func() time.Time)
	// entitlement.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	entitlement.UpdateDefaultUpdatedAt = entitlementDescUpdatedAt.UpdateDefault.(func() time.Time)
	// entitlementDescCancelled is the schema descriptor for cancelled field.
	entitlementDescCancelled := entitlementFields[8].Descriptor()
	// entitlement.DefaultCancelled holds the default value on creation for the cancelled field.
	entitlement.DefaultCancelled = entitlementDescCancelled.Default.(bool)
	// entitlementDescID is the schema descriptor for id field.
	entitlementDescID := entitlementMixinFields1[0].Descriptor()
	// entitlement.DefaultID holds the default value on creation for the id field.
	entitlement.DefaultID = entitlementDescID.Default.(func() string)
	groupMixin := schema.Group{}.Mixin()
	group.Policy = privacy.NewPolicies(schema.Group{})
	group.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := group.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	groupMixinHooks0 := groupMixin[0].Hooks()
	groupMixinHooks1 := groupMixin[1].Hooks()
	groupHooks := schema.Group{}.Hooks()

	group.Hooks[1] = groupMixinHooks0[0]

	group.Hooks[2] = groupMixinHooks1[0]

	group.Hooks[3] = groupHooks[0]
	groupMixinInters1 := groupMixin[1].Interceptors()
	group.Interceptors[0] = groupMixinInters1[0]
	groupMixinFields0 := groupMixin[0].Fields()
	_ = groupMixinFields0
	groupMixinFields3 := groupMixin[3].Fields()
	_ = groupMixinFields3
	groupFields := schema.Group{}.Fields()
	_ = groupFields
	// groupDescCreatedAt is the schema descriptor for created_at field.
	groupDescCreatedAt := groupMixinFields0[0].Descriptor()
	// group.DefaultCreatedAt holds the default value on creation for the created_at field.
	group.DefaultCreatedAt = groupDescCreatedAt.Default.(func() time.Time)
	// groupDescUpdatedAt is the schema descriptor for updated_at field.
	groupDescUpdatedAt := groupMixinFields0[1].Descriptor()
	// group.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	group.DefaultUpdatedAt = groupDescUpdatedAt.Default.(func() time.Time)
	// group.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	group.UpdateDefaultUpdatedAt = groupDescUpdatedAt.UpdateDefault.(func() time.Time)
	// groupDescName is the schema descriptor for name field.
	groupDescName := groupFields[0].Descriptor()
	// group.NameValidator is a validator for the "name" field. It is called by the builders before save.
	group.NameValidator = groupDescName.Validators[0].(func(string) error)
	// groupDescDisplayName is the schema descriptor for display_name field.
	groupDescDisplayName := groupFields[3].Descriptor()
	// group.DefaultDisplayName holds the default value on creation for the display_name field.
	group.DefaultDisplayName = groupDescDisplayName.Default.(string)
	// group.DisplayNameValidator is a validator for the "display_name" field. It is called by the builders before save.
	group.DisplayNameValidator = groupDescDisplayName.Validators[0].(func(string) error)
	// groupDescID is the schema descriptor for id field.
	groupDescID := groupMixinFields3[0].Descriptor()
	// group.DefaultID holds the default value on creation for the id field.
	group.DefaultID = groupDescID.Default.(func() string)
	groupsettingMixin := schema.GroupSetting{}.Mixin()
	groupsettingMixinHooks0 := groupsettingMixin[0].Hooks()
	groupsetting.Hooks[0] = groupsettingMixinHooks0[0]
	groupsettingMixinFields0 := groupsettingMixin[0].Fields()
	_ = groupsettingMixinFields0
	groupsettingMixinFields1 := groupsettingMixin[1].Fields()
	_ = groupsettingMixinFields1
	groupsettingFields := schema.GroupSetting{}.Fields()
	_ = groupsettingFields
	// groupsettingDescCreatedAt is the schema descriptor for created_at field.
	groupsettingDescCreatedAt := groupsettingMixinFields0[0].Descriptor()
	// groupsetting.DefaultCreatedAt holds the default value on creation for the created_at field.
	groupsetting.DefaultCreatedAt = groupsettingDescCreatedAt.Default.(func() time.Time)
	// groupsettingDescUpdatedAt is the schema descriptor for updated_at field.
	groupsettingDescUpdatedAt := groupsettingMixinFields0[1].Descriptor()
	// groupsetting.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	groupsetting.DefaultUpdatedAt = groupsettingDescUpdatedAt.Default.(func() time.Time)
	// groupsetting.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	groupsetting.UpdateDefaultUpdatedAt = groupsettingDescUpdatedAt.UpdateDefault.(func() time.Time)
	// groupsettingDescTags is the schema descriptor for tags field.
	groupsettingDescTags := groupsettingFields[2].Descriptor()
	// groupsetting.DefaultTags holds the default value on creation for the tags field.
	groupsetting.DefaultTags = groupsettingDescTags.Default.([]string)
	// groupsettingDescSyncToSlack is the schema descriptor for sync_to_slack field.
	groupsettingDescSyncToSlack := groupsettingFields[3].Descriptor()
	// groupsetting.DefaultSyncToSlack holds the default value on creation for the sync_to_slack field.
	groupsetting.DefaultSyncToSlack = groupsettingDescSyncToSlack.Default.(bool)
	// groupsettingDescSyncToGithub is the schema descriptor for sync_to_github field.
	groupsettingDescSyncToGithub := groupsettingFields[4].Descriptor()
	// groupsetting.DefaultSyncToGithub holds the default value on creation for the sync_to_github field.
	groupsetting.DefaultSyncToGithub = groupsettingDescSyncToGithub.Default.(bool)
	// groupsettingDescID is the schema descriptor for id field.
	groupsettingDescID := groupsettingMixinFields1[0].Descriptor()
	// groupsetting.DefaultID holds the default value on creation for the id field.
	groupsetting.DefaultID = groupsettingDescID.Default.(func() string)
	integrationMixin := schema.Integration{}.Mixin()
	integrationMixinHooks0 := integrationMixin[0].Hooks()
	integration.Hooks[0] = integrationMixinHooks0[0]
	integrationMixinFields0 := integrationMixin[0].Fields()
	_ = integrationMixinFields0
	integrationMixinFields1 := integrationMixin[1].Fields()
	_ = integrationMixinFields1
	integrationFields := schema.Integration{}.Fields()
	_ = integrationFields
	// integrationDescCreatedAt is the schema descriptor for created_at field.
	integrationDescCreatedAt := integrationMixinFields0[0].Descriptor()
	// integration.DefaultCreatedAt holds the default value on creation for the created_at field.
	integration.DefaultCreatedAt = integrationDescCreatedAt.Default.(func() time.Time)
	// integrationDescUpdatedAt is the schema descriptor for updated_at field.
	integrationDescUpdatedAt := integrationMixinFields0[1].Descriptor()
	// integration.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	integration.DefaultUpdatedAt = integrationDescUpdatedAt.Default.(func() time.Time)
	// integration.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	integration.UpdateDefaultUpdatedAt = integrationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// integrationDescName is the schema descriptor for name field.
	integrationDescName := integrationFields[0].Descriptor()
	// integration.NameValidator is a validator for the "name" field. It is called by the builders before save.
	integration.NameValidator = integrationDescName.Validators[0].(func(string) error)
	// integrationDescID is the schema descriptor for id field.
	integrationDescID := integrationMixinFields1[0].Descriptor()
	// integration.DefaultID holds the default value on creation for the id field.
	integration.DefaultID = integrationDescID.Default.(func() string)
	oauthproviderMixin := schema.OauthProvider{}.Mixin()
	oauthproviderMixinHooks0 := oauthproviderMixin[0].Hooks()
	oauthprovider.Hooks[0] = oauthproviderMixinHooks0[0]
	oauthproviderMixinFields0 := oauthproviderMixin[0].Fields()
	_ = oauthproviderMixinFields0
	oauthproviderMixinFields1 := oauthproviderMixin[1].Fields()
	_ = oauthproviderMixinFields1
	oauthproviderFields := schema.OauthProvider{}.Fields()
	_ = oauthproviderFields
	// oauthproviderDescCreatedAt is the schema descriptor for created_at field.
	oauthproviderDescCreatedAt := oauthproviderMixinFields0[0].Descriptor()
	// oauthprovider.DefaultCreatedAt holds the default value on creation for the created_at field.
	oauthprovider.DefaultCreatedAt = oauthproviderDescCreatedAt.Default.(func() time.Time)
	// oauthproviderDescUpdatedAt is the schema descriptor for updated_at field.
	oauthproviderDescUpdatedAt := oauthproviderMixinFields0[1].Descriptor()
	// oauthprovider.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	oauthprovider.DefaultUpdatedAt = oauthproviderDescUpdatedAt.Default.(func() time.Time)
	// oauthprovider.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	oauthprovider.UpdateDefaultUpdatedAt = oauthproviderDescUpdatedAt.UpdateDefault.(func() time.Time)
	// oauthproviderDescID is the schema descriptor for id field.
	oauthproviderDescID := oauthproviderMixinFields1[0].Descriptor()
	// oauthprovider.DefaultID holds the default value on creation for the id field.
	oauthprovider.DefaultID = oauthproviderDescID.Default.(func() string)
	ohauthtootokenMixin := schema.OhAuthTooToken{}.Mixin()
	ohauthtootokenMixinFields0 := ohauthtootokenMixin[0].Fields()
	_ = ohauthtootokenMixinFields0
	ohauthtootokenFields := schema.OhAuthTooToken{}.Fields()
	_ = ohauthtootokenFields
	// ohauthtootokenDescClientID is the schema descriptor for client_id field.
	ohauthtootokenDescClientID := ohauthtootokenFields[0].Descriptor()
	// ohauthtootoken.ClientIDValidator is a validator for the "client_id" field. It is called by the builders before save.
	ohauthtootoken.ClientIDValidator = ohauthtootokenDescClientID.Validators[0].(func(string) error)
	// ohauthtootokenDescNonce is the schema descriptor for nonce field.
	ohauthtootokenDescNonce := ohauthtootokenFields[2].Descriptor()
	// ohauthtootoken.NonceValidator is a validator for the "nonce" field. It is called by the builders before save.
	ohauthtootoken.NonceValidator = ohauthtootokenDescNonce.Validators[0].(func(string) error)
	// ohauthtootokenDescClaimsUserID is the schema descriptor for claims_user_id field.
	ohauthtootokenDescClaimsUserID := ohauthtootokenFields[3].Descriptor()
	// ohauthtootoken.ClaimsUserIDValidator is a validator for the "claims_user_id" field. It is called by the builders before save.
	ohauthtootoken.ClaimsUserIDValidator = ohauthtootokenDescClaimsUserID.Validators[0].(func(string) error)
	// ohauthtootokenDescClaimsUsername is the schema descriptor for claims_username field.
	ohauthtootokenDescClaimsUsername := ohauthtootokenFields[4].Descriptor()
	// ohauthtootoken.ClaimsUsernameValidator is a validator for the "claims_username" field. It is called by the builders before save.
	ohauthtootoken.ClaimsUsernameValidator = ohauthtootokenDescClaimsUsername.Validators[0].(func(string) error)
	// ohauthtootokenDescClaimsEmail is the schema descriptor for claims_email field.
	ohauthtootokenDescClaimsEmail := ohauthtootokenFields[5].Descriptor()
	// ohauthtootoken.ClaimsEmailValidator is a validator for the "claims_email" field. It is called by the builders before save.
	ohauthtootoken.ClaimsEmailValidator = ohauthtootokenDescClaimsEmail.Validators[0].(func(string) error)
	// ohauthtootokenDescConnectorID is the schema descriptor for connector_id field.
	ohauthtootokenDescConnectorID := ohauthtootokenFields[9].Descriptor()
	// ohauthtootoken.ConnectorIDValidator is a validator for the "connector_id" field. It is called by the builders before save.
	ohauthtootoken.ConnectorIDValidator = ohauthtootokenDescConnectorID.Validators[0].(func(string) error)
	// ohauthtootokenDescLastUsed is the schema descriptor for last_used field.
	ohauthtootokenDescLastUsed := ohauthtootokenFields[11].Descriptor()
	// ohauthtootoken.DefaultLastUsed holds the default value on creation for the last_used field.
	ohauthtootoken.DefaultLastUsed = ohauthtootokenDescLastUsed.Default.(func() time.Time)
	// ohauthtootokenDescID is the schema descriptor for id field.
	ohauthtootokenDescID := ohauthtootokenMixinFields0[0].Descriptor()
	// ohauthtootoken.DefaultID holds the default value on creation for the id field.
	ohauthtootoken.DefaultID = ohauthtootokenDescID.Default.(func() string)
	organizationMixin := schema.Organization{}.Mixin()
	organization.Policy = privacy.NewPolicies(schema.Organization{})
	organization.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := organization.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	organizationMixinHooks0 := organizationMixin[0].Hooks()
	organizationMixinHooks2 := organizationMixin[2].Hooks()
	organizationHooks := schema.Organization{}.Hooks()

	organization.Hooks[1] = organizationMixinHooks0[0]

	organization.Hooks[2] = organizationMixinHooks2[0]

	organization.Hooks[3] = organizationHooks[0]

	organization.Hooks[4] = organizationHooks[1]
	organizationMixinInters2 := organizationMixin[2].Interceptors()
	organizationInters := schema.Organization{}.Interceptors()
	organization.Interceptors[0] = organizationMixinInters2[0]
	organization.Interceptors[1] = organizationInters[0]
	organizationMixinFields0 := organizationMixin[0].Fields()
	_ = organizationMixinFields0
	organizationMixinFields1 := organizationMixin[1].Fields()
	_ = organizationMixinFields1
	organizationFields := schema.Organization{}.Fields()
	_ = organizationFields
	// organizationDescCreatedAt is the schema descriptor for created_at field.
	organizationDescCreatedAt := organizationMixinFields0[0].Descriptor()
	// organization.DefaultCreatedAt holds the default value on creation for the created_at field.
	organization.DefaultCreatedAt = organizationDescCreatedAt.Default.(func() time.Time)
	// organizationDescUpdatedAt is the schema descriptor for updated_at field.
	organizationDescUpdatedAt := organizationMixinFields0[1].Descriptor()
	// organization.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	organization.DefaultUpdatedAt = organizationDescUpdatedAt.Default.(func() time.Time)
	// organization.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	organization.UpdateDefaultUpdatedAt = organizationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// organizationDescName is the schema descriptor for name field.
	organizationDescName := organizationFields[0].Descriptor()
	// organization.NameValidator is a validator for the "name" field. It is called by the builders before save.
	organization.NameValidator = func() func(string) error {
		validators := organizationDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// organizationDescDisplayName is the schema descriptor for display_name field.
	organizationDescDisplayName := organizationFields[1].Descriptor()
	// organization.DefaultDisplayName holds the default value on creation for the display_name field.
	organization.DefaultDisplayName = organizationDescDisplayName.Default.(string)
	// organization.DisplayNameValidator is a validator for the "display_name" field. It is called by the builders before save.
	organization.DisplayNameValidator = organizationDescDisplayName.Validators[0].(func(string) error)
	// organizationDescID is the schema descriptor for id field.
	organizationDescID := organizationMixinFields1[0].Descriptor()
	// organization.DefaultID holds the default value on creation for the id field.
	organization.DefaultID = organizationDescID.Default.(func() string)
	organizationsettingMixin := schema.OrganizationSetting{}.Mixin()
	organizationsettingMixinHooks0 := organizationsettingMixin[0].Hooks()
	organizationsetting.Hooks[0] = organizationsettingMixinHooks0[0]
	organizationsettingMixinFields0 := organizationsettingMixin[0].Fields()
	_ = organizationsettingMixinFields0
	organizationsettingMixinFields1 := organizationsettingMixin[1].Fields()
	_ = organizationsettingMixinFields1
	organizationsettingFields := schema.OrganizationSetting{}.Fields()
	_ = organizationsettingFields
	// organizationsettingDescCreatedAt is the schema descriptor for created_at field.
	organizationsettingDescCreatedAt := organizationsettingMixinFields0[0].Descriptor()
	// organizationsetting.DefaultCreatedAt holds the default value on creation for the created_at field.
	organizationsetting.DefaultCreatedAt = organizationsettingDescCreatedAt.Default.(func() time.Time)
	// organizationsettingDescUpdatedAt is the schema descriptor for updated_at field.
	organizationsettingDescUpdatedAt := organizationsettingMixinFields0[1].Descriptor()
	// organizationsetting.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	organizationsetting.DefaultUpdatedAt = organizationsettingDescUpdatedAt.Default.(func() time.Time)
	// organizationsetting.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	organizationsetting.UpdateDefaultUpdatedAt = organizationsettingDescUpdatedAt.UpdateDefault.(func() time.Time)
	// organizationsettingDescTags is the schema descriptor for tags field.
	organizationsettingDescTags := organizationsettingFields[9].Descriptor()
	// organizationsetting.DefaultTags holds the default value on creation for the tags field.
	organizationsetting.DefaultTags = organizationsettingDescTags.Default.([]string)
	// organizationsettingDescID is the schema descriptor for id field.
	organizationsettingDescID := organizationsettingMixinFields1[0].Descriptor()
	// organizationsetting.DefaultID holds the default value on creation for the id field.
	organizationsetting.DefaultID = organizationsettingDescID.Default.(func() string)
	personalaccesstokenMixin := schema.PersonalAccessToken{}.Mixin()
	personalaccesstokenMixinHooks0 := personalaccesstokenMixin[0].Hooks()
	personalaccesstoken.Hooks[0] = personalaccesstokenMixinHooks0[0]
	personalaccesstokenMixinFields0 := personalaccesstokenMixin[0].Fields()
	_ = personalaccesstokenMixinFields0
	personalaccesstokenMixinFields1 := personalaccesstokenMixin[1].Fields()
	_ = personalaccesstokenMixinFields1
	personalaccesstokenFields := schema.PersonalAccessToken{}.Fields()
	_ = personalaccesstokenFields
	// personalaccesstokenDescCreatedAt is the schema descriptor for created_at field.
	personalaccesstokenDescCreatedAt := personalaccesstokenMixinFields0[0].Descriptor()
	// personalaccesstoken.DefaultCreatedAt holds the default value on creation for the created_at field.
	personalaccesstoken.DefaultCreatedAt = personalaccesstokenDescCreatedAt.Default.(func() time.Time)
	// personalaccesstokenDescUpdatedAt is the schema descriptor for updated_at field.
	personalaccesstokenDescUpdatedAt := personalaccesstokenMixinFields0[1].Descriptor()
	// personalaccesstoken.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	personalaccesstoken.DefaultUpdatedAt = personalaccesstokenDescUpdatedAt.Default.(func() time.Time)
	// personalaccesstoken.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	personalaccesstoken.UpdateDefaultUpdatedAt = personalaccesstokenDescUpdatedAt.UpdateDefault.(func() time.Time)
	// personalaccesstokenDescToken is the schema descriptor for token field.
	personalaccesstokenDescToken := personalaccesstokenFields[1].Descriptor()
	// personalaccesstoken.DefaultToken holds the default value on creation for the token field.
	personalaccesstoken.DefaultToken = personalaccesstokenDescToken.Default.(func() string)
	// personalaccesstokenDescDescription is the schema descriptor for description field.
	personalaccesstokenDescDescription := personalaccesstokenFields[4].Descriptor()
	// personalaccesstoken.DefaultDescription holds the default value on creation for the description field.
	personalaccesstoken.DefaultDescription = personalaccesstokenDescDescription.Default.(string)
	// personalaccesstokenDescLastUsedAt is the schema descriptor for last_used_at field.
	personalaccesstokenDescLastUsedAt := personalaccesstokenFields[5].Descriptor()
	// personalaccesstoken.UpdateDefaultLastUsedAt holds the default value on update for the last_used_at field.
	personalaccesstoken.UpdateDefaultLastUsedAt = personalaccesstokenDescLastUsedAt.UpdateDefault.(func() time.Time)
	// personalaccesstokenDescID is the schema descriptor for id field.
	personalaccesstokenDescID := personalaccesstokenMixinFields1[0].Descriptor()
	// personalaccesstoken.DefaultID holds the default value on creation for the id field.
	personalaccesstoken.DefaultID = personalaccesstokenDescID.Default.(func() string)
	refreshtokenMixin := schema.RefreshToken{}.Mixin()
	refreshtokenMixinFields0 := refreshtokenMixin[0].Fields()
	_ = refreshtokenMixinFields0
	refreshtokenFields := schema.RefreshToken{}.Fields()
	_ = refreshtokenFields
	// refreshtokenDescExpiresAt is the schema descriptor for expires_at field.
	refreshtokenDescExpiresAt := refreshtokenFields[1].Descriptor()
	// refreshtoken.DefaultExpiresAt holds the default value on creation for the expires_at field.
	refreshtoken.DefaultExpiresAt = refreshtokenDescExpiresAt.Default.(func() time.Time)
	// refreshtokenDescIssuedAt is the schema descriptor for issued_at field.
	refreshtokenDescIssuedAt := refreshtokenFields[2].Descriptor()
	// refreshtoken.DefaultIssuedAt holds the default value on creation for the issued_at field.
	refreshtoken.DefaultIssuedAt = refreshtokenDescIssuedAt.Default.(time.Time)
	// refreshtokenDescID is the schema descriptor for id field.
	refreshtokenDescID := refreshtokenMixinFields0[0].Descriptor()
	// refreshtoken.DefaultID holds the default value on creation for the id field.
	refreshtoken.DefaultID = refreshtokenDescID.Default.(func() string)
	sessionMixin := schema.Session{}.Mixin()
	sessionMixinHooks0 := sessionMixin[0].Hooks()
	session.Hooks[0] = sessionMixinHooks0[0]
	sessionMixinFields0 := sessionMixin[0].Fields()
	_ = sessionMixinFields0
	sessionMixinFields1 := sessionMixin[1].Fields()
	_ = sessionMixinFields1
	sessionFields := schema.Session{}.Fields()
	_ = sessionFields
	// sessionDescCreatedAt is the schema descriptor for created_at field.
	sessionDescCreatedAt := sessionMixinFields0[0].Descriptor()
	// session.DefaultCreatedAt holds the default value on creation for the created_at field.
	session.DefaultCreatedAt = sessionDescCreatedAt.Default.(func() time.Time)
	// sessionDescUpdatedAt is the schema descriptor for updated_at field.
	sessionDescUpdatedAt := sessionMixinFields0[1].Descriptor()
	// session.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	session.DefaultUpdatedAt = sessionDescUpdatedAt.Default.(func() time.Time)
	// session.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	session.UpdateDefaultUpdatedAt = sessionDescUpdatedAt.UpdateDefault.(func() time.Time)
	// sessionDescIssuedAt is the schema descriptor for issued_at field.
	sessionDescIssuedAt := sessionFields[1].Descriptor()
	// session.DefaultIssuedAt holds the default value on creation for the issued_at field.
	session.DefaultIssuedAt = sessionDescIssuedAt.Default.(func() time.Time)
	// sessionDescExpiresAt is the schema descriptor for expires_at field.
	sessionDescExpiresAt := sessionFields[2].Descriptor()
	// session.DefaultExpiresAt holds the default value on creation for the expires_at field.
	session.DefaultExpiresAt = sessionDescExpiresAt.Default.(func() time.Time)
	// sessionDescID is the schema descriptor for id field.
	sessionDescID := sessionMixinFields1[0].Descriptor()
	// session.DefaultID holds the default value on creation for the id field.
	session.DefaultID = sessionDescID.Default.(func() string)
	userMixin := schema.User{}.Mixin()
	user.Policy = privacy.NewPolicies(schema.User{})
	user.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := user.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	userMixinHooks0 := userMixin[0].Hooks()
	userMixinHooks1 := userMixin[1].Hooks()
	userHooks := schema.User{}.Hooks()

	user.Hooks[1] = userMixinHooks0[0]

	user.Hooks[2] = userMixinHooks1[0]

	user.Hooks[3] = userHooks[0]
	userMixinInters1 := userMixin[1].Interceptors()
	user.Interceptors[0] = userMixinInters1[0]
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userMixinFields3 := userMixin[3].Fields()
	_ = userMixinFields3
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userMixinFields0[0].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userMixinFields0[1].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[0].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescFirstName is the schema descriptor for first_name field.
	userDescFirstName := userFields[1].Descriptor()
	// user.FirstNameValidator is a validator for the "first_name" field. It is called by the builders before save.
	user.FirstNameValidator = func() func(string) error {
		validators := userDescFirstName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(first_name string) error {
			for _, fn := range fns {
				if err := fn(first_name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// userDescLastName is the schema descriptor for last_name field.
	userDescLastName := userFields[2].Descriptor()
	// user.LastNameValidator is a validator for the "last_name" field. It is called by the builders before save.
	user.LastNameValidator = func() func(string) error {
		validators := userDescLastName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(last_name string) error {
			for _, fn := range fns {
				if err := fn(last_name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// userDescDisplayName is the schema descriptor for display_name field.
	userDescDisplayName := userFields[3].Descriptor()
	// user.DefaultDisplayName holds the default value on creation for the display_name field.
	user.DefaultDisplayName = userDescDisplayName.Default.(string)
	// user.DisplayNameValidator is a validator for the "display_name" field. It is called by the builders before save.
	user.DisplayNameValidator = func() func(string) error {
		validators := userDescDisplayName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
			validators[2].(func(string) error),
		}
		return func(display_name string) error {
			for _, fn := range fns {
				if err := fn(display_name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// userDescAvatarRemoteURL is the schema descriptor for avatar_remote_url field.
	userDescAvatarRemoteURL := userFields[4].Descriptor()
	// user.AvatarRemoteURLValidator is a validator for the "avatar_remote_url" field. It is called by the builders before save.
	user.AvatarRemoteURLValidator = func() func(string) error {
		validators := userDescAvatarRemoteURL.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(avatar_remote_url string) error {
			for _, fn := range fns {
				if err := fn(avatar_remote_url); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// userDescAvatarLocalFile is the schema descriptor for avatar_local_file field.
	userDescAvatarLocalFile := userFields[5].Descriptor()
	// user.AvatarLocalFileValidator is a validator for the "avatar_local_file" field. It is called by the builders before save.
	user.AvatarLocalFileValidator = userDescAvatarLocalFile.Validators[0].(func(string) error)
	// userDescAvatarUpdatedAt is the schema descriptor for avatar_updated_at field.
	userDescAvatarUpdatedAt := userFields[6].Descriptor()
	// user.UpdateDefaultAvatarUpdatedAt holds the default value on update for the avatar_updated_at field.
	user.UpdateDefaultAvatarUpdatedAt = userDescAvatarUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescLastSeen is the schema descriptor for last_seen field.
	userDescLastSeen := userFields[7].Descriptor()
	// user.UpdateDefaultLastSeen holds the default value on update for the last_seen field.
	user.UpdateDefaultLastSeen = userDescLastSeen.UpdateDefault.(func() time.Time)
	// userDescOauth is the schema descriptor for oauth field.
	userDescOauth := userFields[10].Descriptor()
	// user.DefaultOauth holds the default value on creation for the oauth field.
	user.DefaultOauth = userDescOauth.Default.(bool)
	// userDescID is the schema descriptor for id field.
	userDescID := userMixinFields3[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() string)
	usersettingMixin := schema.UserSetting{}.Mixin()
	usersettingMixinHooks0 := usersettingMixin[0].Hooks()
	usersetting.Hooks[0] = usersettingMixinHooks0[0]
	usersettingMixinFields0 := usersettingMixin[0].Fields()
	_ = usersettingMixinFields0
	usersettingMixinFields1 := usersettingMixin[1].Fields()
	_ = usersettingMixinFields1
	usersettingFields := schema.UserSetting{}.Fields()
	_ = usersettingFields
	// usersettingDescCreatedAt is the schema descriptor for created_at field.
	usersettingDescCreatedAt := usersettingMixinFields0[0].Descriptor()
	// usersetting.DefaultCreatedAt holds the default value on creation for the created_at field.
	usersetting.DefaultCreatedAt = usersettingDescCreatedAt.Default.(func() time.Time)
	// usersettingDescUpdatedAt is the schema descriptor for updated_at field.
	usersettingDescUpdatedAt := usersettingMixinFields0[1].Descriptor()
	// usersetting.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	usersetting.DefaultUpdatedAt = usersettingDescUpdatedAt.Default.(func() time.Time)
	// usersetting.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	usersetting.UpdateDefaultUpdatedAt = usersettingDescUpdatedAt.UpdateDefault.(func() time.Time)
	// usersettingDescLocked is the schema descriptor for locked field.
	usersettingDescLocked := usersettingFields[0].Descriptor()
	// usersetting.DefaultLocked holds the default value on creation for the locked field.
	usersetting.DefaultLocked = usersettingDescLocked.Default.(bool)
	// usersettingDescPermissions is the schema descriptor for permissions field.
	usersettingDescPermissions := usersettingFields[6].Descriptor()
	// usersetting.DefaultPermissions holds the default value on creation for the permissions field.
	usersetting.DefaultPermissions = usersettingDescPermissions.Default.([]string)
	// usersettingDescEmailConfirmed is the schema descriptor for email_confirmed field.
	usersettingDescEmailConfirmed := usersettingFields[7].Descriptor()
	// usersetting.DefaultEmailConfirmed holds the default value on creation for the email_confirmed field.
	usersetting.DefaultEmailConfirmed = usersettingDescEmailConfirmed.Default.(bool)
	// usersettingDescTags is the schema descriptor for tags field.
	usersettingDescTags := usersettingFields[8].Descriptor()
	// usersetting.DefaultTags holds the default value on creation for the tags field.
	usersetting.DefaultTags = usersettingDescTags.Default.([]string)
	// usersettingDescID is the schema descriptor for id field.
	usersettingDescID := usersettingMixinFields1[0].Descriptor()
	// usersetting.DefaultID holds the default value on creation for the id field.
	usersetting.DefaultID = usersettingDescID.Default.(func() string)
}

const (
	Version = "v0.12.5"                                         // Version of ent codegen.
	Sum     = "h1:KREM5E4CSoej4zeGa88Ou/gfturAnpUv0mzAjch1sj4=" // Sum of ent codegen.
)
