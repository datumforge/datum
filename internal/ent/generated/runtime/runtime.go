// Code generated by ent, DO NOT EDIT.

package runtime

import (
	"context"
	"time"

	"github.com/datumforge/datum/internal/ent/generated/apitoken"
	"github.com/datumforge/datum/internal/ent/generated/documentdata"
	"github.com/datumforge/datum/internal/ent/generated/documentdatahistory"
	"github.com/datumforge/datum/internal/ent/generated/emailverificationtoken"
	"github.com/datumforge/datum/internal/ent/generated/entitlement"
	"github.com/datumforge/datum/internal/ent/generated/entitlementhistory"
	"github.com/datumforge/datum/internal/ent/generated/event"
	"github.com/datumforge/datum/internal/ent/generated/eventhistory"
	"github.com/datumforge/datum/internal/ent/generated/feature"
	"github.com/datumforge/datum/internal/ent/generated/featurehistory"
	"github.com/datumforge/datum/internal/ent/generated/file"
	"github.com/datumforge/datum/internal/ent/generated/filehistory"
	"github.com/datumforge/datum/internal/ent/generated/group"
	"github.com/datumforge/datum/internal/ent/generated/grouphistory"
	"github.com/datumforge/datum/internal/ent/generated/groupmembership"
	"github.com/datumforge/datum/internal/ent/generated/groupmembershiphistory"
	"github.com/datumforge/datum/internal/ent/generated/groupsetting"
	"github.com/datumforge/datum/internal/ent/generated/groupsettinghistory"
	"github.com/datumforge/datum/internal/ent/generated/hush"
	"github.com/datumforge/datum/internal/ent/generated/hushhistory"
	"github.com/datumforge/datum/internal/ent/generated/integration"
	"github.com/datumforge/datum/internal/ent/generated/integrationhistory"
	"github.com/datumforge/datum/internal/ent/generated/invite"
	"github.com/datumforge/datum/internal/ent/generated/oauthprovider"
	"github.com/datumforge/datum/internal/ent/generated/oauthproviderhistory"
	"github.com/datumforge/datum/internal/ent/generated/ohauthtootoken"
	"github.com/datumforge/datum/internal/ent/generated/organization"
	"github.com/datumforge/datum/internal/ent/generated/organizationhistory"
	"github.com/datumforge/datum/internal/ent/generated/organizationsetting"
	"github.com/datumforge/datum/internal/ent/generated/organizationsettinghistory"
	"github.com/datumforge/datum/internal/ent/generated/orgmembership"
	"github.com/datumforge/datum/internal/ent/generated/orgmembershiphistory"
	"github.com/datumforge/datum/internal/ent/generated/passwordresettoken"
	"github.com/datumforge/datum/internal/ent/generated/personalaccesstoken"
	"github.com/datumforge/datum/internal/ent/generated/subscriber"
	"github.com/datumforge/datum/internal/ent/generated/template"
	"github.com/datumforge/datum/internal/ent/generated/templatehistory"
	"github.com/datumforge/datum/internal/ent/generated/tfasetting"
	"github.com/datumforge/datum/internal/ent/generated/user"
	"github.com/datumforge/datum/internal/ent/generated/userhistory"
	"github.com/datumforge/datum/internal/ent/generated/usersetting"
	"github.com/datumforge/datum/internal/ent/generated/usersettinghistory"
	"github.com/datumforge/datum/internal/ent/generated/webauthn"
	"github.com/datumforge/datum/internal/ent/generated/webhook"
	"github.com/datumforge/datum/internal/ent/generated/webhookhistory"
	"github.com/datumforge/datum/internal/ent/schema"

	"entgo.io/ent"
	"entgo.io/ent/privacy"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	apitokenMixin := schema.APIToken{}.Mixin()
	apitoken.Policy = privacy.NewPolicies(schema.APIToken{})
	apitoken.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := apitoken.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	apitokenMixinHooks0 := apitokenMixin[0].Hooks()
	apitokenMixinHooks1 := apitokenMixin[1].Hooks()
	apitokenHooks := schema.APIToken{}.Hooks()

	apitoken.Hooks[1] = apitokenMixinHooks0[0]

	apitoken.Hooks[2] = apitokenMixinHooks1[0]

	apitoken.Hooks[3] = apitokenHooks[0]

	apitoken.Hooks[4] = apitokenHooks[1]
	apitokenMixinInters1 := apitokenMixin[1].Interceptors()
	apitokenMixinInters3 := apitokenMixin[3].Interceptors()
	apitokenInters := schema.APIToken{}.Interceptors()
	apitoken.Interceptors[0] = apitokenMixinInters1[0]
	apitoken.Interceptors[1] = apitokenMixinInters3[0]
	apitoken.Interceptors[2] = apitokenInters[0]
	apitokenMixinFields0 := apitokenMixin[0].Fields()
	_ = apitokenMixinFields0
	apitokenMixinFields2 := apitokenMixin[2].Fields()
	_ = apitokenMixinFields2
	apitokenFields := schema.APIToken{}.Fields()
	_ = apitokenFields
	// apitokenDescCreatedAt is the schema descriptor for created_at field.
	apitokenDescCreatedAt := apitokenMixinFields0[0].Descriptor()
	// apitoken.DefaultCreatedAt holds the default value on creation for the created_at field.
	apitoken.DefaultCreatedAt = apitokenDescCreatedAt.Default.(func() time.Time)
	// apitokenDescUpdatedAt is the schema descriptor for updated_at field.
	apitokenDescUpdatedAt := apitokenMixinFields0[1].Descriptor()
	// apitoken.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	apitoken.DefaultUpdatedAt = apitokenDescUpdatedAt.Default.(func() time.Time)
	// apitoken.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	apitoken.UpdateDefaultUpdatedAt = apitokenDescUpdatedAt.UpdateDefault.(func() time.Time)
	// apitokenDescName is the schema descriptor for name field.
	apitokenDescName := apitokenFields[0].Descriptor()
	// apitoken.NameValidator is a validator for the "name" field. It is called by the builders before save.
	apitoken.NameValidator = apitokenDescName.Validators[0].(func(string) error)
	// apitokenDescToken is the schema descriptor for token field.
	apitokenDescToken := apitokenFields[1].Descriptor()
	// apitoken.DefaultToken holds the default value on creation for the token field.
	apitoken.DefaultToken = apitokenDescToken.Default.(func() string)
	// apitokenDescID is the schema descriptor for id field.
	apitokenDescID := apitokenMixinFields2[0].Descriptor()
	// apitoken.DefaultID holds the default value on creation for the id field.
	apitoken.DefaultID = apitokenDescID.Default.(func() string)
	documentdataMixin := schema.DocumentData{}.Mixin()
	documentdataMixinHooks0 := documentdataMixin[0].Hooks()
	documentdataMixinHooks2 := documentdataMixin[2].Hooks()
	documentdata.Hooks[0] = documentdataMixinHooks0[0]
	documentdata.Hooks[1] = documentdataMixinHooks2[0]
	documentdataMixinInters2 := documentdataMixin[2].Interceptors()
	documentdata.Interceptors[0] = documentdataMixinInters2[0]
	documentdataMixinFields0 := documentdataMixin[0].Fields()
	_ = documentdataMixinFields0
	documentdataMixinFields1 := documentdataMixin[1].Fields()
	_ = documentdataMixinFields1
	documentdataFields := schema.DocumentData{}.Fields()
	_ = documentdataFields
	// documentdataDescCreatedAt is the schema descriptor for created_at field.
	documentdataDescCreatedAt := documentdataMixinFields0[0].Descriptor()
	// documentdata.DefaultCreatedAt holds the default value on creation for the created_at field.
	documentdata.DefaultCreatedAt = documentdataDescCreatedAt.Default.(func() time.Time)
	// documentdataDescUpdatedAt is the schema descriptor for updated_at field.
	documentdataDescUpdatedAt := documentdataMixinFields0[1].Descriptor()
	// documentdata.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	documentdata.DefaultUpdatedAt = documentdataDescUpdatedAt.Default.(func() time.Time)
	// documentdata.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	documentdata.UpdateDefaultUpdatedAt = documentdataDescUpdatedAt.UpdateDefault.(func() time.Time)
	// documentdataDescID is the schema descriptor for id field.
	documentdataDescID := documentdataMixinFields1[0].Descriptor()
	// documentdata.DefaultID holds the default value on creation for the id field.
	documentdata.DefaultID = documentdataDescID.Default.(func() string)
	documentdatahistoryFields := schema.DocumentDataHistory{}.Fields()
	_ = documentdatahistoryFields
	// documentdatahistoryDescHistoryTime is the schema descriptor for history_time field.
	documentdatahistoryDescHistoryTime := documentdatahistoryFields[0].Descriptor()
	// documentdatahistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	documentdatahistory.DefaultHistoryTime = documentdatahistoryDescHistoryTime.Default.(func() time.Time)
	// documentdatahistoryDescCreatedAt is the schema descriptor for created_at field.
	documentdatahistoryDescCreatedAt := documentdatahistoryFields[3].Descriptor()
	// documentdatahistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	documentdatahistory.DefaultCreatedAt = documentdatahistoryDescCreatedAt.Default.(func() time.Time)
	// documentdatahistoryDescUpdatedAt is the schema descriptor for updated_at field.
	documentdatahistoryDescUpdatedAt := documentdatahistoryFields[4].Descriptor()
	// documentdatahistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	documentdatahistory.DefaultUpdatedAt = documentdatahistoryDescUpdatedAt.Default.(func() time.Time)
	// documentdatahistoryDescID is the schema descriptor for id field.
	documentdatahistoryDescID := documentdatahistoryFields[7].Descriptor()
	// documentdatahistory.DefaultID holds the default value on creation for the id field.
	documentdatahistory.DefaultID = documentdatahistoryDescID.Default.(func() string)
	emailverificationtokenMixin := schema.EmailVerificationToken{}.Mixin()
	emailverificationtoken.Policy = privacy.NewPolicies(schema.EmailVerificationToken{})
	emailverificationtoken.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := emailverificationtoken.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	emailverificationtokenMixinHooks0 := emailverificationtokenMixin[0].Hooks()
	emailverificationtokenMixinHooks2 := emailverificationtokenMixin[2].Hooks()
	emailverificationtokenHooks := schema.EmailVerificationToken{}.Hooks()

	emailverificationtoken.Hooks[1] = emailverificationtokenMixinHooks0[0]

	emailverificationtoken.Hooks[2] = emailverificationtokenMixinHooks2[0]

	emailverificationtoken.Hooks[3] = emailverificationtokenHooks[0]
	emailverificationtokenMixinInters2 := emailverificationtokenMixin[2].Interceptors()
	emailverificationtokenMixinInters3 := emailverificationtokenMixin[3].Interceptors()
	emailverificationtoken.Interceptors[0] = emailverificationtokenMixinInters2[0]
	emailverificationtoken.Interceptors[1] = emailverificationtokenMixinInters3[0]
	emailverificationtokenMixinFields0 := emailverificationtokenMixin[0].Fields()
	_ = emailverificationtokenMixinFields0
	emailverificationtokenMixinFields1 := emailverificationtokenMixin[1].Fields()
	_ = emailverificationtokenMixinFields1
	emailverificationtokenFields := schema.EmailVerificationToken{}.Fields()
	_ = emailverificationtokenFields
	// emailverificationtokenDescCreatedAt is the schema descriptor for created_at field.
	emailverificationtokenDescCreatedAt := emailverificationtokenMixinFields0[0].Descriptor()
	// emailverificationtoken.DefaultCreatedAt holds the default value on creation for the created_at field.
	emailverificationtoken.DefaultCreatedAt = emailverificationtokenDescCreatedAt.Default.(func() time.Time)
	// emailverificationtokenDescUpdatedAt is the schema descriptor for updated_at field.
	emailverificationtokenDescUpdatedAt := emailverificationtokenMixinFields0[1].Descriptor()
	// emailverificationtoken.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	emailverificationtoken.DefaultUpdatedAt = emailverificationtokenDescUpdatedAt.Default.(func() time.Time)
	// emailverificationtoken.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	emailverificationtoken.UpdateDefaultUpdatedAt = emailverificationtokenDescUpdatedAt.UpdateDefault.(func() time.Time)
	// emailverificationtokenDescToken is the schema descriptor for token field.
	emailverificationtokenDescToken := emailverificationtokenFields[0].Descriptor()
	// emailverificationtoken.TokenValidator is a validator for the "token" field. It is called by the builders before save.
	emailverificationtoken.TokenValidator = emailverificationtokenDescToken.Validators[0].(func(string) error)
	// emailverificationtokenDescEmail is the schema descriptor for email field.
	emailverificationtokenDescEmail := emailverificationtokenFields[2].Descriptor()
	// emailverificationtoken.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	emailverificationtoken.EmailValidator = func() func(string) error {
		validators := emailverificationtokenDescEmail.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(email string) error {
			for _, fn := range fns {
				if err := fn(email); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// emailverificationtokenDescSecret is the schema descriptor for secret field.
	emailverificationtokenDescSecret := emailverificationtokenFields[3].Descriptor()
	// emailverificationtoken.SecretValidator is a validator for the "secret" field. It is called by the builders before save.
	emailverificationtoken.SecretValidator = emailverificationtokenDescSecret.Validators[0].(func([]byte) error)
	// emailverificationtokenDescID is the schema descriptor for id field.
	emailverificationtokenDescID := emailverificationtokenMixinFields1[0].Descriptor()
	// emailverificationtoken.DefaultID holds the default value on creation for the id field.
	emailverificationtoken.DefaultID = emailverificationtokenDescID.Default.(func() string)
	entitlementMixin := schema.Entitlement{}.Mixin()
	entitlementMixinHooks0 := entitlementMixin[0].Hooks()
	entitlementMixinHooks2 := entitlementMixin[2].Hooks()
	entitlement.Hooks[0] = entitlementMixinHooks0[0]
	entitlement.Hooks[1] = entitlementMixinHooks2[0]
	entitlementMixinInters2 := entitlementMixin[2].Interceptors()
	entitlementMixinInters3 := entitlementMixin[3].Interceptors()
	entitlement.Interceptors[0] = entitlementMixinInters2[0]
	entitlement.Interceptors[1] = entitlementMixinInters3[0]
	entitlementMixinFields0 := entitlementMixin[0].Fields()
	_ = entitlementMixinFields0
	entitlementMixinFields1 := entitlementMixin[1].Fields()
	_ = entitlementMixinFields1
	entitlementFields := schema.Entitlement{}.Fields()
	_ = entitlementFields
	// entitlementDescCreatedAt is the schema descriptor for created_at field.
	entitlementDescCreatedAt := entitlementMixinFields0[0].Descriptor()
	// entitlement.DefaultCreatedAt holds the default value on creation for the created_at field.
	entitlement.DefaultCreatedAt = entitlementDescCreatedAt.Default.(func() time.Time)
	// entitlementDescUpdatedAt is the schema descriptor for updated_at field.
	entitlementDescUpdatedAt := entitlementMixinFields0[1].Descriptor()
	// entitlement.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	entitlement.DefaultUpdatedAt = entitlementDescUpdatedAt.Default.(func() time.Time)
	// entitlement.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	entitlement.UpdateDefaultUpdatedAt = entitlementDescUpdatedAt.UpdateDefault.(func() time.Time)
	// entitlementDescExpires is the schema descriptor for expires field.
	entitlementDescExpires := entitlementFields[3].Descriptor()
	// entitlement.DefaultExpires holds the default value on creation for the expires field.
	entitlement.DefaultExpires = entitlementDescExpires.Default.(bool)
	// entitlementDescCancelled is the schema descriptor for cancelled field.
	entitlementDescCancelled := entitlementFields[5].Descriptor()
	// entitlement.DefaultCancelled holds the default value on creation for the cancelled field.
	entitlement.DefaultCancelled = entitlementDescCancelled.Default.(bool)
	// entitlementDescID is the schema descriptor for id field.
	entitlementDescID := entitlementMixinFields1[0].Descriptor()
	// entitlement.DefaultID holds the default value on creation for the id field.
	entitlement.DefaultID = entitlementDescID.Default.(func() string)
	entitlementhistoryFields := schema.EntitlementHistory{}.Fields()
	_ = entitlementhistoryFields
	// entitlementhistoryDescHistoryTime is the schema descriptor for history_time field.
	entitlementhistoryDescHistoryTime := entitlementhistoryFields[0].Descriptor()
	// entitlementhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	entitlementhistory.DefaultHistoryTime = entitlementhistoryDescHistoryTime.Default.(func() time.Time)
	// entitlementhistoryDescCreatedAt is the schema descriptor for created_at field.
	entitlementhistoryDescCreatedAt := entitlementhistoryFields[3].Descriptor()
	// entitlementhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	entitlementhistory.DefaultCreatedAt = entitlementhistoryDescCreatedAt.Default.(func() time.Time)
	// entitlementhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	entitlementhistoryDescUpdatedAt := entitlementhistoryFields[4].Descriptor()
	// entitlementhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	entitlementhistory.DefaultUpdatedAt = entitlementhistoryDescUpdatedAt.Default.(func() time.Time)
	// entitlementhistoryDescExpires is the schema descriptor for expires field.
	entitlementhistoryDescExpires := entitlementhistoryFields[14].Descriptor()
	// entitlementhistory.DefaultExpires holds the default value on creation for the expires field.
	entitlementhistory.DefaultExpires = entitlementhistoryDescExpires.Default.(bool)
	// entitlementhistoryDescCancelled is the schema descriptor for cancelled field.
	entitlementhistoryDescCancelled := entitlementhistoryFields[16].Descriptor()
	// entitlementhistory.DefaultCancelled holds the default value on creation for the cancelled field.
	entitlementhistory.DefaultCancelled = entitlementhistoryDescCancelled.Default.(bool)
	// entitlementhistoryDescID is the schema descriptor for id field.
	entitlementhistoryDescID := entitlementhistoryFields[7].Descriptor()
	// entitlementhistory.DefaultID holds the default value on creation for the id field.
	entitlementhistory.DefaultID = entitlementhistoryDescID.Default.(func() string)
	eventMixin := schema.Event{}.Mixin()
	eventMixinHooks0 := eventMixin[0].Hooks()
	event.Hooks[0] = eventMixinHooks0[0]
	eventMixinFields0 := eventMixin[0].Fields()
	_ = eventMixinFields0
	eventMixinFields1 := eventMixin[1].Fields()
	_ = eventMixinFields1
	eventFields := schema.Event{}.Fields()
	_ = eventFields
	// eventDescCreatedAt is the schema descriptor for created_at field.
	eventDescCreatedAt := eventMixinFields0[0].Descriptor()
	// event.DefaultCreatedAt holds the default value on creation for the created_at field.
	event.DefaultCreatedAt = eventDescCreatedAt.Default.(func() time.Time)
	// eventDescUpdatedAt is the schema descriptor for updated_at field.
	eventDescUpdatedAt := eventMixinFields0[1].Descriptor()
	// event.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	event.DefaultUpdatedAt = eventDescUpdatedAt.Default.(func() time.Time)
	// event.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	event.UpdateDefaultUpdatedAt = eventDescUpdatedAt.UpdateDefault.(func() time.Time)
	// eventDescID is the schema descriptor for id field.
	eventDescID := eventMixinFields1[0].Descriptor()
	// event.DefaultID holds the default value on creation for the id field.
	event.DefaultID = eventDescID.Default.(func() string)
	eventhistoryFields := schema.EventHistory{}.Fields()
	_ = eventhistoryFields
	// eventhistoryDescHistoryTime is the schema descriptor for history_time field.
	eventhistoryDescHistoryTime := eventhistoryFields[0].Descriptor()
	// eventhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	eventhistory.DefaultHistoryTime = eventhistoryDescHistoryTime.Default.(func() time.Time)
	// eventhistoryDescCreatedAt is the schema descriptor for created_at field.
	eventhistoryDescCreatedAt := eventhistoryFields[3].Descriptor()
	// eventhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	eventhistory.DefaultCreatedAt = eventhistoryDescCreatedAt.Default.(func() time.Time)
	// eventhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	eventhistoryDescUpdatedAt := eventhistoryFields[4].Descriptor()
	// eventhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	eventhistory.DefaultUpdatedAt = eventhistoryDescUpdatedAt.Default.(func() time.Time)
	// eventhistoryDescID is the schema descriptor for id field.
	eventhistoryDescID := eventhistoryFields[7].Descriptor()
	// eventhistory.DefaultID holds the default value on creation for the id field.
	eventhistory.DefaultID = eventhistoryDescID.Default.(func() string)
	featureMixin := schema.Feature{}.Mixin()
	featureMixinHooks0 := featureMixin[0].Hooks()
	featureMixinHooks1 := featureMixin[1].Hooks()
	feature.Hooks[0] = featureMixinHooks0[0]
	feature.Hooks[1] = featureMixinHooks1[0]
	featureMixinInters1 := featureMixin[1].Interceptors()
	feature.Interceptors[0] = featureMixinInters1[0]
	featureMixinFields0 := featureMixin[0].Fields()
	_ = featureMixinFields0
	featureMixinFields2 := featureMixin[2].Fields()
	_ = featureMixinFields2
	featureFields := schema.Feature{}.Fields()
	_ = featureFields
	// featureDescCreatedAt is the schema descriptor for created_at field.
	featureDescCreatedAt := featureMixinFields0[0].Descriptor()
	// feature.DefaultCreatedAt holds the default value on creation for the created_at field.
	feature.DefaultCreatedAt = featureDescCreatedAt.Default.(func() time.Time)
	// featureDescUpdatedAt is the schema descriptor for updated_at field.
	featureDescUpdatedAt := featureMixinFields0[1].Descriptor()
	// feature.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	feature.DefaultUpdatedAt = featureDescUpdatedAt.Default.(func() time.Time)
	// feature.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	feature.UpdateDefaultUpdatedAt = featureDescUpdatedAt.UpdateDefault.(func() time.Time)
	// featureDescName is the schema descriptor for name field.
	featureDescName := featureFields[0].Descriptor()
	// feature.NameValidator is a validator for the "name" field. It is called by the builders before save.
	feature.NameValidator = featureDescName.Validators[0].(func(string) error)
	// featureDescGlobal is the schema descriptor for global field.
	featureDescGlobal := featureFields[1].Descriptor()
	// feature.DefaultGlobal holds the default value on creation for the global field.
	feature.DefaultGlobal = featureDescGlobal.Default.(bool)
	// featureDescEnabled is the schema descriptor for enabled field.
	featureDescEnabled := featureFields[2].Descriptor()
	// feature.DefaultEnabled holds the default value on creation for the enabled field.
	feature.DefaultEnabled = featureDescEnabled.Default.(bool)
	// featureDescID is the schema descriptor for id field.
	featureDescID := featureMixinFields2[0].Descriptor()
	// feature.DefaultID holds the default value on creation for the id field.
	feature.DefaultID = featureDescID.Default.(func() string)
	featurehistoryFields := schema.FeatureHistory{}.Fields()
	_ = featurehistoryFields
	// featurehistoryDescHistoryTime is the schema descriptor for history_time field.
	featurehistoryDescHistoryTime := featurehistoryFields[0].Descriptor()
	// featurehistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	featurehistory.DefaultHistoryTime = featurehistoryDescHistoryTime.Default.(func() time.Time)
	// featurehistoryDescCreatedAt is the schema descriptor for created_at field.
	featurehistoryDescCreatedAt := featurehistoryFields[3].Descriptor()
	// featurehistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	featurehistory.DefaultCreatedAt = featurehistoryDescCreatedAt.Default.(func() time.Time)
	// featurehistoryDescUpdatedAt is the schema descriptor for updated_at field.
	featurehistoryDescUpdatedAt := featurehistoryFields[4].Descriptor()
	// featurehistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	featurehistory.DefaultUpdatedAt = featurehistoryDescUpdatedAt.Default.(func() time.Time)
	// featurehistoryDescGlobal is the schema descriptor for global field.
	featurehistoryDescGlobal := featurehistoryFields[11].Descriptor()
	// featurehistory.DefaultGlobal holds the default value on creation for the global field.
	featurehistory.DefaultGlobal = featurehistoryDescGlobal.Default.(bool)
	// featurehistoryDescEnabled is the schema descriptor for enabled field.
	featurehistoryDescEnabled := featurehistoryFields[12].Descriptor()
	// featurehistory.DefaultEnabled holds the default value on creation for the enabled field.
	featurehistory.DefaultEnabled = featurehistoryDescEnabled.Default.(bool)
	// featurehistoryDescID is the schema descriptor for id field.
	featurehistoryDescID := featurehistoryFields[9].Descriptor()
	// featurehistory.DefaultID holds the default value on creation for the id field.
	featurehistory.DefaultID = featurehistoryDescID.Default.(func() string)
	fileMixin := schema.File{}.Mixin()
	fileMixinHooks0 := fileMixin[0].Hooks()
	fileMixinHooks1 := fileMixin[1].Hooks()
	file.Hooks[0] = fileMixinHooks0[0]
	file.Hooks[1] = fileMixinHooks1[0]
	fileMixinInters1 := fileMixin[1].Interceptors()
	file.Interceptors[0] = fileMixinInters1[0]
	fileMixinFields0 := fileMixin[0].Fields()
	_ = fileMixinFields0
	fileMixinFields2 := fileMixin[2].Fields()
	_ = fileMixinFields2
	fileFields := schema.File{}.Fields()
	_ = fileFields
	// fileDescCreatedAt is the schema descriptor for created_at field.
	fileDescCreatedAt := fileMixinFields0[0].Descriptor()
	// file.DefaultCreatedAt holds the default value on creation for the created_at field.
	file.DefaultCreatedAt = fileDescCreatedAt.Default.(func() time.Time)
	// fileDescUpdatedAt is the schema descriptor for updated_at field.
	fileDescUpdatedAt := fileMixinFields0[1].Descriptor()
	// file.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	file.DefaultUpdatedAt = fileDescUpdatedAt.Default.(func() time.Time)
	// file.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	file.UpdateDefaultUpdatedAt = fileDescUpdatedAt.UpdateDefault.(func() time.Time)
	// fileDescFileSize is the schema descriptor for file_size field.
	fileDescFileSize := fileFields[2].Descriptor()
	// file.FileSizeValidator is a validator for the "file_size" field. It is called by the builders before save.
	file.FileSizeValidator = fileDescFileSize.Validators[0].(func(int) error)
	// fileDescID is the schema descriptor for id field.
	fileDescID := fileMixinFields2[0].Descriptor()
	// file.DefaultID holds the default value on creation for the id field.
	file.DefaultID = fileDescID.Default.(func() string)
	filehistoryFields := schema.FileHistory{}.Fields()
	_ = filehistoryFields
	// filehistoryDescHistoryTime is the schema descriptor for history_time field.
	filehistoryDescHistoryTime := filehistoryFields[0].Descriptor()
	// filehistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	filehistory.DefaultHistoryTime = filehistoryDescHistoryTime.Default.(func() time.Time)
	// filehistoryDescCreatedAt is the schema descriptor for created_at field.
	filehistoryDescCreatedAt := filehistoryFields[3].Descriptor()
	// filehistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	filehistory.DefaultCreatedAt = filehistoryDescCreatedAt.Default.(func() time.Time)
	// filehistoryDescUpdatedAt is the schema descriptor for updated_at field.
	filehistoryDescUpdatedAt := filehistoryFields[4].Descriptor()
	// filehistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	filehistory.DefaultUpdatedAt = filehistoryDescUpdatedAt.Default.(func() time.Time)
	// filehistoryDescID is the schema descriptor for id field.
	filehistoryDescID := filehistoryFields[9].Descriptor()
	// filehistory.DefaultID holds the default value on creation for the id field.
	filehistory.DefaultID = filehistoryDescID.Default.(func() string)
	groupMixin := schema.Group{}.Mixin()
	group.Policy = privacy.NewPolicies(schema.Group{})
	group.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := group.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	groupMixinHooks0 := groupMixin[0].Hooks()
	groupMixinHooks1 := groupMixin[1].Hooks()
	groupHooks := schema.Group{}.Hooks()

	group.Hooks[1] = groupMixinHooks0[0]

	group.Hooks[2] = groupMixinHooks1[0]

	group.Hooks[3] = groupHooks[0]

	group.Hooks[4] = groupHooks[1]
	groupMixinInters1 := groupMixin[1].Interceptors()
	groupMixinInters3 := groupMixin[3].Interceptors()
	groupInters := schema.Group{}.Interceptors()
	group.Interceptors[0] = groupMixinInters1[0]
	group.Interceptors[1] = groupMixinInters3[0]
	group.Interceptors[2] = groupInters[0]
	groupMixinFields0 := groupMixin[0].Fields()
	_ = groupMixinFields0
	groupMixinFields2 := groupMixin[2].Fields()
	_ = groupMixinFields2
	groupFields := schema.Group{}.Fields()
	_ = groupFields
	// groupDescCreatedAt is the schema descriptor for created_at field.
	groupDescCreatedAt := groupMixinFields0[0].Descriptor()
	// group.DefaultCreatedAt holds the default value on creation for the created_at field.
	group.DefaultCreatedAt = groupDescCreatedAt.Default.(func() time.Time)
	// groupDescUpdatedAt is the schema descriptor for updated_at field.
	groupDescUpdatedAt := groupMixinFields0[1].Descriptor()
	// group.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	group.DefaultUpdatedAt = groupDescUpdatedAt.Default.(func() time.Time)
	// group.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	group.UpdateDefaultUpdatedAt = groupDescUpdatedAt.UpdateDefault.(func() time.Time)
	// groupDescName is the schema descriptor for name field.
	groupDescName := groupFields[0].Descriptor()
	// group.NameValidator is a validator for the "name" field. It is called by the builders before save.
	group.NameValidator = groupDescName.Validators[0].(func(string) error)
	// groupDescDisplayName is the schema descriptor for display_name field.
	groupDescDisplayName := groupFields[4].Descriptor()
	// group.DefaultDisplayName holds the default value on creation for the display_name field.
	group.DefaultDisplayName = groupDescDisplayName.Default.(string)
	// group.DisplayNameValidator is a validator for the "display_name" field. It is called by the builders before save.
	group.DisplayNameValidator = groupDescDisplayName.Validators[0].(func(string) error)
	// groupDescID is the schema descriptor for id field.
	groupDescID := groupMixinFields2[0].Descriptor()
	// group.DefaultID holds the default value on creation for the id field.
	group.DefaultID = groupDescID.Default.(func() string)
	grouphistoryFields := schema.GroupHistory{}.Fields()
	_ = grouphistoryFields
	// grouphistoryDescHistoryTime is the schema descriptor for history_time field.
	grouphistoryDescHistoryTime := grouphistoryFields[0].Descriptor()
	// grouphistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	grouphistory.DefaultHistoryTime = grouphistoryDescHistoryTime.Default.(func() time.Time)
	// grouphistoryDescCreatedAt is the schema descriptor for created_at field.
	grouphistoryDescCreatedAt := grouphistoryFields[3].Descriptor()
	// grouphistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	grouphistory.DefaultCreatedAt = grouphistoryDescCreatedAt.Default.(func() time.Time)
	// grouphistoryDescUpdatedAt is the schema descriptor for updated_at field.
	grouphistoryDescUpdatedAt := grouphistoryFields[4].Descriptor()
	// grouphistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	grouphistory.DefaultUpdatedAt = grouphistoryDescUpdatedAt.Default.(func() time.Time)
	// grouphistoryDescDisplayName is the schema descriptor for display_name field.
	grouphistoryDescDisplayName := grouphistoryFields[15].Descriptor()
	// grouphistory.DefaultDisplayName holds the default value on creation for the display_name field.
	grouphistory.DefaultDisplayName = grouphistoryDescDisplayName.Default.(string)
	// grouphistoryDescID is the schema descriptor for id field.
	grouphistoryDescID := grouphistoryFields[9].Descriptor()
	// grouphistory.DefaultID holds the default value on creation for the id field.
	grouphistory.DefaultID = grouphistoryDescID.Default.(func() string)
	groupmembershipMixin := schema.GroupMembership{}.Mixin()
	groupmembership.Policy = privacy.NewPolicies(schema.GroupMembership{})
	groupmembership.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := groupmembership.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	groupmembershipMixinHooks0 := groupmembershipMixin[0].Hooks()
	groupmembershipMixinHooks2 := groupmembershipMixin[2].Hooks()
	groupmembershipHooks := schema.GroupMembership{}.Hooks()

	groupmembership.Hooks[1] = groupmembershipMixinHooks0[0]

	groupmembership.Hooks[2] = groupmembershipMixinHooks2[0]

	groupmembership.Hooks[3] = groupmembershipHooks[0]
	groupmembershipMixinInters2 := groupmembershipMixin[2].Interceptors()
	groupmembership.Interceptors[0] = groupmembershipMixinInters2[0]
	groupmembershipMixinFields0 := groupmembershipMixin[0].Fields()
	_ = groupmembershipMixinFields0
	groupmembershipMixinFields1 := groupmembershipMixin[1].Fields()
	_ = groupmembershipMixinFields1
	groupmembershipFields := schema.GroupMembership{}.Fields()
	_ = groupmembershipFields
	// groupmembershipDescCreatedAt is the schema descriptor for created_at field.
	groupmembershipDescCreatedAt := groupmembershipMixinFields0[0].Descriptor()
	// groupmembership.DefaultCreatedAt holds the default value on creation for the created_at field.
	groupmembership.DefaultCreatedAt = groupmembershipDescCreatedAt.Default.(func() time.Time)
	// groupmembershipDescUpdatedAt is the schema descriptor for updated_at field.
	groupmembershipDescUpdatedAt := groupmembershipMixinFields0[1].Descriptor()
	// groupmembership.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	groupmembership.DefaultUpdatedAt = groupmembershipDescUpdatedAt.Default.(func() time.Time)
	// groupmembership.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	groupmembership.UpdateDefaultUpdatedAt = groupmembershipDescUpdatedAt.UpdateDefault.(func() time.Time)
	// groupmembershipDescID is the schema descriptor for id field.
	groupmembershipDescID := groupmembershipMixinFields1[0].Descriptor()
	// groupmembership.DefaultID holds the default value on creation for the id field.
	groupmembership.DefaultID = groupmembershipDescID.Default.(func() string)
	groupmembershiphistoryFields := schema.GroupMembershipHistory{}.Fields()
	_ = groupmembershiphistoryFields
	// groupmembershiphistoryDescHistoryTime is the schema descriptor for history_time field.
	groupmembershiphistoryDescHistoryTime := groupmembershiphistoryFields[0].Descriptor()
	// groupmembershiphistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	groupmembershiphistory.DefaultHistoryTime = groupmembershiphistoryDescHistoryTime.Default.(func() time.Time)
	// groupmembershiphistoryDescCreatedAt is the schema descriptor for created_at field.
	groupmembershiphistoryDescCreatedAt := groupmembershiphistoryFields[3].Descriptor()
	// groupmembershiphistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	groupmembershiphistory.DefaultCreatedAt = groupmembershiphistoryDescCreatedAt.Default.(func() time.Time)
	// groupmembershiphistoryDescUpdatedAt is the schema descriptor for updated_at field.
	groupmembershiphistoryDescUpdatedAt := groupmembershiphistoryFields[4].Descriptor()
	// groupmembershiphistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	groupmembershiphistory.DefaultUpdatedAt = groupmembershiphistoryDescUpdatedAt.Default.(func() time.Time)
	// groupmembershiphistoryDescID is the schema descriptor for id field.
	groupmembershiphistoryDescID := groupmembershiphistoryFields[7].Descriptor()
	// groupmembershiphistory.DefaultID holds the default value on creation for the id field.
	groupmembershiphistory.DefaultID = groupmembershiphistoryDescID.Default.(func() string)
	groupsettingMixin := schema.GroupSetting{}.Mixin()
	groupsetting.Policy = privacy.NewPolicies(schema.GroupSetting{})
	groupsetting.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := groupsetting.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	groupsettingMixinHooks0 := groupsettingMixin[0].Hooks()
	groupsettingMixinHooks2 := groupsettingMixin[2].Hooks()

	groupsetting.Hooks[1] = groupsettingMixinHooks0[0]

	groupsetting.Hooks[2] = groupsettingMixinHooks2[0]
	groupsettingMixinInters2 := groupsettingMixin[2].Interceptors()
	groupsetting.Interceptors[0] = groupsettingMixinInters2[0]
	groupsettingMixinFields0 := groupsettingMixin[0].Fields()
	_ = groupsettingMixinFields0
	groupsettingMixinFields1 := groupsettingMixin[1].Fields()
	_ = groupsettingMixinFields1
	groupsettingFields := schema.GroupSetting{}.Fields()
	_ = groupsettingFields
	// groupsettingDescCreatedAt is the schema descriptor for created_at field.
	groupsettingDescCreatedAt := groupsettingMixinFields0[0].Descriptor()
	// groupsetting.DefaultCreatedAt holds the default value on creation for the created_at field.
	groupsetting.DefaultCreatedAt = groupsettingDescCreatedAt.Default.(func() time.Time)
	// groupsettingDescUpdatedAt is the schema descriptor for updated_at field.
	groupsettingDescUpdatedAt := groupsettingMixinFields0[1].Descriptor()
	// groupsetting.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	groupsetting.DefaultUpdatedAt = groupsettingDescUpdatedAt.Default.(func() time.Time)
	// groupsetting.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	groupsetting.UpdateDefaultUpdatedAt = groupsettingDescUpdatedAt.UpdateDefault.(func() time.Time)
	// groupsettingDescTags is the schema descriptor for tags field.
	groupsettingDescTags := groupsettingFields[2].Descriptor()
	// groupsetting.DefaultTags holds the default value on creation for the tags field.
	groupsetting.DefaultTags = groupsettingDescTags.Default.([]string)
	// groupsettingDescSyncToSlack is the schema descriptor for sync_to_slack field.
	groupsettingDescSyncToSlack := groupsettingFields[3].Descriptor()
	// groupsetting.DefaultSyncToSlack holds the default value on creation for the sync_to_slack field.
	groupsetting.DefaultSyncToSlack = groupsettingDescSyncToSlack.Default.(bool)
	// groupsettingDescSyncToGithub is the schema descriptor for sync_to_github field.
	groupsettingDescSyncToGithub := groupsettingFields[4].Descriptor()
	// groupsetting.DefaultSyncToGithub holds the default value on creation for the sync_to_github field.
	groupsetting.DefaultSyncToGithub = groupsettingDescSyncToGithub.Default.(bool)
	// groupsettingDescID is the schema descriptor for id field.
	groupsettingDescID := groupsettingMixinFields1[0].Descriptor()
	// groupsetting.DefaultID holds the default value on creation for the id field.
	groupsetting.DefaultID = groupsettingDescID.Default.(func() string)
	groupsettinghistoryFields := schema.GroupSettingHistory{}.Fields()
	_ = groupsettinghistoryFields
	// groupsettinghistoryDescHistoryTime is the schema descriptor for history_time field.
	groupsettinghistoryDescHistoryTime := groupsettinghistoryFields[0].Descriptor()
	// groupsettinghistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	groupsettinghistory.DefaultHistoryTime = groupsettinghistoryDescHistoryTime.Default.(func() time.Time)
	// groupsettinghistoryDescCreatedAt is the schema descriptor for created_at field.
	groupsettinghistoryDescCreatedAt := groupsettinghistoryFields[3].Descriptor()
	// groupsettinghistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	groupsettinghistory.DefaultCreatedAt = groupsettinghistoryDescCreatedAt.Default.(func() time.Time)
	// groupsettinghistoryDescUpdatedAt is the schema descriptor for updated_at field.
	groupsettinghistoryDescUpdatedAt := groupsettinghistoryFields[4].Descriptor()
	// groupsettinghistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	groupsettinghistory.DefaultUpdatedAt = groupsettinghistoryDescUpdatedAt.Default.(func() time.Time)
	// groupsettinghistoryDescTags is the schema descriptor for tags field.
	groupsettinghistoryDescTags := groupsettinghistoryFields[12].Descriptor()
	// groupsettinghistory.DefaultTags holds the default value on creation for the tags field.
	groupsettinghistory.DefaultTags = groupsettinghistoryDescTags.Default.([]string)
	// groupsettinghistoryDescSyncToSlack is the schema descriptor for sync_to_slack field.
	groupsettinghistoryDescSyncToSlack := groupsettinghistoryFields[13].Descriptor()
	// groupsettinghistory.DefaultSyncToSlack holds the default value on creation for the sync_to_slack field.
	groupsettinghistory.DefaultSyncToSlack = groupsettinghistoryDescSyncToSlack.Default.(bool)
	// groupsettinghistoryDescSyncToGithub is the schema descriptor for sync_to_github field.
	groupsettinghistoryDescSyncToGithub := groupsettinghistoryFields[14].Descriptor()
	// groupsettinghistory.DefaultSyncToGithub holds the default value on creation for the sync_to_github field.
	groupsettinghistory.DefaultSyncToGithub = groupsettinghistoryDescSyncToGithub.Default.(bool)
	// groupsettinghistoryDescID is the schema descriptor for id field.
	groupsettinghistoryDescID := groupsettinghistoryFields[7].Descriptor()
	// groupsettinghistory.DefaultID holds the default value on creation for the id field.
	groupsettinghistory.DefaultID = groupsettinghistoryDescID.Default.(func() string)
	hushMixin := schema.Hush{}.Mixin()
	hushMixinHooks0 := hushMixin[0].Hooks()
	hushMixinHooks2 := hushMixin[2].Hooks()
	hushHooks := schema.Hush{}.Hooks()
	hush.Hooks[0] = hushMixinHooks0[0]
	hush.Hooks[1] = hushMixinHooks2[0]
	hush.Hooks[2] = hushHooks[0]
	hushMixinInters2 := hushMixin[2].Interceptors()
	hushInters := schema.Hush{}.Interceptors()
	hush.Interceptors[0] = hushMixinInters2[0]
	hush.Interceptors[1] = hushInters[0]
	hushMixinFields0 := hushMixin[0].Fields()
	_ = hushMixinFields0
	hushMixinFields1 := hushMixin[1].Fields()
	_ = hushMixinFields1
	hushFields := schema.Hush{}.Fields()
	_ = hushFields
	// hushDescCreatedAt is the schema descriptor for created_at field.
	hushDescCreatedAt := hushMixinFields0[0].Descriptor()
	// hush.DefaultCreatedAt holds the default value on creation for the created_at field.
	hush.DefaultCreatedAt = hushDescCreatedAt.Default.(func() time.Time)
	// hushDescUpdatedAt is the schema descriptor for updated_at field.
	hushDescUpdatedAt := hushMixinFields0[1].Descriptor()
	// hush.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	hush.DefaultUpdatedAt = hushDescUpdatedAt.Default.(func() time.Time)
	// hush.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	hush.UpdateDefaultUpdatedAt = hushDescUpdatedAt.UpdateDefault.(func() time.Time)
	// hushDescName is the schema descriptor for name field.
	hushDescName := hushFields[0].Descriptor()
	// hush.NameValidator is a validator for the "name" field. It is called by the builders before save.
	hush.NameValidator = hushDescName.Validators[0].(func(string) error)
	// hushDescID is the schema descriptor for id field.
	hushDescID := hushMixinFields1[0].Descriptor()
	// hush.DefaultID holds the default value on creation for the id field.
	hush.DefaultID = hushDescID.Default.(func() string)
	hushhistoryFields := schema.HushHistory{}.Fields()
	_ = hushhistoryFields
	// hushhistoryDescHistoryTime is the schema descriptor for history_time field.
	hushhistoryDescHistoryTime := hushhistoryFields[0].Descriptor()
	// hushhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	hushhistory.DefaultHistoryTime = hushhistoryDescHistoryTime.Default.(func() time.Time)
	// hushhistoryDescCreatedAt is the schema descriptor for created_at field.
	hushhistoryDescCreatedAt := hushhistoryFields[3].Descriptor()
	// hushhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	hushhistory.DefaultCreatedAt = hushhistoryDescCreatedAt.Default.(func() time.Time)
	// hushhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	hushhistoryDescUpdatedAt := hushhistoryFields[4].Descriptor()
	// hushhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	hushhistory.DefaultUpdatedAt = hushhistoryDescUpdatedAt.Default.(func() time.Time)
	// hushhistoryDescID is the schema descriptor for id field.
	hushhistoryDescID := hushhistoryFields[7].Descriptor()
	// hushhistory.DefaultID holds the default value on creation for the id field.
	hushhistory.DefaultID = hushhistoryDescID.Default.(func() string)
	integrationMixin := schema.Integration{}.Mixin()
	integration.Policy = privacy.NewPolicies(schema.Integration{})
	integration.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := integration.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	integrationMixinHooks0 := integrationMixin[0].Hooks()
	integrationMixinHooks2 := integrationMixin[2].Hooks()

	integration.Hooks[1] = integrationMixinHooks0[0]

	integration.Hooks[2] = integrationMixinHooks2[0]
	integrationMixinInters2 := integrationMixin[2].Interceptors()
	integrationMixinInters3 := integrationMixin[3].Interceptors()
	integration.Interceptors[0] = integrationMixinInters2[0]
	integration.Interceptors[1] = integrationMixinInters3[0]
	integrationMixinFields0 := integrationMixin[0].Fields()
	_ = integrationMixinFields0
	integrationMixinFields1 := integrationMixin[1].Fields()
	_ = integrationMixinFields1
	integrationFields := schema.Integration{}.Fields()
	_ = integrationFields
	// integrationDescCreatedAt is the schema descriptor for created_at field.
	integrationDescCreatedAt := integrationMixinFields0[0].Descriptor()
	// integration.DefaultCreatedAt holds the default value on creation for the created_at field.
	integration.DefaultCreatedAt = integrationDescCreatedAt.Default.(func() time.Time)
	// integrationDescUpdatedAt is the schema descriptor for updated_at field.
	integrationDescUpdatedAt := integrationMixinFields0[1].Descriptor()
	// integration.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	integration.DefaultUpdatedAt = integrationDescUpdatedAt.Default.(func() time.Time)
	// integration.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	integration.UpdateDefaultUpdatedAt = integrationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// integrationDescName is the schema descriptor for name field.
	integrationDescName := integrationFields[0].Descriptor()
	// integration.NameValidator is a validator for the "name" field. It is called by the builders before save.
	integration.NameValidator = integrationDescName.Validators[0].(func(string) error)
	// integrationDescID is the schema descriptor for id field.
	integrationDescID := integrationMixinFields1[0].Descriptor()
	// integration.DefaultID holds the default value on creation for the id field.
	integration.DefaultID = integrationDescID.Default.(func() string)
	integrationhistoryFields := schema.IntegrationHistory{}.Fields()
	_ = integrationhistoryFields
	// integrationhistoryDescHistoryTime is the schema descriptor for history_time field.
	integrationhistoryDescHistoryTime := integrationhistoryFields[0].Descriptor()
	// integrationhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	integrationhistory.DefaultHistoryTime = integrationhistoryDescHistoryTime.Default.(func() time.Time)
	// integrationhistoryDescCreatedAt is the schema descriptor for created_at field.
	integrationhistoryDescCreatedAt := integrationhistoryFields[3].Descriptor()
	// integrationhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	integrationhistory.DefaultCreatedAt = integrationhistoryDescCreatedAt.Default.(func() time.Time)
	// integrationhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	integrationhistoryDescUpdatedAt := integrationhistoryFields[4].Descriptor()
	// integrationhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	integrationhistory.DefaultUpdatedAt = integrationhistoryDescUpdatedAt.Default.(func() time.Time)
	// integrationhistoryDescID is the schema descriptor for id field.
	integrationhistoryDescID := integrationhistoryFields[7].Descriptor()
	// integrationhistory.DefaultID holds the default value on creation for the id field.
	integrationhistory.DefaultID = integrationhistoryDescID.Default.(func() string)
	inviteMixin := schema.Invite{}.Mixin()
	invite.Policy = privacy.NewPolicies(schema.Invite{})
	invite.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := invite.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	inviteMixinHooks0 := inviteMixin[0].Hooks()
	inviteMixinHooks2 := inviteMixin[2].Hooks()
	inviteHooks := schema.Invite{}.Hooks()

	invite.Hooks[1] = inviteMixinHooks0[0]

	invite.Hooks[2] = inviteMixinHooks2[0]

	invite.Hooks[3] = inviteHooks[0]

	invite.Hooks[4] = inviteHooks[1]
	inviteMixinInters2 := inviteMixin[2].Interceptors()
	inviteMixinInters3 := inviteMixin[3].Interceptors()
	invite.Interceptors[0] = inviteMixinInters2[0]
	invite.Interceptors[1] = inviteMixinInters3[0]
	inviteMixinFields0 := inviteMixin[0].Fields()
	_ = inviteMixinFields0
	inviteMixinFields1 := inviteMixin[1].Fields()
	_ = inviteMixinFields1
	inviteFields := schema.Invite{}.Fields()
	_ = inviteFields
	// inviteDescCreatedAt is the schema descriptor for created_at field.
	inviteDescCreatedAt := inviteMixinFields0[0].Descriptor()
	// invite.DefaultCreatedAt holds the default value on creation for the created_at field.
	invite.DefaultCreatedAt = inviteDescCreatedAt.Default.(func() time.Time)
	// inviteDescUpdatedAt is the schema descriptor for updated_at field.
	inviteDescUpdatedAt := inviteMixinFields0[1].Descriptor()
	// invite.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	invite.DefaultUpdatedAt = inviteDescUpdatedAt.Default.(func() time.Time)
	// invite.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	invite.UpdateDefaultUpdatedAt = inviteDescUpdatedAt.UpdateDefault.(func() time.Time)
	// inviteDescToken is the schema descriptor for token field.
	inviteDescToken := inviteFields[0].Descriptor()
	// invite.TokenValidator is a validator for the "token" field. It is called by the builders before save.
	invite.TokenValidator = inviteDescToken.Validators[0].(func(string) error)
	// inviteDescRecipient is the schema descriptor for recipient field.
	inviteDescRecipient := inviteFields[2].Descriptor()
	// invite.RecipientValidator is a validator for the "recipient" field. It is called by the builders before save.
	invite.RecipientValidator = func() func(string) error {
		validators := inviteDescRecipient.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(recipient string) error {
			for _, fn := range fns {
				if err := fn(recipient); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// inviteDescSendAttempts is the schema descriptor for send_attempts field.
	inviteDescSendAttempts := inviteFields[5].Descriptor()
	// invite.DefaultSendAttempts holds the default value on creation for the send_attempts field.
	invite.DefaultSendAttempts = inviteDescSendAttempts.Default.(int)
	// inviteDescRequestorID is the schema descriptor for requestor_id field.
	inviteDescRequestorID := inviteFields[6].Descriptor()
	// invite.RequestorIDValidator is a validator for the "requestor_id" field. It is called by the builders before save.
	invite.RequestorIDValidator = inviteDescRequestorID.Validators[0].(func(string) error)
	// inviteDescSecret is the schema descriptor for secret field.
	inviteDescSecret := inviteFields[7].Descriptor()
	// invite.SecretValidator is a validator for the "secret" field. It is called by the builders before save.
	invite.SecretValidator = inviteDescSecret.Validators[0].(func([]byte) error)
	// inviteDescID is the schema descriptor for id field.
	inviteDescID := inviteMixinFields1[0].Descriptor()
	// invite.DefaultID holds the default value on creation for the id field.
	invite.DefaultID = inviteDescID.Default.(func() string)
	oauthproviderMixin := schema.OauthProvider{}.Mixin()
	oauthproviderMixinHooks0 := oauthproviderMixin[0].Hooks()
	oauthproviderMixinHooks2 := oauthproviderMixin[2].Hooks()
	oauthprovider.Hooks[0] = oauthproviderMixinHooks0[0]
	oauthprovider.Hooks[1] = oauthproviderMixinHooks2[0]
	oauthproviderMixinInters2 := oauthproviderMixin[2].Interceptors()
	oauthprovider.Interceptors[0] = oauthproviderMixinInters2[0]
	oauthproviderMixinFields0 := oauthproviderMixin[0].Fields()
	_ = oauthproviderMixinFields0
	oauthproviderMixinFields1 := oauthproviderMixin[1].Fields()
	_ = oauthproviderMixinFields1
	oauthproviderFields := schema.OauthProvider{}.Fields()
	_ = oauthproviderFields
	// oauthproviderDescCreatedAt is the schema descriptor for created_at field.
	oauthproviderDescCreatedAt := oauthproviderMixinFields0[0].Descriptor()
	// oauthprovider.DefaultCreatedAt holds the default value on creation for the created_at field.
	oauthprovider.DefaultCreatedAt = oauthproviderDescCreatedAt.Default.(func() time.Time)
	// oauthproviderDescUpdatedAt is the schema descriptor for updated_at field.
	oauthproviderDescUpdatedAt := oauthproviderMixinFields0[1].Descriptor()
	// oauthprovider.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	oauthprovider.DefaultUpdatedAt = oauthproviderDescUpdatedAt.Default.(func() time.Time)
	// oauthprovider.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	oauthprovider.UpdateDefaultUpdatedAt = oauthproviderDescUpdatedAt.UpdateDefault.(func() time.Time)
	// oauthproviderDescID is the schema descriptor for id field.
	oauthproviderDescID := oauthproviderMixinFields1[0].Descriptor()
	// oauthprovider.DefaultID holds the default value on creation for the id field.
	oauthprovider.DefaultID = oauthproviderDescID.Default.(func() string)
	oauthproviderhistoryFields := schema.OauthProviderHistory{}.Fields()
	_ = oauthproviderhistoryFields
	// oauthproviderhistoryDescHistoryTime is the schema descriptor for history_time field.
	oauthproviderhistoryDescHistoryTime := oauthproviderhistoryFields[0].Descriptor()
	// oauthproviderhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	oauthproviderhistory.DefaultHistoryTime = oauthproviderhistoryDescHistoryTime.Default.(func() time.Time)
	// oauthproviderhistoryDescCreatedAt is the schema descriptor for created_at field.
	oauthproviderhistoryDescCreatedAt := oauthproviderhistoryFields[3].Descriptor()
	// oauthproviderhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	oauthproviderhistory.DefaultCreatedAt = oauthproviderhistoryDescCreatedAt.Default.(func() time.Time)
	// oauthproviderhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	oauthproviderhistoryDescUpdatedAt := oauthproviderhistoryFields[4].Descriptor()
	// oauthproviderhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	oauthproviderhistory.DefaultUpdatedAt = oauthproviderhistoryDescUpdatedAt.Default.(func() time.Time)
	// oauthproviderhistoryDescID is the schema descriptor for id field.
	oauthproviderhistoryDescID := oauthproviderhistoryFields[7].Descriptor()
	// oauthproviderhistory.DefaultID holds the default value on creation for the id field.
	oauthproviderhistory.DefaultID = oauthproviderhistoryDescID.Default.(func() string)
	ohauthtootokenMixin := schema.OhAuthTooToken{}.Mixin()
	ohauthtootokenMixinFields0 := ohauthtootokenMixin[0].Fields()
	_ = ohauthtootokenMixinFields0
	ohauthtootokenFields := schema.OhAuthTooToken{}.Fields()
	_ = ohauthtootokenFields
	// ohauthtootokenDescClientID is the schema descriptor for client_id field.
	ohauthtootokenDescClientID := ohauthtootokenFields[0].Descriptor()
	// ohauthtootoken.ClientIDValidator is a validator for the "client_id" field. It is called by the builders before save.
	ohauthtootoken.ClientIDValidator = ohauthtootokenDescClientID.Validators[0].(func(string) error)
	// ohauthtootokenDescNonce is the schema descriptor for nonce field.
	ohauthtootokenDescNonce := ohauthtootokenFields[2].Descriptor()
	// ohauthtootoken.NonceValidator is a validator for the "nonce" field. It is called by the builders before save.
	ohauthtootoken.NonceValidator = ohauthtootokenDescNonce.Validators[0].(func(string) error)
	// ohauthtootokenDescClaimsUserID is the schema descriptor for claims_user_id field.
	ohauthtootokenDescClaimsUserID := ohauthtootokenFields[3].Descriptor()
	// ohauthtootoken.ClaimsUserIDValidator is a validator for the "claims_user_id" field. It is called by the builders before save.
	ohauthtootoken.ClaimsUserIDValidator = ohauthtootokenDescClaimsUserID.Validators[0].(func(string) error)
	// ohauthtootokenDescClaimsUsername is the schema descriptor for claims_username field.
	ohauthtootokenDescClaimsUsername := ohauthtootokenFields[4].Descriptor()
	// ohauthtootoken.ClaimsUsernameValidator is a validator for the "claims_username" field. It is called by the builders before save.
	ohauthtootoken.ClaimsUsernameValidator = ohauthtootokenDescClaimsUsername.Validators[0].(func(string) error)
	// ohauthtootokenDescClaimsEmail is the schema descriptor for claims_email field.
	ohauthtootokenDescClaimsEmail := ohauthtootokenFields[5].Descriptor()
	// ohauthtootoken.ClaimsEmailValidator is a validator for the "claims_email" field. It is called by the builders before save.
	ohauthtootoken.ClaimsEmailValidator = ohauthtootokenDescClaimsEmail.Validators[0].(func(string) error)
	// ohauthtootokenDescConnectorID is the schema descriptor for connector_id field.
	ohauthtootokenDescConnectorID := ohauthtootokenFields[9].Descriptor()
	// ohauthtootoken.ConnectorIDValidator is a validator for the "connector_id" field. It is called by the builders before save.
	ohauthtootoken.ConnectorIDValidator = ohauthtootokenDescConnectorID.Validators[0].(func(string) error)
	// ohauthtootokenDescLastUsed is the schema descriptor for last_used field.
	ohauthtootokenDescLastUsed := ohauthtootokenFields[11].Descriptor()
	// ohauthtootoken.DefaultLastUsed holds the default value on creation for the last_used field.
	ohauthtootoken.DefaultLastUsed = ohauthtootokenDescLastUsed.Default.(func() time.Time)
	// ohauthtootokenDescID is the schema descriptor for id field.
	ohauthtootokenDescID := ohauthtootokenMixinFields0[0].Descriptor()
	// ohauthtootoken.DefaultID holds the default value on creation for the id field.
	ohauthtootoken.DefaultID = ohauthtootokenDescID.Default.(func() string)
	orgmembershipMixin := schema.OrgMembership{}.Mixin()
	orgmembership.Policy = privacy.NewPolicies(schema.OrgMembership{})
	orgmembership.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := orgmembership.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	orgmembershipMixinHooks0 := orgmembershipMixin[0].Hooks()
	orgmembershipMixinHooks2 := orgmembershipMixin[2].Hooks()
	orgmembershipHooks := schema.OrgMembership{}.Hooks()

	orgmembership.Hooks[1] = orgmembershipMixinHooks0[0]

	orgmembership.Hooks[2] = orgmembershipMixinHooks2[0]

	orgmembership.Hooks[3] = orgmembershipHooks[0]
	orgmembershipMixinInters2 := orgmembershipMixin[2].Interceptors()
	orgmembership.Interceptors[0] = orgmembershipMixinInters2[0]
	orgmembershipMixinFields0 := orgmembershipMixin[0].Fields()
	_ = orgmembershipMixinFields0
	orgmembershipMixinFields1 := orgmembershipMixin[1].Fields()
	_ = orgmembershipMixinFields1
	orgmembershipFields := schema.OrgMembership{}.Fields()
	_ = orgmembershipFields
	// orgmembershipDescCreatedAt is the schema descriptor for created_at field.
	orgmembershipDescCreatedAt := orgmembershipMixinFields0[0].Descriptor()
	// orgmembership.DefaultCreatedAt holds the default value on creation for the created_at field.
	orgmembership.DefaultCreatedAt = orgmembershipDescCreatedAt.Default.(func() time.Time)
	// orgmembershipDescUpdatedAt is the schema descriptor for updated_at field.
	orgmembershipDescUpdatedAt := orgmembershipMixinFields0[1].Descriptor()
	// orgmembership.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	orgmembership.DefaultUpdatedAt = orgmembershipDescUpdatedAt.Default.(func() time.Time)
	// orgmembership.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	orgmembership.UpdateDefaultUpdatedAt = orgmembershipDescUpdatedAt.UpdateDefault.(func() time.Time)
	// orgmembershipDescID is the schema descriptor for id field.
	orgmembershipDescID := orgmembershipMixinFields1[0].Descriptor()
	// orgmembership.DefaultID holds the default value on creation for the id field.
	orgmembership.DefaultID = orgmembershipDescID.Default.(func() string)
	orgmembershiphistoryFields := schema.OrgMembershipHistory{}.Fields()
	_ = orgmembershiphistoryFields
	// orgmembershiphistoryDescHistoryTime is the schema descriptor for history_time field.
	orgmembershiphistoryDescHistoryTime := orgmembershiphistoryFields[0].Descriptor()
	// orgmembershiphistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	orgmembershiphistory.DefaultHistoryTime = orgmembershiphistoryDescHistoryTime.Default.(func() time.Time)
	// orgmembershiphistoryDescCreatedAt is the schema descriptor for created_at field.
	orgmembershiphistoryDescCreatedAt := orgmembershiphistoryFields[3].Descriptor()
	// orgmembershiphistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	orgmembershiphistory.DefaultCreatedAt = orgmembershiphistoryDescCreatedAt.Default.(func() time.Time)
	// orgmembershiphistoryDescUpdatedAt is the schema descriptor for updated_at field.
	orgmembershiphistoryDescUpdatedAt := orgmembershiphistoryFields[4].Descriptor()
	// orgmembershiphistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	orgmembershiphistory.DefaultUpdatedAt = orgmembershiphistoryDescUpdatedAt.Default.(func() time.Time)
	// orgmembershiphistoryDescID is the schema descriptor for id field.
	orgmembershiphistoryDescID := orgmembershiphistoryFields[7].Descriptor()
	// orgmembershiphistory.DefaultID holds the default value on creation for the id field.
	orgmembershiphistory.DefaultID = orgmembershiphistoryDescID.Default.(func() string)
	organizationMixin := schema.Organization{}.Mixin()
	organization.Policy = privacy.NewPolicies(schema.Organization{})
	organization.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := organization.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	organizationMixinHooks0 := organizationMixin[0].Hooks()
	organizationMixinHooks2 := organizationMixin[2].Hooks()
	organizationHooks := schema.Organization{}.Hooks()

	organization.Hooks[1] = organizationMixinHooks0[0]

	organization.Hooks[2] = organizationMixinHooks2[0]

	organization.Hooks[3] = organizationHooks[0]
	organizationMixinInters2 := organizationMixin[2].Interceptors()
	organizationInters := schema.Organization{}.Interceptors()
	organization.Interceptors[0] = organizationMixinInters2[0]
	organization.Interceptors[1] = organizationInters[0]
	organizationMixinFields0 := organizationMixin[0].Fields()
	_ = organizationMixinFields0
	organizationMixinFields1 := organizationMixin[1].Fields()
	_ = organizationMixinFields1
	organizationFields := schema.Organization{}.Fields()
	_ = organizationFields
	// organizationDescCreatedAt is the schema descriptor for created_at field.
	organizationDescCreatedAt := organizationMixinFields0[0].Descriptor()
	// organization.DefaultCreatedAt holds the default value on creation for the created_at field.
	organization.DefaultCreatedAt = organizationDescCreatedAt.Default.(func() time.Time)
	// organizationDescUpdatedAt is the schema descriptor for updated_at field.
	organizationDescUpdatedAt := organizationMixinFields0[1].Descriptor()
	// organization.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	organization.DefaultUpdatedAt = organizationDescUpdatedAt.Default.(func() time.Time)
	// organization.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	organization.UpdateDefaultUpdatedAt = organizationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// organizationDescName is the schema descriptor for name field.
	organizationDescName := organizationFields[0].Descriptor()
	// organization.NameValidator is a validator for the "name" field. It is called by the builders before save.
	organization.NameValidator = func() func(string) error {
		validators := organizationDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// organizationDescDisplayName is the schema descriptor for display_name field.
	organizationDescDisplayName := organizationFields[1].Descriptor()
	// organization.DefaultDisplayName holds the default value on creation for the display_name field.
	organization.DefaultDisplayName = organizationDescDisplayName.Default.(string)
	// organization.DisplayNameValidator is a validator for the "display_name" field. It is called by the builders before save.
	organization.DisplayNameValidator = organizationDescDisplayName.Validators[0].(func(string) error)
	// organizationDescPersonalOrg is the schema descriptor for personal_org field.
	organizationDescPersonalOrg := organizationFields[4].Descriptor()
	// organization.DefaultPersonalOrg holds the default value on creation for the personal_org field.
	organization.DefaultPersonalOrg = organizationDescPersonalOrg.Default.(bool)
	// organizationDescAvatarRemoteURL is the schema descriptor for avatar_remote_url field.
	organizationDescAvatarRemoteURL := organizationFields[5].Descriptor()
	// organization.AvatarRemoteURLValidator is a validator for the "avatar_remote_url" field. It is called by the builders before save.
	organization.AvatarRemoteURLValidator = func() func(string) error {
		validators := organizationDescAvatarRemoteURL.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(avatar_remote_url string) error {
			for _, fn := range fns {
				if err := fn(avatar_remote_url); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// organizationDescDedicatedDb is the schema descriptor for dedicated_db field.
	organizationDescDedicatedDb := organizationFields[6].Descriptor()
	// organization.DefaultDedicatedDb holds the default value on creation for the dedicated_db field.
	organization.DefaultDedicatedDb = organizationDescDedicatedDb.Default.(bool)
	// organizationDescID is the schema descriptor for id field.
	organizationDescID := organizationMixinFields1[0].Descriptor()
	// organization.DefaultID holds the default value on creation for the id field.
	organization.DefaultID = organizationDescID.Default.(func() string)
	organizationhistoryFields := schema.OrganizationHistory{}.Fields()
	_ = organizationhistoryFields
	// organizationhistoryDescHistoryTime is the schema descriptor for history_time field.
	organizationhistoryDescHistoryTime := organizationhistoryFields[0].Descriptor()
	// organizationhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	organizationhistory.DefaultHistoryTime = organizationhistoryDescHistoryTime.Default.(func() time.Time)
	// organizationhistoryDescCreatedAt is the schema descriptor for created_at field.
	organizationhistoryDescCreatedAt := organizationhistoryFields[3].Descriptor()
	// organizationhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	organizationhistory.DefaultCreatedAt = organizationhistoryDescCreatedAt.Default.(func() time.Time)
	// organizationhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	organizationhistoryDescUpdatedAt := organizationhistoryFields[4].Descriptor()
	// organizationhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	organizationhistory.DefaultUpdatedAt = organizationhistoryDescUpdatedAt.Default.(func() time.Time)
	// organizationhistoryDescDisplayName is the schema descriptor for display_name field.
	organizationhistoryDescDisplayName := organizationhistoryFields[11].Descriptor()
	// organizationhistory.DefaultDisplayName holds the default value on creation for the display_name field.
	organizationhistory.DefaultDisplayName = organizationhistoryDescDisplayName.Default.(string)
	// organizationhistoryDescPersonalOrg is the schema descriptor for personal_org field.
	organizationhistoryDescPersonalOrg := organizationhistoryFields[14].Descriptor()
	// organizationhistory.DefaultPersonalOrg holds the default value on creation for the personal_org field.
	organizationhistory.DefaultPersonalOrg = organizationhistoryDescPersonalOrg.Default.(bool)
	// organizationhistoryDescDedicatedDb is the schema descriptor for dedicated_db field.
	organizationhistoryDescDedicatedDb := organizationhistoryFields[16].Descriptor()
	// organizationhistory.DefaultDedicatedDb holds the default value on creation for the dedicated_db field.
	organizationhistory.DefaultDedicatedDb = organizationhistoryDescDedicatedDb.Default.(bool)
	// organizationhistoryDescID is the schema descriptor for id field.
	organizationhistoryDescID := organizationhistoryFields[7].Descriptor()
	// organizationhistory.DefaultID holds the default value on creation for the id field.
	organizationhistory.DefaultID = organizationhistoryDescID.Default.(func() string)
	organizationsettingMixin := schema.OrganizationSetting{}.Mixin()
	organizationsetting.Policy = privacy.NewPolicies(schema.OrganizationSetting{})
	organizationsetting.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := organizationsetting.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	organizationsettingMixinHooks0 := organizationsettingMixin[0].Hooks()
	organizationsettingMixinHooks2 := organizationsettingMixin[2].Hooks()

	organizationsetting.Hooks[1] = organizationsettingMixinHooks0[0]

	organizationsetting.Hooks[2] = organizationsettingMixinHooks2[0]
	organizationsettingMixinInters2 := organizationsettingMixin[2].Interceptors()
	organizationsetting.Interceptors[0] = organizationsettingMixinInters2[0]
	organizationsettingMixinFields0 := organizationsettingMixin[0].Fields()
	_ = organizationsettingMixinFields0
	organizationsettingMixinFields1 := organizationsettingMixin[1].Fields()
	_ = organizationsettingMixinFields1
	organizationsettingFields := schema.OrganizationSetting{}.Fields()
	_ = organizationsettingFields
	// organizationsettingDescCreatedAt is the schema descriptor for created_at field.
	organizationsettingDescCreatedAt := organizationsettingMixinFields0[0].Descriptor()
	// organizationsetting.DefaultCreatedAt holds the default value on creation for the created_at field.
	organizationsetting.DefaultCreatedAt = organizationsettingDescCreatedAt.Default.(func() time.Time)
	// organizationsettingDescUpdatedAt is the schema descriptor for updated_at field.
	organizationsettingDescUpdatedAt := organizationsettingMixinFields0[1].Descriptor()
	// organizationsetting.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	organizationsetting.DefaultUpdatedAt = organizationsettingDescUpdatedAt.Default.(func() time.Time)
	// organizationsetting.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	organizationsetting.UpdateDefaultUpdatedAt = organizationsettingDescUpdatedAt.UpdateDefault.(func() time.Time)
	// organizationsettingDescDomains is the schema descriptor for domains field.
	organizationsettingDescDomains := organizationsettingFields[0].Descriptor()
	// organizationsetting.DomainsValidator is a validator for the "domains" field. It is called by the builders before save.
	organizationsetting.DomainsValidator = organizationsettingDescDomains.Validators[0].(func([]string) error)
	// organizationsettingDescBillingEmail is the schema descriptor for billing_email field.
	organizationsettingDescBillingEmail := organizationsettingFields[2].Descriptor()
	// organizationsetting.BillingEmailValidator is a validator for the "billing_email" field. It is called by the builders before save.
	organizationsetting.BillingEmailValidator = organizationsettingDescBillingEmail.Validators[0].(func(string) error)
	// organizationsettingDescBillingPhone is the schema descriptor for billing_phone field.
	organizationsettingDescBillingPhone := organizationsettingFields[3].Descriptor()
	// organizationsetting.BillingPhoneValidator is a validator for the "billing_phone" field. It is called by the builders before save.
	organizationsetting.BillingPhoneValidator = organizationsettingDescBillingPhone.Validators[0].(func(string) error)
	// organizationsettingDescTags is the schema descriptor for tags field.
	organizationsettingDescTags := organizationsettingFields[6].Descriptor()
	// organizationsetting.DefaultTags holds the default value on creation for the tags field.
	organizationsetting.DefaultTags = organizationsettingDescTags.Default.([]string)
	// organizationsettingDescID is the schema descriptor for id field.
	organizationsettingDescID := organizationsettingMixinFields1[0].Descriptor()
	// organizationsetting.DefaultID holds the default value on creation for the id field.
	organizationsetting.DefaultID = organizationsettingDescID.Default.(func() string)
	organizationsettinghistoryFields := schema.OrganizationSettingHistory{}.Fields()
	_ = organizationsettinghistoryFields
	// organizationsettinghistoryDescHistoryTime is the schema descriptor for history_time field.
	organizationsettinghistoryDescHistoryTime := organizationsettinghistoryFields[0].Descriptor()
	// organizationsettinghistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	organizationsettinghistory.DefaultHistoryTime = organizationsettinghistoryDescHistoryTime.Default.(func() time.Time)
	// organizationsettinghistoryDescCreatedAt is the schema descriptor for created_at field.
	organizationsettinghistoryDescCreatedAt := organizationsettinghistoryFields[3].Descriptor()
	// organizationsettinghistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	organizationsettinghistory.DefaultCreatedAt = organizationsettinghistoryDescCreatedAt.Default.(func() time.Time)
	// organizationsettinghistoryDescUpdatedAt is the schema descriptor for updated_at field.
	organizationsettinghistoryDescUpdatedAt := organizationsettinghistoryFields[4].Descriptor()
	// organizationsettinghistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	organizationsettinghistory.DefaultUpdatedAt = organizationsettinghistoryDescUpdatedAt.Default.(func() time.Time)
	// organizationsettinghistoryDescTags is the schema descriptor for tags field.
	organizationsettinghistoryDescTags := organizationsettinghistoryFields[16].Descriptor()
	// organizationsettinghistory.DefaultTags holds the default value on creation for the tags field.
	organizationsettinghistory.DefaultTags = organizationsettinghistoryDescTags.Default.([]string)
	// organizationsettinghistoryDescID is the schema descriptor for id field.
	organizationsettinghistoryDescID := organizationsettinghistoryFields[7].Descriptor()
	// organizationsettinghistory.DefaultID holds the default value on creation for the id field.
	organizationsettinghistory.DefaultID = organizationsettinghistoryDescID.Default.(func() string)
	passwordresettokenMixin := schema.PasswordResetToken{}.Mixin()
	passwordresettoken.Policy = privacy.NewPolicies(schema.PasswordResetToken{})
	passwordresettoken.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := passwordresettoken.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	passwordresettokenMixinHooks0 := passwordresettokenMixin[0].Hooks()
	passwordresettokenMixinHooks2 := passwordresettokenMixin[2].Hooks()
	passwordresettokenHooks := schema.PasswordResetToken{}.Hooks()

	passwordresettoken.Hooks[1] = passwordresettokenMixinHooks0[0]

	passwordresettoken.Hooks[2] = passwordresettokenMixinHooks2[0]

	passwordresettoken.Hooks[3] = passwordresettokenHooks[0]
	passwordresettokenMixinInters2 := passwordresettokenMixin[2].Interceptors()
	passwordresettokenMixinInters3 := passwordresettokenMixin[3].Interceptors()
	passwordresettoken.Interceptors[0] = passwordresettokenMixinInters2[0]
	passwordresettoken.Interceptors[1] = passwordresettokenMixinInters3[0]
	passwordresettokenMixinFields0 := passwordresettokenMixin[0].Fields()
	_ = passwordresettokenMixinFields0
	passwordresettokenMixinFields1 := passwordresettokenMixin[1].Fields()
	_ = passwordresettokenMixinFields1
	passwordresettokenFields := schema.PasswordResetToken{}.Fields()
	_ = passwordresettokenFields
	// passwordresettokenDescCreatedAt is the schema descriptor for created_at field.
	passwordresettokenDescCreatedAt := passwordresettokenMixinFields0[0].Descriptor()
	// passwordresettoken.DefaultCreatedAt holds the default value on creation for the created_at field.
	passwordresettoken.DefaultCreatedAt = passwordresettokenDescCreatedAt.Default.(func() time.Time)
	// passwordresettokenDescUpdatedAt is the schema descriptor for updated_at field.
	passwordresettokenDescUpdatedAt := passwordresettokenMixinFields0[1].Descriptor()
	// passwordresettoken.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	passwordresettoken.DefaultUpdatedAt = passwordresettokenDescUpdatedAt.Default.(func() time.Time)
	// passwordresettoken.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	passwordresettoken.UpdateDefaultUpdatedAt = passwordresettokenDescUpdatedAt.UpdateDefault.(func() time.Time)
	// passwordresettokenDescToken is the schema descriptor for token field.
	passwordresettokenDescToken := passwordresettokenFields[0].Descriptor()
	// passwordresettoken.TokenValidator is a validator for the "token" field. It is called by the builders before save.
	passwordresettoken.TokenValidator = passwordresettokenDescToken.Validators[0].(func(string) error)
	// passwordresettokenDescEmail is the schema descriptor for email field.
	passwordresettokenDescEmail := passwordresettokenFields[2].Descriptor()
	// passwordresettoken.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	passwordresettoken.EmailValidator = func() func(string) error {
		validators := passwordresettokenDescEmail.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(email string) error {
			for _, fn := range fns {
				if err := fn(email); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// passwordresettokenDescSecret is the schema descriptor for secret field.
	passwordresettokenDescSecret := passwordresettokenFields[3].Descriptor()
	// passwordresettoken.SecretValidator is a validator for the "secret" field. It is called by the builders before save.
	passwordresettoken.SecretValidator = passwordresettokenDescSecret.Validators[0].(func([]byte) error)
	// passwordresettokenDescID is the schema descriptor for id field.
	passwordresettokenDescID := passwordresettokenMixinFields1[0].Descriptor()
	// passwordresettoken.DefaultID holds the default value on creation for the id field.
	passwordresettoken.DefaultID = passwordresettokenDescID.Default.(func() string)
	personalaccesstokenMixin := schema.PersonalAccessToken{}.Mixin()
	personalaccesstoken.Policy = privacy.NewPolicies(schema.PersonalAccessToken{})
	personalaccesstoken.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := personalaccesstoken.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	personalaccesstokenMixinHooks0 := personalaccesstokenMixin[0].Hooks()
	personalaccesstokenMixinHooks1 := personalaccesstokenMixin[1].Hooks()
	personalaccesstokenHooks := schema.PersonalAccessToken{}.Hooks()

	personalaccesstoken.Hooks[1] = personalaccesstokenMixinHooks0[0]

	personalaccesstoken.Hooks[2] = personalaccesstokenMixinHooks1[0]

	personalaccesstoken.Hooks[3] = personalaccesstokenHooks[0]

	personalaccesstoken.Hooks[4] = personalaccesstokenHooks[1]
	personalaccesstokenMixinInters1 := personalaccesstokenMixin[1].Interceptors()
	personalaccesstokenMixinInters3 := personalaccesstokenMixin[3].Interceptors()
	personalaccesstokenInters := schema.PersonalAccessToken{}.Interceptors()
	personalaccesstoken.Interceptors[0] = personalaccesstokenMixinInters1[0]
	personalaccesstoken.Interceptors[1] = personalaccesstokenMixinInters3[0]
	personalaccesstoken.Interceptors[2] = personalaccesstokenInters[0]
	personalaccesstokenMixinFields0 := personalaccesstokenMixin[0].Fields()
	_ = personalaccesstokenMixinFields0
	personalaccesstokenMixinFields2 := personalaccesstokenMixin[2].Fields()
	_ = personalaccesstokenMixinFields2
	personalaccesstokenFields := schema.PersonalAccessToken{}.Fields()
	_ = personalaccesstokenFields
	// personalaccesstokenDescCreatedAt is the schema descriptor for created_at field.
	personalaccesstokenDescCreatedAt := personalaccesstokenMixinFields0[0].Descriptor()
	// personalaccesstoken.DefaultCreatedAt holds the default value on creation for the created_at field.
	personalaccesstoken.DefaultCreatedAt = personalaccesstokenDescCreatedAt.Default.(func() time.Time)
	// personalaccesstokenDescUpdatedAt is the schema descriptor for updated_at field.
	personalaccesstokenDescUpdatedAt := personalaccesstokenMixinFields0[1].Descriptor()
	// personalaccesstoken.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	personalaccesstoken.DefaultUpdatedAt = personalaccesstokenDescUpdatedAt.Default.(func() time.Time)
	// personalaccesstoken.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	personalaccesstoken.UpdateDefaultUpdatedAt = personalaccesstokenDescUpdatedAt.UpdateDefault.(func() time.Time)
	// personalaccesstokenDescName is the schema descriptor for name field.
	personalaccesstokenDescName := personalaccesstokenFields[0].Descriptor()
	// personalaccesstoken.NameValidator is a validator for the "name" field. It is called by the builders before save.
	personalaccesstoken.NameValidator = personalaccesstokenDescName.Validators[0].(func(string) error)
	// personalaccesstokenDescToken is the schema descriptor for token field.
	personalaccesstokenDescToken := personalaccesstokenFields[1].Descriptor()
	// personalaccesstoken.DefaultToken holds the default value on creation for the token field.
	personalaccesstoken.DefaultToken = personalaccesstokenDescToken.Default.(func() string)
	// personalaccesstokenDescID is the schema descriptor for id field.
	personalaccesstokenDescID := personalaccesstokenMixinFields2[0].Descriptor()
	// personalaccesstoken.DefaultID holds the default value on creation for the id field.
	personalaccesstoken.DefaultID = personalaccesstokenDescID.Default.(func() string)
	subscriberMixin := schema.Subscriber{}.Mixin()
	subscriber.Policy = privacy.NewPolicies(schema.Subscriber{})
	subscriber.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := subscriber.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	subscriberMixinHooks0 := subscriberMixin[0].Hooks()
	subscriberMixinHooks2 := subscriberMixin[2].Hooks()
	subscriberHooks := schema.Subscriber{}.Hooks()

	subscriber.Hooks[1] = subscriberMixinHooks0[0]

	subscriber.Hooks[2] = subscriberMixinHooks2[0]

	subscriber.Hooks[3] = subscriberHooks[0]
	subscriberMixinInters2 := subscriberMixin[2].Interceptors()
	subscriberInters := schema.Subscriber{}.Interceptors()
	subscriber.Interceptors[0] = subscriberMixinInters2[0]
	subscriber.Interceptors[1] = subscriberInters[0]
	subscriberMixinFields0 := subscriberMixin[0].Fields()
	_ = subscriberMixinFields0
	subscriberMixinFields1 := subscriberMixin[1].Fields()
	_ = subscriberMixinFields1
	subscriberFields := schema.Subscriber{}.Fields()
	_ = subscriberFields
	// subscriberDescCreatedAt is the schema descriptor for created_at field.
	subscriberDescCreatedAt := subscriberMixinFields0[0].Descriptor()
	// subscriber.DefaultCreatedAt holds the default value on creation for the created_at field.
	subscriber.DefaultCreatedAt = subscriberDescCreatedAt.Default.(func() time.Time)
	// subscriberDescUpdatedAt is the schema descriptor for updated_at field.
	subscriberDescUpdatedAt := subscriberMixinFields0[1].Descriptor()
	// subscriber.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	subscriber.DefaultUpdatedAt = subscriberDescUpdatedAt.Default.(func() time.Time)
	// subscriber.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	subscriber.UpdateDefaultUpdatedAt = subscriberDescUpdatedAt.UpdateDefault.(func() time.Time)
	// subscriberDescEmail is the schema descriptor for email field.
	subscriberDescEmail := subscriberFields[0].Descriptor()
	// subscriber.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	subscriber.EmailValidator = subscriberDescEmail.Validators[0].(func(string) error)
	// subscriberDescPhoneNumber is the schema descriptor for phone_number field.
	subscriberDescPhoneNumber := subscriberFields[1].Descriptor()
	// subscriber.PhoneNumberValidator is a validator for the "phone_number" field. It is called by the builders before save.
	subscriber.PhoneNumberValidator = subscriberDescPhoneNumber.Validators[0].(func(string) error)
	// subscriberDescVerifiedEmail is the schema descriptor for verified_email field.
	subscriberDescVerifiedEmail := subscriberFields[2].Descriptor()
	// subscriber.DefaultVerifiedEmail holds the default value on creation for the verified_email field.
	subscriber.DefaultVerifiedEmail = subscriberDescVerifiedEmail.Default.(bool)
	// subscriberDescVerifiedPhone is the schema descriptor for verified_phone field.
	subscriberDescVerifiedPhone := subscriberFields[3].Descriptor()
	// subscriber.DefaultVerifiedPhone holds the default value on creation for the verified_phone field.
	subscriber.DefaultVerifiedPhone = subscriberDescVerifiedPhone.Default.(bool)
	// subscriberDescActive is the schema descriptor for active field.
	subscriberDescActive := subscriberFields[4].Descriptor()
	// subscriber.DefaultActive holds the default value on creation for the active field.
	subscriber.DefaultActive = subscriberDescActive.Default.(bool)
	// subscriberDescToken is the schema descriptor for token field.
	subscriberDescToken := subscriberFields[5].Descriptor()
	// subscriber.TokenValidator is a validator for the "token" field. It is called by the builders before save.
	subscriber.TokenValidator = subscriberDescToken.Validators[0].(func(string) error)
	// subscriberDescSecret is the schema descriptor for secret field.
	subscriberDescSecret := subscriberFields[7].Descriptor()
	// subscriber.SecretValidator is a validator for the "secret" field. It is called by the builders before save.
	subscriber.SecretValidator = subscriberDescSecret.Validators[0].(func([]byte) error)
	// subscriberDescID is the schema descriptor for id field.
	subscriberDescID := subscriberMixinFields1[0].Descriptor()
	// subscriber.DefaultID holds the default value on creation for the id field.
	subscriber.DefaultID = subscriberDescID.Default.(func() string)
	tfasettingMixin := schema.TFASetting{}.Mixin()
	tfasettingMixinHooks0 := tfasettingMixin[0].Hooks()
	tfasettingMixinHooks2 := tfasettingMixin[2].Hooks()
	tfasettingHooks := schema.TFASetting{}.Hooks()
	tfasetting.Hooks[0] = tfasettingMixinHooks0[0]
	tfasetting.Hooks[1] = tfasettingMixinHooks2[0]
	tfasetting.Hooks[2] = tfasettingHooks[0]
	tfasettingMixinInters2 := tfasettingMixin[2].Interceptors()
	tfasetting.Interceptors[0] = tfasettingMixinInters2[0]
	tfasettingMixinFields0 := tfasettingMixin[0].Fields()
	_ = tfasettingMixinFields0
	tfasettingMixinFields1 := tfasettingMixin[1].Fields()
	_ = tfasettingMixinFields1
	tfasettingFields := schema.TFASetting{}.Fields()
	_ = tfasettingFields
	// tfasettingDescCreatedAt is the schema descriptor for created_at field.
	tfasettingDescCreatedAt := tfasettingMixinFields0[0].Descriptor()
	// tfasetting.DefaultCreatedAt holds the default value on creation for the created_at field.
	tfasetting.DefaultCreatedAt = tfasettingDescCreatedAt.Default.(func() time.Time)
	// tfasettingDescUpdatedAt is the schema descriptor for updated_at field.
	tfasettingDescUpdatedAt := tfasettingMixinFields0[1].Descriptor()
	// tfasetting.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	tfasetting.DefaultUpdatedAt = tfasettingDescUpdatedAt.Default.(func() time.Time)
	// tfasetting.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	tfasetting.UpdateDefaultUpdatedAt = tfasettingDescUpdatedAt.UpdateDefault.(func() time.Time)
	// tfasettingDescVerified is the schema descriptor for verified field.
	tfasettingDescVerified := tfasettingFields[1].Descriptor()
	// tfasetting.DefaultVerified holds the default value on creation for the verified field.
	tfasetting.DefaultVerified = tfasettingDescVerified.Default.(bool)
	// tfasettingDescPhoneOtpAllowed is the schema descriptor for phone_otp_allowed field.
	tfasettingDescPhoneOtpAllowed := tfasettingFields[3].Descriptor()
	// tfasetting.DefaultPhoneOtpAllowed holds the default value on creation for the phone_otp_allowed field.
	tfasetting.DefaultPhoneOtpAllowed = tfasettingDescPhoneOtpAllowed.Default.(bool)
	// tfasettingDescEmailOtpAllowed is the schema descriptor for email_otp_allowed field.
	tfasettingDescEmailOtpAllowed := tfasettingFields[4].Descriptor()
	// tfasetting.DefaultEmailOtpAllowed holds the default value on creation for the email_otp_allowed field.
	tfasetting.DefaultEmailOtpAllowed = tfasettingDescEmailOtpAllowed.Default.(bool)
	// tfasettingDescTotpAllowed is the schema descriptor for totp_allowed field.
	tfasettingDescTotpAllowed := tfasettingFields[5].Descriptor()
	// tfasetting.DefaultTotpAllowed holds the default value on creation for the totp_allowed field.
	tfasetting.DefaultTotpAllowed = tfasettingDescTotpAllowed.Default.(bool)
	// tfasettingDescID is the schema descriptor for id field.
	tfasettingDescID := tfasettingMixinFields1[0].Descriptor()
	// tfasetting.DefaultID holds the default value on creation for the id field.
	tfasetting.DefaultID = tfasettingDescID.Default.(func() string)
	templateMixin := schema.Template{}.Mixin()
	templateMixinHooks0 := templateMixin[0].Hooks()
	templateMixinHooks1 := templateMixin[1].Hooks()
	template.Hooks[0] = templateMixinHooks0[0]
	template.Hooks[1] = templateMixinHooks1[0]
	templateMixinInters1 := templateMixin[1].Interceptors()
	templateMixinInters3 := templateMixin[3].Interceptors()
	template.Interceptors[0] = templateMixinInters1[0]
	template.Interceptors[1] = templateMixinInters3[0]
	templateMixinFields0 := templateMixin[0].Fields()
	_ = templateMixinFields0
	templateMixinFields2 := templateMixin[2].Fields()
	_ = templateMixinFields2
	templateFields := schema.Template{}.Fields()
	_ = templateFields
	// templateDescCreatedAt is the schema descriptor for created_at field.
	templateDescCreatedAt := templateMixinFields0[0].Descriptor()
	// template.DefaultCreatedAt holds the default value on creation for the created_at field.
	template.DefaultCreatedAt = templateDescCreatedAt.Default.(func() time.Time)
	// templateDescUpdatedAt is the schema descriptor for updated_at field.
	templateDescUpdatedAt := templateMixinFields0[1].Descriptor()
	// template.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	template.DefaultUpdatedAt = templateDescUpdatedAt.Default.(func() time.Time)
	// template.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	template.UpdateDefaultUpdatedAt = templateDescUpdatedAt.UpdateDefault.(func() time.Time)
	// templateDescName is the schema descriptor for name field.
	templateDescName := templateFields[0].Descriptor()
	// template.NameValidator is a validator for the "name" field. It is called by the builders before save.
	template.NameValidator = templateDescName.Validators[0].(func(string) error)
	// templateDescID is the schema descriptor for id field.
	templateDescID := templateMixinFields2[0].Descriptor()
	// template.DefaultID holds the default value on creation for the id field.
	template.DefaultID = templateDescID.Default.(func() string)
	templatehistoryFields := schema.TemplateHistory{}.Fields()
	_ = templatehistoryFields
	// templatehistoryDescHistoryTime is the schema descriptor for history_time field.
	templatehistoryDescHistoryTime := templatehistoryFields[0].Descriptor()
	// templatehistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	templatehistory.DefaultHistoryTime = templatehistoryDescHistoryTime.Default.(func() time.Time)
	// templatehistoryDescCreatedAt is the schema descriptor for created_at field.
	templatehistoryDescCreatedAt := templatehistoryFields[3].Descriptor()
	// templatehistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	templatehistory.DefaultCreatedAt = templatehistoryDescCreatedAt.Default.(func() time.Time)
	// templatehistoryDescUpdatedAt is the schema descriptor for updated_at field.
	templatehistoryDescUpdatedAt := templatehistoryFields[4].Descriptor()
	// templatehistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	templatehistory.DefaultUpdatedAt = templatehistoryDescUpdatedAt.Default.(func() time.Time)
	// templatehistoryDescID is the schema descriptor for id field.
	templatehistoryDescID := templatehistoryFields[9].Descriptor()
	// templatehistory.DefaultID holds the default value on creation for the id field.
	templatehistory.DefaultID = templatehistoryDescID.Default.(func() string)
	userMixin := schema.User{}.Mixin()
	user.Policy = privacy.NewPolicies(schema.User{})
	user.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := user.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	userMixinHooks0 := userMixin[0].Hooks()
	userMixinHooks1 := userMixin[1].Hooks()
	userHooks := schema.User{}.Hooks()

	user.Hooks[1] = userMixinHooks0[0]

	user.Hooks[2] = userMixinHooks1[0]

	user.Hooks[3] = userHooks[0]

	user.Hooks[4] = userHooks[1]
	userMixinInters1 := userMixin[1].Interceptors()
	userInters := schema.User{}.Interceptors()
	user.Interceptors[0] = userMixinInters1[0]
	user.Interceptors[1] = userInters[0]
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userMixinFields2 := userMixin[2].Fields()
	_ = userMixinFields2
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userMixinFields0[0].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userMixinFields0[1].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[0].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescFirstName is the schema descriptor for first_name field.
	userDescFirstName := userFields[1].Descriptor()
	// user.FirstNameValidator is a validator for the "first_name" field. It is called by the builders before save.
	user.FirstNameValidator = func() func(string) error {
		validators := userDescFirstName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(first_name string) error {
			for _, fn := range fns {
				if err := fn(first_name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// userDescLastName is the schema descriptor for last_name field.
	userDescLastName := userFields[2].Descriptor()
	// user.LastNameValidator is a validator for the "last_name" field. It is called by the builders before save.
	user.LastNameValidator = func() func(string) error {
		validators := userDescLastName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(last_name string) error {
			for _, fn := range fns {
				if err := fn(last_name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// userDescDisplayName is the schema descriptor for display_name field.
	userDescDisplayName := userFields[3].Descriptor()
	// user.DisplayNameValidator is a validator for the "display_name" field. It is called by the builders before save.
	user.DisplayNameValidator = func() func(string) error {
		validators := userDescDisplayName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
			validators[2].(func(string) error),
		}
		return func(display_name string) error {
			for _, fn := range fns {
				if err := fn(display_name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// userDescAvatarRemoteURL is the schema descriptor for avatar_remote_url field.
	userDescAvatarRemoteURL := userFields[4].Descriptor()
	// user.AvatarRemoteURLValidator is a validator for the "avatar_remote_url" field. It is called by the builders before save.
	user.AvatarRemoteURLValidator = func() func(string) error {
		validators := userDescAvatarRemoteURL.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(avatar_remote_url string) error {
			for _, fn := range fns {
				if err := fn(avatar_remote_url); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// userDescAvatarLocalFile is the schema descriptor for avatar_local_file field.
	userDescAvatarLocalFile := userFields[5].Descriptor()
	// user.AvatarLocalFileValidator is a validator for the "avatar_local_file" field. It is called by the builders before save.
	user.AvatarLocalFileValidator = userDescAvatarLocalFile.Validators[0].(func(string) error)
	// userDescAvatarUpdatedAt is the schema descriptor for avatar_updated_at field.
	userDescAvatarUpdatedAt := userFields[6].Descriptor()
	// user.UpdateDefaultAvatarUpdatedAt holds the default value on update for the avatar_updated_at field.
	user.UpdateDefaultAvatarUpdatedAt = userDescAvatarUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescLastSeen is the schema descriptor for last_seen field.
	userDescLastSeen := userFields[7].Descriptor()
	// user.UpdateDefaultLastSeen holds the default value on update for the last_seen field.
	user.UpdateDefaultLastSeen = userDescLastSeen.UpdateDefault.(func() time.Time)
	// userDescID is the schema descriptor for id field.
	userDescID := userMixinFields2[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() string)
	userhistoryFields := schema.UserHistory{}.Fields()
	_ = userhistoryFields
	// userhistoryDescHistoryTime is the schema descriptor for history_time field.
	userhistoryDescHistoryTime := userhistoryFields[0].Descriptor()
	// userhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	userhistory.DefaultHistoryTime = userhistoryDescHistoryTime.Default.(func() time.Time)
	// userhistoryDescCreatedAt is the schema descriptor for created_at field.
	userhistoryDescCreatedAt := userhistoryFields[3].Descriptor()
	// userhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	userhistory.DefaultCreatedAt = userhistoryDescCreatedAt.Default.(func() time.Time)
	// userhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	userhistoryDescUpdatedAt := userhistoryFields[4].Descriptor()
	// userhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	userhistory.DefaultUpdatedAt = userhistoryDescUpdatedAt.Default.(func() time.Time)
	// userhistoryDescID is the schema descriptor for id field.
	userhistoryDescID := userhistoryFields[9].Descriptor()
	// userhistory.DefaultID holds the default value on creation for the id field.
	userhistory.DefaultID = userhistoryDescID.Default.(func() string)
	usersettingMixin := schema.UserSetting{}.Mixin()
	usersetting.Policy = privacy.NewPolicies(schema.UserSetting{})
	usersetting.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := usersetting.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	usersettingMixinHooks0 := usersettingMixin[0].Hooks()
	usersettingMixinHooks2 := usersettingMixin[2].Hooks()
	usersettingHooks := schema.UserSetting{}.Hooks()

	usersetting.Hooks[1] = usersettingMixinHooks0[0]

	usersetting.Hooks[2] = usersettingMixinHooks2[0]

	usersetting.Hooks[3] = usersettingHooks[0]
	usersettingMixinInters2 := usersettingMixin[2].Interceptors()
	usersettingInters := schema.UserSetting{}.Interceptors()
	usersetting.Interceptors[0] = usersettingMixinInters2[0]
	usersetting.Interceptors[1] = usersettingInters[0]
	usersettingMixinFields0 := usersettingMixin[0].Fields()
	_ = usersettingMixinFields0
	usersettingMixinFields1 := usersettingMixin[1].Fields()
	_ = usersettingMixinFields1
	usersettingFields := schema.UserSetting{}.Fields()
	_ = usersettingFields
	// usersettingDescCreatedAt is the schema descriptor for created_at field.
	usersettingDescCreatedAt := usersettingMixinFields0[0].Descriptor()
	// usersetting.DefaultCreatedAt holds the default value on creation for the created_at field.
	usersetting.DefaultCreatedAt = usersettingDescCreatedAt.Default.(func() time.Time)
	// usersettingDescUpdatedAt is the schema descriptor for updated_at field.
	usersettingDescUpdatedAt := usersettingMixinFields0[1].Descriptor()
	// usersetting.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	usersetting.DefaultUpdatedAt = usersettingDescUpdatedAt.Default.(func() time.Time)
	// usersetting.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	usersetting.UpdateDefaultUpdatedAt = usersettingDescUpdatedAt.UpdateDefault.(func() time.Time)
	// usersettingDescLocked is the schema descriptor for locked field.
	usersettingDescLocked := usersettingFields[1].Descriptor()
	// usersetting.DefaultLocked holds the default value on creation for the locked field.
	usersetting.DefaultLocked = usersettingDescLocked.Default.(bool)
	// usersettingDescEmailConfirmed is the schema descriptor for email_confirmed field.
	usersettingDescEmailConfirmed := usersettingFields[5].Descriptor()
	// usersetting.DefaultEmailConfirmed holds the default value on creation for the email_confirmed field.
	usersetting.DefaultEmailConfirmed = usersettingDescEmailConfirmed.Default.(bool)
	// usersettingDescIsWebauthnAllowed is the schema descriptor for is_webauthn_allowed field.
	usersettingDescIsWebauthnAllowed := usersettingFields[7].Descriptor()
	// usersetting.DefaultIsWebauthnAllowed holds the default value on creation for the is_webauthn_allowed field.
	usersetting.DefaultIsWebauthnAllowed = usersettingDescIsWebauthnAllowed.Default.(bool)
	// usersettingDescIsTfaEnabled is the schema descriptor for is_tfa_enabled field.
	usersettingDescIsTfaEnabled := usersettingFields[8].Descriptor()
	// usersetting.DefaultIsTfaEnabled holds the default value on creation for the is_tfa_enabled field.
	usersetting.DefaultIsTfaEnabled = usersettingDescIsTfaEnabled.Default.(bool)
	// usersettingDescID is the schema descriptor for id field.
	usersettingDescID := usersettingMixinFields1[0].Descriptor()
	// usersetting.DefaultID holds the default value on creation for the id field.
	usersetting.DefaultID = usersettingDescID.Default.(func() string)
	usersettinghistoryFields := schema.UserSettingHistory{}.Fields()
	_ = usersettinghistoryFields
	// usersettinghistoryDescHistoryTime is the schema descriptor for history_time field.
	usersettinghistoryDescHistoryTime := usersettinghistoryFields[0].Descriptor()
	// usersettinghistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	usersettinghistory.DefaultHistoryTime = usersettinghistoryDescHistoryTime.Default.(func() time.Time)
	// usersettinghistoryDescCreatedAt is the schema descriptor for created_at field.
	usersettinghistoryDescCreatedAt := usersettinghistoryFields[3].Descriptor()
	// usersettinghistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	usersettinghistory.DefaultCreatedAt = usersettinghistoryDescCreatedAt.Default.(func() time.Time)
	// usersettinghistoryDescUpdatedAt is the schema descriptor for updated_at field.
	usersettinghistoryDescUpdatedAt := usersettinghistoryFields[4].Descriptor()
	// usersettinghistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	usersettinghistory.DefaultUpdatedAt = usersettinghistoryDescUpdatedAt.Default.(func() time.Time)
	// usersettinghistoryDescLocked is the schema descriptor for locked field.
	usersettinghistoryDescLocked := usersettinghistoryFields[11].Descriptor()
	// usersettinghistory.DefaultLocked holds the default value on creation for the locked field.
	usersettinghistory.DefaultLocked = usersettinghistoryDescLocked.Default.(bool)
	// usersettinghistoryDescEmailConfirmed is the schema descriptor for email_confirmed field.
	usersettinghistoryDescEmailConfirmed := usersettinghistoryFields[15].Descriptor()
	// usersettinghistory.DefaultEmailConfirmed holds the default value on creation for the email_confirmed field.
	usersettinghistory.DefaultEmailConfirmed = usersettinghistoryDescEmailConfirmed.Default.(bool)
	// usersettinghistoryDescIsWebauthnAllowed is the schema descriptor for is_webauthn_allowed field.
	usersettinghistoryDescIsWebauthnAllowed := usersettinghistoryFields[17].Descriptor()
	// usersettinghistory.DefaultIsWebauthnAllowed holds the default value on creation for the is_webauthn_allowed field.
	usersettinghistory.DefaultIsWebauthnAllowed = usersettinghistoryDescIsWebauthnAllowed.Default.(bool)
	// usersettinghistoryDescIsTfaEnabled is the schema descriptor for is_tfa_enabled field.
	usersettinghistoryDescIsTfaEnabled := usersettinghistoryFields[18].Descriptor()
	// usersettinghistory.DefaultIsTfaEnabled holds the default value on creation for the is_tfa_enabled field.
	usersettinghistory.DefaultIsTfaEnabled = usersettinghistoryDescIsTfaEnabled.Default.(bool)
	// usersettinghistoryDescID is the schema descriptor for id field.
	usersettinghistoryDescID := usersettinghistoryFields[7].Descriptor()
	// usersettinghistory.DefaultID holds the default value on creation for the id field.
	usersettinghistory.DefaultID = usersettinghistoryDescID.Default.(func() string)
	webauthnMixin := schema.Webauthn{}.Mixin()
	webauthnMixinHooks0 := webauthnMixin[0].Hooks()
	webauthn.Hooks[0] = webauthnMixinHooks0[0]
	webauthnMixinInters2 := webauthnMixin[2].Interceptors()
	webauthn.Interceptors[0] = webauthnMixinInters2[0]
	webauthnMixinFields0 := webauthnMixin[0].Fields()
	_ = webauthnMixinFields0
	webauthnMixinFields1 := webauthnMixin[1].Fields()
	_ = webauthnMixinFields1
	webauthnFields := schema.Webauthn{}.Fields()
	_ = webauthnFields
	// webauthnDescCreatedAt is the schema descriptor for created_at field.
	webauthnDescCreatedAt := webauthnMixinFields0[0].Descriptor()
	// webauthn.DefaultCreatedAt holds the default value on creation for the created_at field.
	webauthn.DefaultCreatedAt = webauthnDescCreatedAt.Default.(func() time.Time)
	// webauthnDescUpdatedAt is the schema descriptor for updated_at field.
	webauthnDescUpdatedAt := webauthnMixinFields0[1].Descriptor()
	// webauthn.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	webauthn.DefaultUpdatedAt = webauthnDescUpdatedAt.Default.(func() time.Time)
	// webauthn.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	webauthn.UpdateDefaultUpdatedAt = webauthnDescUpdatedAt.UpdateDefault.(func() time.Time)
	// webauthnDescBackupEligible is the schema descriptor for backup_eligible field.
	webauthnDescBackupEligible := webauthnFields[6].Descriptor()
	// webauthn.DefaultBackupEligible holds the default value on creation for the backup_eligible field.
	webauthn.DefaultBackupEligible = webauthnDescBackupEligible.Default.(bool)
	// webauthnDescBackupState is the schema descriptor for backup_state field.
	webauthnDescBackupState := webauthnFields[7].Descriptor()
	// webauthn.DefaultBackupState holds the default value on creation for the backup_state field.
	webauthn.DefaultBackupState = webauthnDescBackupState.Default.(bool)
	// webauthnDescUserPresent is the schema descriptor for user_present field.
	webauthnDescUserPresent := webauthnFields[8].Descriptor()
	// webauthn.DefaultUserPresent holds the default value on creation for the user_present field.
	webauthn.DefaultUserPresent = webauthnDescUserPresent.Default.(bool)
	// webauthnDescUserVerified is the schema descriptor for user_verified field.
	webauthnDescUserVerified := webauthnFields[9].Descriptor()
	// webauthn.DefaultUserVerified holds the default value on creation for the user_verified field.
	webauthn.DefaultUserVerified = webauthnDescUserVerified.Default.(bool)
	// webauthnDescID is the schema descriptor for id field.
	webauthnDescID := webauthnMixinFields1[0].Descriptor()
	// webauthn.DefaultID holds the default value on creation for the id field.
	webauthn.DefaultID = webauthnDescID.Default.(func() string)
	webhookMixin := schema.Webhook{}.Mixin()
	webhookMixinHooks0 := webhookMixin[0].Hooks()
	webhookMixinHooks2 := webhookMixin[2].Hooks()
	webhook.Hooks[0] = webhookMixinHooks0[0]
	webhook.Hooks[1] = webhookMixinHooks2[0]
	webhookMixinInters2 := webhookMixin[2].Interceptors()
	webhook.Interceptors[0] = webhookMixinInters2[0]
	webhookMixinFields0 := webhookMixin[0].Fields()
	_ = webhookMixinFields0
	webhookMixinFields1 := webhookMixin[1].Fields()
	_ = webhookMixinFields1
	webhookFields := schema.Webhook{}.Fields()
	_ = webhookFields
	// webhookDescCreatedAt is the schema descriptor for created_at field.
	webhookDescCreatedAt := webhookMixinFields0[0].Descriptor()
	// webhook.DefaultCreatedAt holds the default value on creation for the created_at field.
	webhook.DefaultCreatedAt = webhookDescCreatedAt.Default.(func() time.Time)
	// webhookDescUpdatedAt is the schema descriptor for updated_at field.
	webhookDescUpdatedAt := webhookMixinFields0[1].Descriptor()
	// webhook.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	webhook.DefaultUpdatedAt = webhookDescUpdatedAt.Default.(func() time.Time)
	// webhook.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	webhook.UpdateDefaultUpdatedAt = webhookDescUpdatedAt.UpdateDefault.(func() time.Time)
	// webhookDescName is the schema descriptor for name field.
	webhookDescName := webhookFields[0].Descriptor()
	// webhook.NameValidator is a validator for the "name" field. It is called by the builders before save.
	webhook.NameValidator = webhookDescName.Validators[0].(func(string) error)
	// webhookDescDestinationURL is the schema descriptor for destination_url field.
	webhookDescDestinationURL := webhookFields[2].Descriptor()
	// webhook.DestinationURLValidator is a validator for the "destination_url" field. It is called by the builders before save.
	webhook.DestinationURLValidator = webhookDescDestinationURL.Validators[0].(func(string) error)
	// webhookDescEnabled is the schema descriptor for enabled field.
	webhookDescEnabled := webhookFields[3].Descriptor()
	// webhook.DefaultEnabled holds the default value on creation for the enabled field.
	webhook.DefaultEnabled = webhookDescEnabled.Default.(bool)
	// webhookDescFailures is the schema descriptor for failures field.
	webhookDescFailures := webhookFields[7].Descriptor()
	// webhook.DefaultFailures holds the default value on creation for the failures field.
	webhook.DefaultFailures = webhookDescFailures.Default.(int)
	// webhookDescID is the schema descriptor for id field.
	webhookDescID := webhookMixinFields1[0].Descriptor()
	// webhook.DefaultID holds the default value on creation for the id field.
	webhook.DefaultID = webhookDescID.Default.(func() string)
	webhookhistoryFields := schema.WebhookHistory{}.Fields()
	_ = webhookhistoryFields
	// webhookhistoryDescHistoryTime is the schema descriptor for history_time field.
	webhookhistoryDescHistoryTime := webhookhistoryFields[0].Descriptor()
	// webhookhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	webhookhistory.DefaultHistoryTime = webhookhistoryDescHistoryTime.Default.(func() time.Time)
	// webhookhistoryDescCreatedAt is the schema descriptor for created_at field.
	webhookhistoryDescCreatedAt := webhookhistoryFields[3].Descriptor()
	// webhookhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	webhookhistory.DefaultCreatedAt = webhookhistoryDescCreatedAt.Default.(func() time.Time)
	// webhookhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	webhookhistoryDescUpdatedAt := webhookhistoryFields[4].Descriptor()
	// webhookhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	webhookhistory.DefaultUpdatedAt = webhookhistoryDescUpdatedAt.Default.(func() time.Time)
	// webhookhistoryDescEnabled is the schema descriptor for enabled field.
	webhookhistoryDescEnabled := webhookhistoryFields[14].Descriptor()
	// webhookhistory.DefaultEnabled holds the default value on creation for the enabled field.
	webhookhistory.DefaultEnabled = webhookhistoryDescEnabled.Default.(bool)
	// webhookhistoryDescFailures is the schema descriptor for failures field.
	webhookhistoryDescFailures := webhookhistoryFields[18].Descriptor()
	// webhookhistory.DefaultFailures holds the default value on creation for the failures field.
	webhookhistory.DefaultFailures = webhookhistoryDescFailures.Default.(int)
	// webhookhistoryDescID is the schema descriptor for id field.
	webhookhistoryDescID := webhookhistoryFields[7].Descriptor()
	// webhookhistory.DefaultID holds the default value on creation for the id field.
	webhookhistory.DefaultID = webhookhistoryDescID.Default.(func() string)
}

const (
	Version = "v0.13.1"                                         // Version of ent codegen.
	Sum     = "h1:uD8QwN1h6SNphdCCzmkMN3feSUzNnVvV/WIkHKMbzOE=" // Sum of ent codegen.
)
