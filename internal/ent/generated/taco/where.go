// Code generated by ent, DO NOT EDIT.

package taco

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/datumforge/datum/internal/ent/generated/predicate"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.Taco {
	return predicate.Taco(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.Taco {
	return predicate.Taco(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.Taco {
	return predicate.Taco(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.Taco {
	return predicate.Taco(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.Taco {
	return predicate.Taco(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.Taco {
	return predicate.Taco(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.Taco {
	return predicate.Taco(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.Taco {
	return predicate.Taco(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.Taco {
	return predicate.Taco(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.Taco {
	return predicate.Taco(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.Taco {
	return predicate.Taco(sql.FieldContainsFold(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Taco {
	return predicate.Taco(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.Taco {
	return predicate.Taco(sql.FieldEQ(FieldUpdatedAt, v))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v string) predicate.Taco {
	return predicate.Taco(sql.FieldEQ(FieldCreatedBy, v))
}

// UpdatedBy applies equality check predicate on the "updated_by" field. It's identical to UpdatedByEQ.
func UpdatedBy(v string) predicate.Taco {
	return predicate.Taco(sql.FieldEQ(FieldUpdatedBy, v))
}

// StripeCustomerID applies equality check predicate on the "stripe_customer_id" field. It's identical to StripeCustomerIDEQ.
func StripeCustomerID(v string) predicate.Taco {
	return predicate.Taco(sql.FieldEQ(FieldStripeCustomerID, v))
}

// StripeSubscriptionID applies equality check predicate on the "stripe_subscription_id" field. It's identical to StripeSubscriptionIDEQ.
func StripeSubscriptionID(v string) predicate.Taco {
	return predicate.Taco(sql.FieldEQ(FieldStripeSubscriptionID, v))
}

// ExpiresAt applies equality check predicate on the "expires_at" field. It's identical to ExpiresAtEQ.
func ExpiresAt(v time.Time) predicate.Taco {
	return predicate.Taco(sql.FieldEQ(FieldExpiresAt, v))
}

// Cancelled applies equality check predicate on the "cancelled" field. It's identical to CancelledEQ.
func Cancelled(v bool) predicate.Taco {
	return predicate.Taco(sql.FieldEQ(FieldCancelled, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.Taco {
	return predicate.Taco(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.Taco {
	return predicate.Taco(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.Taco {
	return predicate.Taco(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Taco {
	return predicate.Taco(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.Taco {
	return predicate.Taco(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.Taco {
	return predicate.Taco(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.Taco {
	return predicate.Taco(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.Taco {
	return predicate.Taco(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.Taco {
	return predicate.Taco(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.Taco {
	return predicate.Taco(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.Taco {
	return predicate.Taco(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.Taco {
	return predicate.Taco(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.Taco {
	return predicate.Taco(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.Taco {
	return predicate.Taco(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.Taco {
	return predicate.Taco(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.Taco {
	return predicate.Taco(sql.FieldLTE(FieldUpdatedAt, v))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v string) predicate.Taco {
	return predicate.Taco(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v string) predicate.Taco {
	return predicate.Taco(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...string) predicate.Taco {
	return predicate.Taco(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...string) predicate.Taco {
	return predicate.Taco(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "created_by" field.
func CreatedByGT(v string) predicate.Taco {
	return predicate.Taco(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "created_by" field.
func CreatedByGTE(v string) predicate.Taco {
	return predicate.Taco(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "created_by" field.
func CreatedByLT(v string) predicate.Taco {
	return predicate.Taco(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "created_by" field.
func CreatedByLTE(v string) predicate.Taco {
	return predicate.Taco(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByContains applies the Contains predicate on the "created_by" field.
func CreatedByContains(v string) predicate.Taco {
	return predicate.Taco(sql.FieldContains(FieldCreatedBy, v))
}

// CreatedByHasPrefix applies the HasPrefix predicate on the "created_by" field.
func CreatedByHasPrefix(v string) predicate.Taco {
	return predicate.Taco(sql.FieldHasPrefix(FieldCreatedBy, v))
}

// CreatedByHasSuffix applies the HasSuffix predicate on the "created_by" field.
func CreatedByHasSuffix(v string) predicate.Taco {
	return predicate.Taco(sql.FieldHasSuffix(FieldCreatedBy, v))
}

// CreatedByIsNil applies the IsNil predicate on the "created_by" field.
func CreatedByIsNil() predicate.Taco {
	return predicate.Taco(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "created_by" field.
func CreatedByNotNil() predicate.Taco {
	return predicate.Taco(sql.FieldNotNull(FieldCreatedBy))
}

// CreatedByEqualFold applies the EqualFold predicate on the "created_by" field.
func CreatedByEqualFold(v string) predicate.Taco {
	return predicate.Taco(sql.FieldEqualFold(FieldCreatedBy, v))
}

// CreatedByContainsFold applies the ContainsFold predicate on the "created_by" field.
func CreatedByContainsFold(v string) predicate.Taco {
	return predicate.Taco(sql.FieldContainsFold(FieldCreatedBy, v))
}

// UpdatedByEQ applies the EQ predicate on the "updated_by" field.
func UpdatedByEQ(v string) predicate.Taco {
	return predicate.Taco(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "updated_by" field.
func UpdatedByNEQ(v string) predicate.Taco {
	return predicate.Taco(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "updated_by" field.
func UpdatedByIn(vs ...string) predicate.Taco {
	return predicate.Taco(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "updated_by" field.
func UpdatedByNotIn(vs ...string) predicate.Taco {
	return predicate.Taco(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "updated_by" field.
func UpdatedByGT(v string) predicate.Taco {
	return predicate.Taco(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "updated_by" field.
func UpdatedByGTE(v string) predicate.Taco {
	return predicate.Taco(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "updated_by" field.
func UpdatedByLT(v string) predicate.Taco {
	return predicate.Taco(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "updated_by" field.
func UpdatedByLTE(v string) predicate.Taco {
	return predicate.Taco(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByContains applies the Contains predicate on the "updated_by" field.
func UpdatedByContains(v string) predicate.Taco {
	return predicate.Taco(sql.FieldContains(FieldUpdatedBy, v))
}

// UpdatedByHasPrefix applies the HasPrefix predicate on the "updated_by" field.
func UpdatedByHasPrefix(v string) predicate.Taco {
	return predicate.Taco(sql.FieldHasPrefix(FieldUpdatedBy, v))
}

// UpdatedByHasSuffix applies the HasSuffix predicate on the "updated_by" field.
func UpdatedByHasSuffix(v string) predicate.Taco {
	return predicate.Taco(sql.FieldHasSuffix(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "updated_by" field.
func UpdatedByIsNil() predicate.Taco {
	return predicate.Taco(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "updated_by" field.
func UpdatedByNotNil() predicate.Taco {
	return predicate.Taco(sql.FieldNotNull(FieldUpdatedBy))
}

// UpdatedByEqualFold applies the EqualFold predicate on the "updated_by" field.
func UpdatedByEqualFold(v string) predicate.Taco {
	return predicate.Taco(sql.FieldEqualFold(FieldUpdatedBy, v))
}

// UpdatedByContainsFold applies the ContainsFold predicate on the "updated_by" field.
func UpdatedByContainsFold(v string) predicate.Taco {
	return predicate.Taco(sql.FieldContainsFold(FieldUpdatedBy, v))
}

// TierEQ applies the EQ predicate on the "tier" field.
func TierEQ(v Tier) predicate.Taco {
	return predicate.Taco(sql.FieldEQ(FieldTier, v))
}

// TierNEQ applies the NEQ predicate on the "tier" field.
func TierNEQ(v Tier) predicate.Taco {
	return predicate.Taco(sql.FieldNEQ(FieldTier, v))
}

// TierIn applies the In predicate on the "tier" field.
func TierIn(vs ...Tier) predicate.Taco {
	return predicate.Taco(sql.FieldIn(FieldTier, vs...))
}

// TierNotIn applies the NotIn predicate on the "tier" field.
func TierNotIn(vs ...Tier) predicate.Taco {
	return predicate.Taco(sql.FieldNotIn(FieldTier, vs...))
}

// StripeCustomerIDEQ applies the EQ predicate on the "stripe_customer_id" field.
func StripeCustomerIDEQ(v string) predicate.Taco {
	return predicate.Taco(sql.FieldEQ(FieldStripeCustomerID, v))
}

// StripeCustomerIDNEQ applies the NEQ predicate on the "stripe_customer_id" field.
func StripeCustomerIDNEQ(v string) predicate.Taco {
	return predicate.Taco(sql.FieldNEQ(FieldStripeCustomerID, v))
}

// StripeCustomerIDIn applies the In predicate on the "stripe_customer_id" field.
func StripeCustomerIDIn(vs ...string) predicate.Taco {
	return predicate.Taco(sql.FieldIn(FieldStripeCustomerID, vs...))
}

// StripeCustomerIDNotIn applies the NotIn predicate on the "stripe_customer_id" field.
func StripeCustomerIDNotIn(vs ...string) predicate.Taco {
	return predicate.Taco(sql.FieldNotIn(FieldStripeCustomerID, vs...))
}

// StripeCustomerIDGT applies the GT predicate on the "stripe_customer_id" field.
func StripeCustomerIDGT(v string) predicate.Taco {
	return predicate.Taco(sql.FieldGT(FieldStripeCustomerID, v))
}

// StripeCustomerIDGTE applies the GTE predicate on the "stripe_customer_id" field.
func StripeCustomerIDGTE(v string) predicate.Taco {
	return predicate.Taco(sql.FieldGTE(FieldStripeCustomerID, v))
}

// StripeCustomerIDLT applies the LT predicate on the "stripe_customer_id" field.
func StripeCustomerIDLT(v string) predicate.Taco {
	return predicate.Taco(sql.FieldLT(FieldStripeCustomerID, v))
}

// StripeCustomerIDLTE applies the LTE predicate on the "stripe_customer_id" field.
func StripeCustomerIDLTE(v string) predicate.Taco {
	return predicate.Taco(sql.FieldLTE(FieldStripeCustomerID, v))
}

// StripeCustomerIDContains applies the Contains predicate on the "stripe_customer_id" field.
func StripeCustomerIDContains(v string) predicate.Taco {
	return predicate.Taco(sql.FieldContains(FieldStripeCustomerID, v))
}

// StripeCustomerIDHasPrefix applies the HasPrefix predicate on the "stripe_customer_id" field.
func StripeCustomerIDHasPrefix(v string) predicate.Taco {
	return predicate.Taco(sql.FieldHasPrefix(FieldStripeCustomerID, v))
}

// StripeCustomerIDHasSuffix applies the HasSuffix predicate on the "stripe_customer_id" field.
func StripeCustomerIDHasSuffix(v string) predicate.Taco {
	return predicate.Taco(sql.FieldHasSuffix(FieldStripeCustomerID, v))
}

// StripeCustomerIDIsNil applies the IsNil predicate on the "stripe_customer_id" field.
func StripeCustomerIDIsNil() predicate.Taco {
	return predicate.Taco(sql.FieldIsNull(FieldStripeCustomerID))
}

// StripeCustomerIDNotNil applies the NotNil predicate on the "stripe_customer_id" field.
func StripeCustomerIDNotNil() predicate.Taco {
	return predicate.Taco(sql.FieldNotNull(FieldStripeCustomerID))
}

// StripeCustomerIDEqualFold applies the EqualFold predicate on the "stripe_customer_id" field.
func StripeCustomerIDEqualFold(v string) predicate.Taco {
	return predicate.Taco(sql.FieldEqualFold(FieldStripeCustomerID, v))
}

// StripeCustomerIDContainsFold applies the ContainsFold predicate on the "stripe_customer_id" field.
func StripeCustomerIDContainsFold(v string) predicate.Taco {
	return predicate.Taco(sql.FieldContainsFold(FieldStripeCustomerID, v))
}

// StripeSubscriptionIDEQ applies the EQ predicate on the "stripe_subscription_id" field.
func StripeSubscriptionIDEQ(v string) predicate.Taco {
	return predicate.Taco(sql.FieldEQ(FieldStripeSubscriptionID, v))
}

// StripeSubscriptionIDNEQ applies the NEQ predicate on the "stripe_subscription_id" field.
func StripeSubscriptionIDNEQ(v string) predicate.Taco {
	return predicate.Taco(sql.FieldNEQ(FieldStripeSubscriptionID, v))
}

// StripeSubscriptionIDIn applies the In predicate on the "stripe_subscription_id" field.
func StripeSubscriptionIDIn(vs ...string) predicate.Taco {
	return predicate.Taco(sql.FieldIn(FieldStripeSubscriptionID, vs...))
}

// StripeSubscriptionIDNotIn applies the NotIn predicate on the "stripe_subscription_id" field.
func StripeSubscriptionIDNotIn(vs ...string) predicate.Taco {
	return predicate.Taco(sql.FieldNotIn(FieldStripeSubscriptionID, vs...))
}

// StripeSubscriptionIDGT applies the GT predicate on the "stripe_subscription_id" field.
func StripeSubscriptionIDGT(v string) predicate.Taco {
	return predicate.Taco(sql.FieldGT(FieldStripeSubscriptionID, v))
}

// StripeSubscriptionIDGTE applies the GTE predicate on the "stripe_subscription_id" field.
func StripeSubscriptionIDGTE(v string) predicate.Taco {
	return predicate.Taco(sql.FieldGTE(FieldStripeSubscriptionID, v))
}

// StripeSubscriptionIDLT applies the LT predicate on the "stripe_subscription_id" field.
func StripeSubscriptionIDLT(v string) predicate.Taco {
	return predicate.Taco(sql.FieldLT(FieldStripeSubscriptionID, v))
}

// StripeSubscriptionIDLTE applies the LTE predicate on the "stripe_subscription_id" field.
func StripeSubscriptionIDLTE(v string) predicate.Taco {
	return predicate.Taco(sql.FieldLTE(FieldStripeSubscriptionID, v))
}

// StripeSubscriptionIDContains applies the Contains predicate on the "stripe_subscription_id" field.
func StripeSubscriptionIDContains(v string) predicate.Taco {
	return predicate.Taco(sql.FieldContains(FieldStripeSubscriptionID, v))
}

// StripeSubscriptionIDHasPrefix applies the HasPrefix predicate on the "stripe_subscription_id" field.
func StripeSubscriptionIDHasPrefix(v string) predicate.Taco {
	return predicate.Taco(sql.FieldHasPrefix(FieldStripeSubscriptionID, v))
}

// StripeSubscriptionIDHasSuffix applies the HasSuffix predicate on the "stripe_subscription_id" field.
func StripeSubscriptionIDHasSuffix(v string) predicate.Taco {
	return predicate.Taco(sql.FieldHasSuffix(FieldStripeSubscriptionID, v))
}

// StripeSubscriptionIDIsNil applies the IsNil predicate on the "stripe_subscription_id" field.
func StripeSubscriptionIDIsNil() predicate.Taco {
	return predicate.Taco(sql.FieldIsNull(FieldStripeSubscriptionID))
}

// StripeSubscriptionIDNotNil applies the NotNil predicate on the "stripe_subscription_id" field.
func StripeSubscriptionIDNotNil() predicate.Taco {
	return predicate.Taco(sql.FieldNotNull(FieldStripeSubscriptionID))
}

// StripeSubscriptionIDEqualFold applies the EqualFold predicate on the "stripe_subscription_id" field.
func StripeSubscriptionIDEqualFold(v string) predicate.Taco {
	return predicate.Taco(sql.FieldEqualFold(FieldStripeSubscriptionID, v))
}

// StripeSubscriptionIDContainsFold applies the ContainsFold predicate on the "stripe_subscription_id" field.
func StripeSubscriptionIDContainsFold(v string) predicate.Taco {
	return predicate.Taco(sql.FieldContainsFold(FieldStripeSubscriptionID, v))
}

// ExpiresAtEQ applies the EQ predicate on the "expires_at" field.
func ExpiresAtEQ(v time.Time) predicate.Taco {
	return predicate.Taco(sql.FieldEQ(FieldExpiresAt, v))
}

// ExpiresAtNEQ applies the NEQ predicate on the "expires_at" field.
func ExpiresAtNEQ(v time.Time) predicate.Taco {
	return predicate.Taco(sql.FieldNEQ(FieldExpiresAt, v))
}

// ExpiresAtIn applies the In predicate on the "expires_at" field.
func ExpiresAtIn(vs ...time.Time) predicate.Taco {
	return predicate.Taco(sql.FieldIn(FieldExpiresAt, vs...))
}

// ExpiresAtNotIn applies the NotIn predicate on the "expires_at" field.
func ExpiresAtNotIn(vs ...time.Time) predicate.Taco {
	return predicate.Taco(sql.FieldNotIn(FieldExpiresAt, vs...))
}

// ExpiresAtGT applies the GT predicate on the "expires_at" field.
func ExpiresAtGT(v time.Time) predicate.Taco {
	return predicate.Taco(sql.FieldGT(FieldExpiresAt, v))
}

// ExpiresAtGTE applies the GTE predicate on the "expires_at" field.
func ExpiresAtGTE(v time.Time) predicate.Taco {
	return predicate.Taco(sql.FieldGTE(FieldExpiresAt, v))
}

// ExpiresAtLT applies the LT predicate on the "expires_at" field.
func ExpiresAtLT(v time.Time) predicate.Taco {
	return predicate.Taco(sql.FieldLT(FieldExpiresAt, v))
}

// ExpiresAtLTE applies the LTE predicate on the "expires_at" field.
func ExpiresAtLTE(v time.Time) predicate.Taco {
	return predicate.Taco(sql.FieldLTE(FieldExpiresAt, v))
}

// ExpiresAtIsNil applies the IsNil predicate on the "expires_at" field.
func ExpiresAtIsNil() predicate.Taco {
	return predicate.Taco(sql.FieldIsNull(FieldExpiresAt))
}

// ExpiresAtNotNil applies the NotNil predicate on the "expires_at" field.
func ExpiresAtNotNil() predicate.Taco {
	return predicate.Taco(sql.FieldNotNull(FieldExpiresAt))
}

// CancelledEQ applies the EQ predicate on the "cancelled" field.
func CancelledEQ(v bool) predicate.Taco {
	return predicate.Taco(sql.FieldEQ(FieldCancelled, v))
}

// CancelledNEQ applies the NEQ predicate on the "cancelled" field.
func CancelledNEQ(v bool) predicate.Taco {
	return predicate.Taco(sql.FieldNEQ(FieldCancelled, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Taco) predicate.Taco {
	return predicate.Taco(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Taco) predicate.Taco {
	return predicate.Taco(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Taco) predicate.Taco {
	return predicate.Taco(sql.NotPredicates(p))
}
