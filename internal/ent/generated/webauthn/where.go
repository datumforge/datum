// Code generated by ent, DO NOT EDIT.

package webauthn

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/datumforge/datum/internal/ent/generated/predicate"

	"github.com/datumforge/datum/internal/ent/generated/internal"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldContainsFold(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEQ(FieldUpdatedAt, v))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEQ(FieldCreatedBy, v))
}

// UpdatedBy applies equality check predicate on the "updated_by" field. It's identical to UpdatedByEQ.
func UpdatedBy(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEQ(FieldUpdatedBy, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedBy applies equality check predicate on the "deleted_by" field. It's identical to DeletedByEQ.
func DeletedBy(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEQ(FieldDeletedBy, v))
}

// OwnerID applies equality check predicate on the "owner_id" field. It's identical to OwnerIDEQ.
func OwnerID(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEQ(FieldOwnerID, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEQ(FieldName, v))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEQ(FieldUserID, v))
}

// CredentialID applies equality check predicate on the "credential_id" field. It's identical to CredentialIDEQ.
func CredentialID(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEQ(FieldCredentialID, v))
}

// PublicKey applies equality check predicate on the "public_key" field. It's identical to PublicKeyEQ.
func PublicKey(v []byte) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEQ(FieldPublicKey, v))
}

// AttestationType applies equality check predicate on the "attestation_type" field. It's identical to AttestationTypeEQ.
func AttestationType(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEQ(FieldAttestationType, v))
}

// Aaguid applies equality check predicate on the "aaguid" field. It's identical to AaguidEQ.
func Aaguid(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEQ(FieldAaguid, v))
}

// SignCount applies equality check predicate on the "sign_count" field. It's identical to SignCountEQ.
func SignCount(v int) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEQ(FieldSignCount, v))
}

// BackupEligible applies equality check predicate on the "backup_eligible" field. It's identical to BackupEligibleEQ.
func BackupEligible(v bool) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEQ(FieldBackupEligible, v))
}

// BackupState applies equality check predicate on the "backup_state" field. It's identical to BackupStateEQ.
func BackupState(v bool) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEQ(FieldBackupState, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldLTE(FieldUpdatedAt, v))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "created_by" field.
func CreatedByGT(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "created_by" field.
func CreatedByGTE(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "created_by" field.
func CreatedByLT(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "created_by" field.
func CreatedByLTE(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByContains applies the Contains predicate on the "created_by" field.
func CreatedByContains(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldContains(FieldCreatedBy, v))
}

// CreatedByHasPrefix applies the HasPrefix predicate on the "created_by" field.
func CreatedByHasPrefix(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldHasPrefix(FieldCreatedBy, v))
}

// CreatedByHasSuffix applies the HasSuffix predicate on the "created_by" field.
func CreatedByHasSuffix(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldHasSuffix(FieldCreatedBy, v))
}

// CreatedByIsNil applies the IsNil predicate on the "created_by" field.
func CreatedByIsNil() predicate.Webauthn {
	return predicate.Webauthn(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "created_by" field.
func CreatedByNotNil() predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNotNull(FieldCreatedBy))
}

// CreatedByEqualFold applies the EqualFold predicate on the "created_by" field.
func CreatedByEqualFold(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEqualFold(FieldCreatedBy, v))
}

// CreatedByContainsFold applies the ContainsFold predicate on the "created_by" field.
func CreatedByContainsFold(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldContainsFold(FieldCreatedBy, v))
}

// UpdatedByEQ applies the EQ predicate on the "updated_by" field.
func UpdatedByEQ(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "updated_by" field.
func UpdatedByNEQ(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "updated_by" field.
func UpdatedByIn(vs ...string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "updated_by" field.
func UpdatedByNotIn(vs ...string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "updated_by" field.
func UpdatedByGT(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "updated_by" field.
func UpdatedByGTE(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "updated_by" field.
func UpdatedByLT(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "updated_by" field.
func UpdatedByLTE(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByContains applies the Contains predicate on the "updated_by" field.
func UpdatedByContains(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldContains(FieldUpdatedBy, v))
}

// UpdatedByHasPrefix applies the HasPrefix predicate on the "updated_by" field.
func UpdatedByHasPrefix(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldHasPrefix(FieldUpdatedBy, v))
}

// UpdatedByHasSuffix applies the HasSuffix predicate on the "updated_by" field.
func UpdatedByHasSuffix(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldHasSuffix(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "updated_by" field.
func UpdatedByIsNil() predicate.Webauthn {
	return predicate.Webauthn(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "updated_by" field.
func UpdatedByNotNil() predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNotNull(FieldUpdatedBy))
}

// UpdatedByEqualFold applies the EqualFold predicate on the "updated_by" field.
func UpdatedByEqualFold(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEqualFold(FieldUpdatedBy, v))
}

// UpdatedByContainsFold applies the ContainsFold predicate on the "updated_by" field.
func UpdatedByContainsFold(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldContainsFold(FieldUpdatedBy, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.Webauthn {
	return predicate.Webauthn(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNotNull(FieldDeletedAt))
}

// DeletedByEQ applies the EQ predicate on the "deleted_by" field.
func DeletedByEQ(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEQ(FieldDeletedBy, v))
}

// DeletedByNEQ applies the NEQ predicate on the "deleted_by" field.
func DeletedByNEQ(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNEQ(FieldDeletedBy, v))
}

// DeletedByIn applies the In predicate on the "deleted_by" field.
func DeletedByIn(vs ...string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldIn(FieldDeletedBy, vs...))
}

// DeletedByNotIn applies the NotIn predicate on the "deleted_by" field.
func DeletedByNotIn(vs ...string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNotIn(FieldDeletedBy, vs...))
}

// DeletedByGT applies the GT predicate on the "deleted_by" field.
func DeletedByGT(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldGT(FieldDeletedBy, v))
}

// DeletedByGTE applies the GTE predicate on the "deleted_by" field.
func DeletedByGTE(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldGTE(FieldDeletedBy, v))
}

// DeletedByLT applies the LT predicate on the "deleted_by" field.
func DeletedByLT(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldLT(FieldDeletedBy, v))
}

// DeletedByLTE applies the LTE predicate on the "deleted_by" field.
func DeletedByLTE(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldLTE(FieldDeletedBy, v))
}

// DeletedByContains applies the Contains predicate on the "deleted_by" field.
func DeletedByContains(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldContains(FieldDeletedBy, v))
}

// DeletedByHasPrefix applies the HasPrefix predicate on the "deleted_by" field.
func DeletedByHasPrefix(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldHasPrefix(FieldDeletedBy, v))
}

// DeletedByHasSuffix applies the HasSuffix predicate on the "deleted_by" field.
func DeletedByHasSuffix(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldHasSuffix(FieldDeletedBy, v))
}

// DeletedByIsNil applies the IsNil predicate on the "deleted_by" field.
func DeletedByIsNil() predicate.Webauthn {
	return predicate.Webauthn(sql.FieldIsNull(FieldDeletedBy))
}

// DeletedByNotNil applies the NotNil predicate on the "deleted_by" field.
func DeletedByNotNil() predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNotNull(FieldDeletedBy))
}

// DeletedByEqualFold applies the EqualFold predicate on the "deleted_by" field.
func DeletedByEqualFold(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEqualFold(FieldDeletedBy, v))
}

// DeletedByContainsFold applies the ContainsFold predicate on the "deleted_by" field.
func DeletedByContainsFold(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldContainsFold(FieldDeletedBy, v))
}

// OwnerIDEQ applies the EQ predicate on the "owner_id" field.
func OwnerIDEQ(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEQ(FieldOwnerID, v))
}

// OwnerIDNEQ applies the NEQ predicate on the "owner_id" field.
func OwnerIDNEQ(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNEQ(FieldOwnerID, v))
}

// OwnerIDIn applies the In predicate on the "owner_id" field.
func OwnerIDIn(vs ...string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldIn(FieldOwnerID, vs...))
}

// OwnerIDNotIn applies the NotIn predicate on the "owner_id" field.
func OwnerIDNotIn(vs ...string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNotIn(FieldOwnerID, vs...))
}

// OwnerIDGT applies the GT predicate on the "owner_id" field.
func OwnerIDGT(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldGT(FieldOwnerID, v))
}

// OwnerIDGTE applies the GTE predicate on the "owner_id" field.
func OwnerIDGTE(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldGTE(FieldOwnerID, v))
}

// OwnerIDLT applies the LT predicate on the "owner_id" field.
func OwnerIDLT(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldLT(FieldOwnerID, v))
}

// OwnerIDLTE applies the LTE predicate on the "owner_id" field.
func OwnerIDLTE(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldLTE(FieldOwnerID, v))
}

// OwnerIDContains applies the Contains predicate on the "owner_id" field.
func OwnerIDContains(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldContains(FieldOwnerID, v))
}

// OwnerIDHasPrefix applies the HasPrefix predicate on the "owner_id" field.
func OwnerIDHasPrefix(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldHasPrefix(FieldOwnerID, v))
}

// OwnerIDHasSuffix applies the HasSuffix predicate on the "owner_id" field.
func OwnerIDHasSuffix(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldHasSuffix(FieldOwnerID, v))
}

// OwnerIDEqualFold applies the EqualFold predicate on the "owner_id" field.
func OwnerIDEqualFold(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEqualFold(FieldOwnerID, v))
}

// OwnerIDContainsFold applies the ContainsFold predicate on the "owner_id" field.
func OwnerIDContainsFold(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldContainsFold(FieldOwnerID, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldContainsFold(FieldName, v))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldLTE(FieldUserID, v))
}

// UserIDContains applies the Contains predicate on the "user_id" field.
func UserIDContains(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldContains(FieldUserID, v))
}

// UserIDHasPrefix applies the HasPrefix predicate on the "user_id" field.
func UserIDHasPrefix(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldHasPrefix(FieldUserID, v))
}

// UserIDHasSuffix applies the HasSuffix predicate on the "user_id" field.
func UserIDHasSuffix(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldHasSuffix(FieldUserID, v))
}

// UserIDEqualFold applies the EqualFold predicate on the "user_id" field.
func UserIDEqualFold(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEqualFold(FieldUserID, v))
}

// UserIDContainsFold applies the ContainsFold predicate on the "user_id" field.
func UserIDContainsFold(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldContainsFold(FieldUserID, v))
}

// CredentialIDEQ applies the EQ predicate on the "credential_id" field.
func CredentialIDEQ(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEQ(FieldCredentialID, v))
}

// CredentialIDNEQ applies the NEQ predicate on the "credential_id" field.
func CredentialIDNEQ(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNEQ(FieldCredentialID, v))
}

// CredentialIDIn applies the In predicate on the "credential_id" field.
func CredentialIDIn(vs ...string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldIn(FieldCredentialID, vs...))
}

// CredentialIDNotIn applies the NotIn predicate on the "credential_id" field.
func CredentialIDNotIn(vs ...string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNotIn(FieldCredentialID, vs...))
}

// CredentialIDGT applies the GT predicate on the "credential_id" field.
func CredentialIDGT(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldGT(FieldCredentialID, v))
}

// CredentialIDGTE applies the GTE predicate on the "credential_id" field.
func CredentialIDGTE(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldGTE(FieldCredentialID, v))
}

// CredentialIDLT applies the LT predicate on the "credential_id" field.
func CredentialIDLT(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldLT(FieldCredentialID, v))
}

// CredentialIDLTE applies the LTE predicate on the "credential_id" field.
func CredentialIDLTE(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldLTE(FieldCredentialID, v))
}

// CredentialIDContains applies the Contains predicate on the "credential_id" field.
func CredentialIDContains(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldContains(FieldCredentialID, v))
}

// CredentialIDHasPrefix applies the HasPrefix predicate on the "credential_id" field.
func CredentialIDHasPrefix(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldHasPrefix(FieldCredentialID, v))
}

// CredentialIDHasSuffix applies the HasSuffix predicate on the "credential_id" field.
func CredentialIDHasSuffix(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldHasSuffix(FieldCredentialID, v))
}

// CredentialIDIsNil applies the IsNil predicate on the "credential_id" field.
func CredentialIDIsNil() predicate.Webauthn {
	return predicate.Webauthn(sql.FieldIsNull(FieldCredentialID))
}

// CredentialIDNotNil applies the NotNil predicate on the "credential_id" field.
func CredentialIDNotNil() predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNotNull(FieldCredentialID))
}

// CredentialIDEqualFold applies the EqualFold predicate on the "credential_id" field.
func CredentialIDEqualFold(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEqualFold(FieldCredentialID, v))
}

// CredentialIDContainsFold applies the ContainsFold predicate on the "credential_id" field.
func CredentialIDContainsFold(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldContainsFold(FieldCredentialID, v))
}

// PublicKeyEQ applies the EQ predicate on the "public_key" field.
func PublicKeyEQ(v []byte) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEQ(FieldPublicKey, v))
}

// PublicKeyNEQ applies the NEQ predicate on the "public_key" field.
func PublicKeyNEQ(v []byte) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNEQ(FieldPublicKey, v))
}

// PublicKeyIn applies the In predicate on the "public_key" field.
func PublicKeyIn(vs ...[]byte) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldIn(FieldPublicKey, vs...))
}

// PublicKeyNotIn applies the NotIn predicate on the "public_key" field.
func PublicKeyNotIn(vs ...[]byte) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNotIn(FieldPublicKey, vs...))
}

// PublicKeyGT applies the GT predicate on the "public_key" field.
func PublicKeyGT(v []byte) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldGT(FieldPublicKey, v))
}

// PublicKeyGTE applies the GTE predicate on the "public_key" field.
func PublicKeyGTE(v []byte) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldGTE(FieldPublicKey, v))
}

// PublicKeyLT applies the LT predicate on the "public_key" field.
func PublicKeyLT(v []byte) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldLT(FieldPublicKey, v))
}

// PublicKeyLTE applies the LTE predicate on the "public_key" field.
func PublicKeyLTE(v []byte) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldLTE(FieldPublicKey, v))
}

// PublicKeyIsNil applies the IsNil predicate on the "public_key" field.
func PublicKeyIsNil() predicate.Webauthn {
	return predicate.Webauthn(sql.FieldIsNull(FieldPublicKey))
}

// PublicKeyNotNil applies the NotNil predicate on the "public_key" field.
func PublicKeyNotNil() predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNotNull(FieldPublicKey))
}

// AttestationTypeEQ applies the EQ predicate on the "attestation_type" field.
func AttestationTypeEQ(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEQ(FieldAttestationType, v))
}

// AttestationTypeNEQ applies the NEQ predicate on the "attestation_type" field.
func AttestationTypeNEQ(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNEQ(FieldAttestationType, v))
}

// AttestationTypeIn applies the In predicate on the "attestation_type" field.
func AttestationTypeIn(vs ...string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldIn(FieldAttestationType, vs...))
}

// AttestationTypeNotIn applies the NotIn predicate on the "attestation_type" field.
func AttestationTypeNotIn(vs ...string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNotIn(FieldAttestationType, vs...))
}

// AttestationTypeGT applies the GT predicate on the "attestation_type" field.
func AttestationTypeGT(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldGT(FieldAttestationType, v))
}

// AttestationTypeGTE applies the GTE predicate on the "attestation_type" field.
func AttestationTypeGTE(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldGTE(FieldAttestationType, v))
}

// AttestationTypeLT applies the LT predicate on the "attestation_type" field.
func AttestationTypeLT(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldLT(FieldAttestationType, v))
}

// AttestationTypeLTE applies the LTE predicate on the "attestation_type" field.
func AttestationTypeLTE(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldLTE(FieldAttestationType, v))
}

// AttestationTypeContains applies the Contains predicate on the "attestation_type" field.
func AttestationTypeContains(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldContains(FieldAttestationType, v))
}

// AttestationTypeHasPrefix applies the HasPrefix predicate on the "attestation_type" field.
func AttestationTypeHasPrefix(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldHasPrefix(FieldAttestationType, v))
}

// AttestationTypeHasSuffix applies the HasSuffix predicate on the "attestation_type" field.
func AttestationTypeHasSuffix(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldHasSuffix(FieldAttestationType, v))
}

// AttestationTypeIsNil applies the IsNil predicate on the "attestation_type" field.
func AttestationTypeIsNil() predicate.Webauthn {
	return predicate.Webauthn(sql.FieldIsNull(FieldAttestationType))
}

// AttestationTypeNotNil applies the NotNil predicate on the "attestation_type" field.
func AttestationTypeNotNil() predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNotNull(FieldAttestationType))
}

// AttestationTypeEqualFold applies the EqualFold predicate on the "attestation_type" field.
func AttestationTypeEqualFold(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEqualFold(FieldAttestationType, v))
}

// AttestationTypeContainsFold applies the ContainsFold predicate on the "attestation_type" field.
func AttestationTypeContainsFold(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldContainsFold(FieldAttestationType, v))
}

// AaguidEQ applies the EQ predicate on the "aaguid" field.
func AaguidEQ(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEQ(FieldAaguid, v))
}

// AaguidNEQ applies the NEQ predicate on the "aaguid" field.
func AaguidNEQ(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNEQ(FieldAaguid, v))
}

// AaguidIn applies the In predicate on the "aaguid" field.
func AaguidIn(vs ...string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldIn(FieldAaguid, vs...))
}

// AaguidNotIn applies the NotIn predicate on the "aaguid" field.
func AaguidNotIn(vs ...string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNotIn(FieldAaguid, vs...))
}

// AaguidGT applies the GT predicate on the "aaguid" field.
func AaguidGT(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldGT(FieldAaguid, v))
}

// AaguidGTE applies the GTE predicate on the "aaguid" field.
func AaguidGTE(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldGTE(FieldAaguid, v))
}

// AaguidLT applies the LT predicate on the "aaguid" field.
func AaguidLT(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldLT(FieldAaguid, v))
}

// AaguidLTE applies the LTE predicate on the "aaguid" field.
func AaguidLTE(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldLTE(FieldAaguid, v))
}

// AaguidContains applies the Contains predicate on the "aaguid" field.
func AaguidContains(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldContains(FieldAaguid, v))
}

// AaguidHasPrefix applies the HasPrefix predicate on the "aaguid" field.
func AaguidHasPrefix(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldHasPrefix(FieldAaguid, v))
}

// AaguidHasSuffix applies the HasSuffix predicate on the "aaguid" field.
func AaguidHasSuffix(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldHasSuffix(FieldAaguid, v))
}

// AaguidIsNil applies the IsNil predicate on the "aaguid" field.
func AaguidIsNil() predicate.Webauthn {
	return predicate.Webauthn(sql.FieldIsNull(FieldAaguid))
}

// AaguidNotNil applies the NotNil predicate on the "aaguid" field.
func AaguidNotNil() predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNotNull(FieldAaguid))
}

// AaguidEqualFold applies the EqualFold predicate on the "aaguid" field.
func AaguidEqualFold(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEqualFold(FieldAaguid, v))
}

// AaguidContainsFold applies the ContainsFold predicate on the "aaguid" field.
func AaguidContainsFold(v string) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldContainsFold(FieldAaguid, v))
}

// SignCountEQ applies the EQ predicate on the "sign_count" field.
func SignCountEQ(v int) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEQ(FieldSignCount, v))
}

// SignCountNEQ applies the NEQ predicate on the "sign_count" field.
func SignCountNEQ(v int) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNEQ(FieldSignCount, v))
}

// SignCountIn applies the In predicate on the "sign_count" field.
func SignCountIn(vs ...int) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldIn(FieldSignCount, vs...))
}

// SignCountNotIn applies the NotIn predicate on the "sign_count" field.
func SignCountNotIn(vs ...int) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNotIn(FieldSignCount, vs...))
}

// SignCountGT applies the GT predicate on the "sign_count" field.
func SignCountGT(v int) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldGT(FieldSignCount, v))
}

// SignCountGTE applies the GTE predicate on the "sign_count" field.
func SignCountGTE(v int) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldGTE(FieldSignCount, v))
}

// SignCountLT applies the LT predicate on the "sign_count" field.
func SignCountLT(v int) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldLT(FieldSignCount, v))
}

// SignCountLTE applies the LTE predicate on the "sign_count" field.
func SignCountLTE(v int) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldLTE(FieldSignCount, v))
}

// SignCountIsNil applies the IsNil predicate on the "sign_count" field.
func SignCountIsNil() predicate.Webauthn {
	return predicate.Webauthn(sql.FieldIsNull(FieldSignCount))
}

// SignCountNotNil applies the NotNil predicate on the "sign_count" field.
func SignCountNotNil() predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNotNull(FieldSignCount))
}

// TransportsIsNil applies the IsNil predicate on the "transports" field.
func TransportsIsNil() predicate.Webauthn {
	return predicate.Webauthn(sql.FieldIsNull(FieldTransports))
}

// TransportsNotNil applies the NotNil predicate on the "transports" field.
func TransportsNotNil() predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNotNull(FieldTransports))
}

// FlagsIsNil applies the IsNil predicate on the "flags" field.
func FlagsIsNil() predicate.Webauthn {
	return predicate.Webauthn(sql.FieldIsNull(FieldFlags))
}

// FlagsNotNil applies the NotNil predicate on the "flags" field.
func FlagsNotNil() predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNotNull(FieldFlags))
}

// AuthenticatorIsNil applies the IsNil predicate on the "authenticator" field.
func AuthenticatorIsNil() predicate.Webauthn {
	return predicate.Webauthn(sql.FieldIsNull(FieldAuthenticator))
}

// AuthenticatorNotNil applies the NotNil predicate on the "authenticator" field.
func AuthenticatorNotNil() predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNotNull(FieldAuthenticator))
}

// BackupEligibleEQ applies the EQ predicate on the "backup_eligible" field.
func BackupEligibleEQ(v bool) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEQ(FieldBackupEligible, v))
}

// BackupEligibleNEQ applies the NEQ predicate on the "backup_eligible" field.
func BackupEligibleNEQ(v bool) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNEQ(FieldBackupEligible, v))
}

// BackupEligibleIsNil applies the IsNil predicate on the "backup_eligible" field.
func BackupEligibleIsNil() predicate.Webauthn {
	return predicate.Webauthn(sql.FieldIsNull(FieldBackupEligible))
}

// BackupEligibleNotNil applies the NotNil predicate on the "backup_eligible" field.
func BackupEligibleNotNil() predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNotNull(FieldBackupEligible))
}

// BackupStateEQ applies the EQ predicate on the "backup_state" field.
func BackupStateEQ(v bool) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldEQ(FieldBackupState, v))
}

// BackupStateNEQ applies the NEQ predicate on the "backup_state" field.
func BackupStateNEQ(v bool) predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNEQ(FieldBackupState, v))
}

// BackupStateIsNil applies the IsNil predicate on the "backup_state" field.
func BackupStateIsNil() predicate.Webauthn {
	return predicate.Webauthn(sql.FieldIsNull(FieldBackupState))
}

// BackupStateNotNil applies the NotNil predicate on the "backup_state" field.
func BackupStateNotNil() predicate.Webauthn {
	return predicate.Webauthn(sql.FieldNotNull(FieldBackupState))
}

// HasOwner applies the HasEdge predicate on the "owner" edge.
func HasOwner() predicate.Webauthn {
	return predicate.Webauthn(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, OwnerTable, OwnerColumn),
		)
		schemaConfig := internal.SchemaConfigFromContext(s.Context())
		step.To.Schema = schemaConfig.User
		step.Edge.Schema = schemaConfig.Webauthn
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasOwnerWith applies the HasEdge predicate on the "owner" edge with a given conditions (other predicates).
func HasOwnerWith(preds ...predicate.User) predicate.Webauthn {
	return predicate.Webauthn(func(s *sql.Selector) {
		step := newOwnerStep()
		schemaConfig := internal.SchemaConfigFromContext(s.Context())
		step.To.Schema = schemaConfig.User
		step.Edge.Schema = schemaConfig.Webauthn
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Webauthn) predicate.Webauthn {
	return predicate.Webauthn(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Webauthn) predicate.Webauthn {
	return predicate.Webauthn(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Webauthn) predicate.Webauthn {
	return predicate.Webauthn(sql.NotPredicates(p))
}
