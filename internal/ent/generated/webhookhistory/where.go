// Code generated by ent, DO NOT EDIT.

package webhookhistory

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/datumforge/datum/internal/ent/generated/predicate"
	"github.com/datumforge/enthistory"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldContainsFold(FieldID, id))
}

// HistoryTime applies equality check predicate on the "history_time" field. It's identical to HistoryTimeEQ.
func HistoryTime(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldHistoryTime, v))
}

// Ref applies equality check predicate on the "ref" field. It's identical to RefEQ.
func Ref(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldRef, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldUpdatedAt, v))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldCreatedBy, v))
}

// UpdatedBy applies equality check predicate on the "updated_by" field. It's identical to UpdatedByEQ.
func UpdatedBy(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldUpdatedBy, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedBy applies equality check predicate on the "deleted_by" field. It's identical to DeletedByEQ.
func DeletedBy(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldDeletedBy, v))
}

// OwnerID applies equality check predicate on the "owner_id" field. It's identical to OwnerIDEQ.
func OwnerID(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldOwnerID, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldName, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldDescription, v))
}

// DestinationURL applies equality check predicate on the "destination_url" field. It's identical to DestinationURLEQ.
func DestinationURL(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldDestinationURL, v))
}

// Enabled applies equality check predicate on the "enabled" field. It's identical to EnabledEQ.
func Enabled(v bool) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldEnabled, v))
}

// Callback applies equality check predicate on the "callback" field. It's identical to CallbackEQ.
func Callback(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldCallback, v))
}

// ExpiresAt applies equality check predicate on the "expires_at" field. It's identical to ExpiresAtEQ.
func ExpiresAt(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldExpiresAt, v))
}

// Secret applies equality check predicate on the "secret" field. It's identical to SecretEQ.
func Secret(v []byte) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldSecret, v))
}

// Failures applies equality check predicate on the "failures" field. It's identical to FailuresEQ.
func Failures(v int) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldFailures, v))
}

// LastError applies equality check predicate on the "last_error" field. It's identical to LastErrorEQ.
func LastError(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldLastError, v))
}

// LastResponse applies equality check predicate on the "last_response" field. It's identical to LastResponseEQ.
func LastResponse(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldLastResponse, v))
}

// HistoryTimeEQ applies the EQ predicate on the "history_time" field.
func HistoryTimeEQ(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldHistoryTime, v))
}

// HistoryTimeNEQ applies the NEQ predicate on the "history_time" field.
func HistoryTimeNEQ(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNEQ(FieldHistoryTime, v))
}

// HistoryTimeIn applies the In predicate on the "history_time" field.
func HistoryTimeIn(vs ...time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIn(FieldHistoryTime, vs...))
}

// HistoryTimeNotIn applies the NotIn predicate on the "history_time" field.
func HistoryTimeNotIn(vs ...time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotIn(FieldHistoryTime, vs...))
}

// HistoryTimeGT applies the GT predicate on the "history_time" field.
func HistoryTimeGT(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGT(FieldHistoryTime, v))
}

// HistoryTimeGTE applies the GTE predicate on the "history_time" field.
func HistoryTimeGTE(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGTE(FieldHistoryTime, v))
}

// HistoryTimeLT applies the LT predicate on the "history_time" field.
func HistoryTimeLT(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLT(FieldHistoryTime, v))
}

// HistoryTimeLTE applies the LTE predicate on the "history_time" field.
func HistoryTimeLTE(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLTE(FieldHistoryTime, v))
}

// OperationEQ applies the EQ predicate on the "operation" field.
func OperationEQ(v enthistory.OpType) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldOperation, v))
}

// OperationNEQ applies the NEQ predicate on the "operation" field.
func OperationNEQ(v enthistory.OpType) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNEQ(FieldOperation, v))
}

// OperationIn applies the In predicate on the "operation" field.
func OperationIn(vs ...enthistory.OpType) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIn(FieldOperation, vs...))
}

// OperationNotIn applies the NotIn predicate on the "operation" field.
func OperationNotIn(vs ...enthistory.OpType) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotIn(FieldOperation, vs...))
}

// RefEQ applies the EQ predicate on the "ref" field.
func RefEQ(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldRef, v))
}

// RefNEQ applies the NEQ predicate on the "ref" field.
func RefNEQ(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNEQ(FieldRef, v))
}

// RefIn applies the In predicate on the "ref" field.
func RefIn(vs ...string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIn(FieldRef, vs...))
}

// RefNotIn applies the NotIn predicate on the "ref" field.
func RefNotIn(vs ...string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotIn(FieldRef, vs...))
}

// RefGT applies the GT predicate on the "ref" field.
func RefGT(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGT(FieldRef, v))
}

// RefGTE applies the GTE predicate on the "ref" field.
func RefGTE(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGTE(FieldRef, v))
}

// RefLT applies the LT predicate on the "ref" field.
func RefLT(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLT(FieldRef, v))
}

// RefLTE applies the LTE predicate on the "ref" field.
func RefLTE(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLTE(FieldRef, v))
}

// RefContains applies the Contains predicate on the "ref" field.
func RefContains(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldContains(FieldRef, v))
}

// RefHasPrefix applies the HasPrefix predicate on the "ref" field.
func RefHasPrefix(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldHasPrefix(FieldRef, v))
}

// RefHasSuffix applies the HasSuffix predicate on the "ref" field.
func RefHasSuffix(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldHasSuffix(FieldRef, v))
}

// RefIsNil applies the IsNil predicate on the "ref" field.
func RefIsNil() predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIsNull(FieldRef))
}

// RefNotNil applies the NotNil predicate on the "ref" field.
func RefNotNil() predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotNull(FieldRef))
}

// RefEqualFold applies the EqualFold predicate on the "ref" field.
func RefEqualFold(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEqualFold(FieldRef, v))
}

// RefContainsFold applies the ContainsFold predicate on the "ref" field.
func RefContainsFold(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldContainsFold(FieldRef, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtIsNil applies the IsNil predicate on the "created_at" field.
func CreatedAtIsNil() predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIsNull(FieldCreatedAt))
}

// CreatedAtNotNil applies the NotNil predicate on the "created_at" field.
func CreatedAtNotNil() predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotNull(FieldCreatedAt))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotNull(FieldUpdatedAt))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "created_by" field.
func CreatedByGT(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "created_by" field.
func CreatedByGTE(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "created_by" field.
func CreatedByLT(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "created_by" field.
func CreatedByLTE(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByContains applies the Contains predicate on the "created_by" field.
func CreatedByContains(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldContains(FieldCreatedBy, v))
}

// CreatedByHasPrefix applies the HasPrefix predicate on the "created_by" field.
func CreatedByHasPrefix(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldHasPrefix(FieldCreatedBy, v))
}

// CreatedByHasSuffix applies the HasSuffix predicate on the "created_by" field.
func CreatedByHasSuffix(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldHasSuffix(FieldCreatedBy, v))
}

// CreatedByIsNil applies the IsNil predicate on the "created_by" field.
func CreatedByIsNil() predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "created_by" field.
func CreatedByNotNil() predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotNull(FieldCreatedBy))
}

// CreatedByEqualFold applies the EqualFold predicate on the "created_by" field.
func CreatedByEqualFold(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEqualFold(FieldCreatedBy, v))
}

// CreatedByContainsFold applies the ContainsFold predicate on the "created_by" field.
func CreatedByContainsFold(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldContainsFold(FieldCreatedBy, v))
}

// UpdatedByEQ applies the EQ predicate on the "updated_by" field.
func UpdatedByEQ(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "updated_by" field.
func UpdatedByNEQ(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "updated_by" field.
func UpdatedByIn(vs ...string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "updated_by" field.
func UpdatedByNotIn(vs ...string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "updated_by" field.
func UpdatedByGT(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "updated_by" field.
func UpdatedByGTE(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "updated_by" field.
func UpdatedByLT(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "updated_by" field.
func UpdatedByLTE(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByContains applies the Contains predicate on the "updated_by" field.
func UpdatedByContains(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldContains(FieldUpdatedBy, v))
}

// UpdatedByHasPrefix applies the HasPrefix predicate on the "updated_by" field.
func UpdatedByHasPrefix(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldHasPrefix(FieldUpdatedBy, v))
}

// UpdatedByHasSuffix applies the HasSuffix predicate on the "updated_by" field.
func UpdatedByHasSuffix(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldHasSuffix(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "updated_by" field.
func UpdatedByIsNil() predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "updated_by" field.
func UpdatedByNotNil() predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotNull(FieldUpdatedBy))
}

// UpdatedByEqualFold applies the EqualFold predicate on the "updated_by" field.
func UpdatedByEqualFold(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEqualFold(FieldUpdatedBy, v))
}

// UpdatedByContainsFold applies the ContainsFold predicate on the "updated_by" field.
func UpdatedByContainsFold(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldContainsFold(FieldUpdatedBy, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotNull(FieldDeletedAt))
}

// DeletedByEQ applies the EQ predicate on the "deleted_by" field.
func DeletedByEQ(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldDeletedBy, v))
}

// DeletedByNEQ applies the NEQ predicate on the "deleted_by" field.
func DeletedByNEQ(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNEQ(FieldDeletedBy, v))
}

// DeletedByIn applies the In predicate on the "deleted_by" field.
func DeletedByIn(vs ...string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIn(FieldDeletedBy, vs...))
}

// DeletedByNotIn applies the NotIn predicate on the "deleted_by" field.
func DeletedByNotIn(vs ...string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotIn(FieldDeletedBy, vs...))
}

// DeletedByGT applies the GT predicate on the "deleted_by" field.
func DeletedByGT(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGT(FieldDeletedBy, v))
}

// DeletedByGTE applies the GTE predicate on the "deleted_by" field.
func DeletedByGTE(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGTE(FieldDeletedBy, v))
}

// DeletedByLT applies the LT predicate on the "deleted_by" field.
func DeletedByLT(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLT(FieldDeletedBy, v))
}

// DeletedByLTE applies the LTE predicate on the "deleted_by" field.
func DeletedByLTE(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLTE(FieldDeletedBy, v))
}

// DeletedByContains applies the Contains predicate on the "deleted_by" field.
func DeletedByContains(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldContains(FieldDeletedBy, v))
}

// DeletedByHasPrefix applies the HasPrefix predicate on the "deleted_by" field.
func DeletedByHasPrefix(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldHasPrefix(FieldDeletedBy, v))
}

// DeletedByHasSuffix applies the HasSuffix predicate on the "deleted_by" field.
func DeletedByHasSuffix(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldHasSuffix(FieldDeletedBy, v))
}

// DeletedByIsNil applies the IsNil predicate on the "deleted_by" field.
func DeletedByIsNil() predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIsNull(FieldDeletedBy))
}

// DeletedByNotNil applies the NotNil predicate on the "deleted_by" field.
func DeletedByNotNil() predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotNull(FieldDeletedBy))
}

// DeletedByEqualFold applies the EqualFold predicate on the "deleted_by" field.
func DeletedByEqualFold(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEqualFold(FieldDeletedBy, v))
}

// DeletedByContainsFold applies the ContainsFold predicate on the "deleted_by" field.
func DeletedByContainsFold(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldContainsFold(FieldDeletedBy, v))
}

// OwnerIDEQ applies the EQ predicate on the "owner_id" field.
func OwnerIDEQ(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldOwnerID, v))
}

// OwnerIDNEQ applies the NEQ predicate on the "owner_id" field.
func OwnerIDNEQ(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNEQ(FieldOwnerID, v))
}

// OwnerIDIn applies the In predicate on the "owner_id" field.
func OwnerIDIn(vs ...string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIn(FieldOwnerID, vs...))
}

// OwnerIDNotIn applies the NotIn predicate on the "owner_id" field.
func OwnerIDNotIn(vs ...string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotIn(FieldOwnerID, vs...))
}

// OwnerIDGT applies the GT predicate on the "owner_id" field.
func OwnerIDGT(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGT(FieldOwnerID, v))
}

// OwnerIDGTE applies the GTE predicate on the "owner_id" field.
func OwnerIDGTE(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGTE(FieldOwnerID, v))
}

// OwnerIDLT applies the LT predicate on the "owner_id" field.
func OwnerIDLT(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLT(FieldOwnerID, v))
}

// OwnerIDLTE applies the LTE predicate on the "owner_id" field.
func OwnerIDLTE(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLTE(FieldOwnerID, v))
}

// OwnerIDContains applies the Contains predicate on the "owner_id" field.
func OwnerIDContains(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldContains(FieldOwnerID, v))
}

// OwnerIDHasPrefix applies the HasPrefix predicate on the "owner_id" field.
func OwnerIDHasPrefix(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldHasPrefix(FieldOwnerID, v))
}

// OwnerIDHasSuffix applies the HasSuffix predicate on the "owner_id" field.
func OwnerIDHasSuffix(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldHasSuffix(FieldOwnerID, v))
}

// OwnerIDIsNil applies the IsNil predicate on the "owner_id" field.
func OwnerIDIsNil() predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIsNull(FieldOwnerID))
}

// OwnerIDNotNil applies the NotNil predicate on the "owner_id" field.
func OwnerIDNotNil() predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotNull(FieldOwnerID))
}

// OwnerIDEqualFold applies the EqualFold predicate on the "owner_id" field.
func OwnerIDEqualFold(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEqualFold(FieldOwnerID, v))
}

// OwnerIDContainsFold applies the ContainsFold predicate on the "owner_id" field.
func OwnerIDContainsFold(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldContainsFold(FieldOwnerID, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldContainsFold(FieldName, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionIsNil applies the IsNil predicate on the "description" field.
func DescriptionIsNil() predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIsNull(FieldDescription))
}

// DescriptionNotNil applies the NotNil predicate on the "description" field.
func DescriptionNotNil() predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotNull(FieldDescription))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldContainsFold(FieldDescription, v))
}

// DestinationURLEQ applies the EQ predicate on the "destination_url" field.
func DestinationURLEQ(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldDestinationURL, v))
}

// DestinationURLNEQ applies the NEQ predicate on the "destination_url" field.
func DestinationURLNEQ(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNEQ(FieldDestinationURL, v))
}

// DestinationURLIn applies the In predicate on the "destination_url" field.
func DestinationURLIn(vs ...string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIn(FieldDestinationURL, vs...))
}

// DestinationURLNotIn applies the NotIn predicate on the "destination_url" field.
func DestinationURLNotIn(vs ...string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotIn(FieldDestinationURL, vs...))
}

// DestinationURLGT applies the GT predicate on the "destination_url" field.
func DestinationURLGT(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGT(FieldDestinationURL, v))
}

// DestinationURLGTE applies the GTE predicate on the "destination_url" field.
func DestinationURLGTE(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGTE(FieldDestinationURL, v))
}

// DestinationURLLT applies the LT predicate on the "destination_url" field.
func DestinationURLLT(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLT(FieldDestinationURL, v))
}

// DestinationURLLTE applies the LTE predicate on the "destination_url" field.
func DestinationURLLTE(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLTE(FieldDestinationURL, v))
}

// DestinationURLContains applies the Contains predicate on the "destination_url" field.
func DestinationURLContains(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldContains(FieldDestinationURL, v))
}

// DestinationURLHasPrefix applies the HasPrefix predicate on the "destination_url" field.
func DestinationURLHasPrefix(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldHasPrefix(FieldDestinationURL, v))
}

// DestinationURLHasSuffix applies the HasSuffix predicate on the "destination_url" field.
func DestinationURLHasSuffix(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldHasSuffix(FieldDestinationURL, v))
}

// DestinationURLEqualFold applies the EqualFold predicate on the "destination_url" field.
func DestinationURLEqualFold(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEqualFold(FieldDestinationURL, v))
}

// DestinationURLContainsFold applies the ContainsFold predicate on the "destination_url" field.
func DestinationURLContainsFold(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldContainsFold(FieldDestinationURL, v))
}

// EnabledEQ applies the EQ predicate on the "enabled" field.
func EnabledEQ(v bool) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldEnabled, v))
}

// EnabledNEQ applies the NEQ predicate on the "enabled" field.
func EnabledNEQ(v bool) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNEQ(FieldEnabled, v))
}

// CallbackEQ applies the EQ predicate on the "callback" field.
func CallbackEQ(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldCallback, v))
}

// CallbackNEQ applies the NEQ predicate on the "callback" field.
func CallbackNEQ(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNEQ(FieldCallback, v))
}

// CallbackIn applies the In predicate on the "callback" field.
func CallbackIn(vs ...string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIn(FieldCallback, vs...))
}

// CallbackNotIn applies the NotIn predicate on the "callback" field.
func CallbackNotIn(vs ...string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotIn(FieldCallback, vs...))
}

// CallbackGT applies the GT predicate on the "callback" field.
func CallbackGT(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGT(FieldCallback, v))
}

// CallbackGTE applies the GTE predicate on the "callback" field.
func CallbackGTE(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGTE(FieldCallback, v))
}

// CallbackLT applies the LT predicate on the "callback" field.
func CallbackLT(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLT(FieldCallback, v))
}

// CallbackLTE applies the LTE predicate on the "callback" field.
func CallbackLTE(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLTE(FieldCallback, v))
}

// CallbackContains applies the Contains predicate on the "callback" field.
func CallbackContains(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldContains(FieldCallback, v))
}

// CallbackHasPrefix applies the HasPrefix predicate on the "callback" field.
func CallbackHasPrefix(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldHasPrefix(FieldCallback, v))
}

// CallbackHasSuffix applies the HasSuffix predicate on the "callback" field.
func CallbackHasSuffix(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldHasSuffix(FieldCallback, v))
}

// CallbackIsNil applies the IsNil predicate on the "callback" field.
func CallbackIsNil() predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIsNull(FieldCallback))
}

// CallbackNotNil applies the NotNil predicate on the "callback" field.
func CallbackNotNil() predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotNull(FieldCallback))
}

// CallbackEqualFold applies the EqualFold predicate on the "callback" field.
func CallbackEqualFold(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEqualFold(FieldCallback, v))
}

// CallbackContainsFold applies the ContainsFold predicate on the "callback" field.
func CallbackContainsFold(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldContainsFold(FieldCallback, v))
}

// ExpiresAtEQ applies the EQ predicate on the "expires_at" field.
func ExpiresAtEQ(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldExpiresAt, v))
}

// ExpiresAtNEQ applies the NEQ predicate on the "expires_at" field.
func ExpiresAtNEQ(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNEQ(FieldExpiresAt, v))
}

// ExpiresAtIn applies the In predicate on the "expires_at" field.
func ExpiresAtIn(vs ...time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIn(FieldExpiresAt, vs...))
}

// ExpiresAtNotIn applies the NotIn predicate on the "expires_at" field.
func ExpiresAtNotIn(vs ...time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotIn(FieldExpiresAt, vs...))
}

// ExpiresAtGT applies the GT predicate on the "expires_at" field.
func ExpiresAtGT(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGT(FieldExpiresAt, v))
}

// ExpiresAtGTE applies the GTE predicate on the "expires_at" field.
func ExpiresAtGTE(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGTE(FieldExpiresAt, v))
}

// ExpiresAtLT applies the LT predicate on the "expires_at" field.
func ExpiresAtLT(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLT(FieldExpiresAt, v))
}

// ExpiresAtLTE applies the LTE predicate on the "expires_at" field.
func ExpiresAtLTE(v time.Time) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLTE(FieldExpiresAt, v))
}

// ExpiresAtIsNil applies the IsNil predicate on the "expires_at" field.
func ExpiresAtIsNil() predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIsNull(FieldExpiresAt))
}

// ExpiresAtNotNil applies the NotNil predicate on the "expires_at" field.
func ExpiresAtNotNil() predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotNull(FieldExpiresAt))
}

// SecretEQ applies the EQ predicate on the "secret" field.
func SecretEQ(v []byte) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldSecret, v))
}

// SecretNEQ applies the NEQ predicate on the "secret" field.
func SecretNEQ(v []byte) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNEQ(FieldSecret, v))
}

// SecretIn applies the In predicate on the "secret" field.
func SecretIn(vs ...[]byte) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIn(FieldSecret, vs...))
}

// SecretNotIn applies the NotIn predicate on the "secret" field.
func SecretNotIn(vs ...[]byte) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotIn(FieldSecret, vs...))
}

// SecretGT applies the GT predicate on the "secret" field.
func SecretGT(v []byte) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGT(FieldSecret, v))
}

// SecretGTE applies the GTE predicate on the "secret" field.
func SecretGTE(v []byte) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGTE(FieldSecret, v))
}

// SecretLT applies the LT predicate on the "secret" field.
func SecretLT(v []byte) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLT(FieldSecret, v))
}

// SecretLTE applies the LTE predicate on the "secret" field.
func SecretLTE(v []byte) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLTE(FieldSecret, v))
}

// SecretIsNil applies the IsNil predicate on the "secret" field.
func SecretIsNil() predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIsNull(FieldSecret))
}

// SecretNotNil applies the NotNil predicate on the "secret" field.
func SecretNotNil() predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotNull(FieldSecret))
}

// FailuresEQ applies the EQ predicate on the "failures" field.
func FailuresEQ(v int) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldFailures, v))
}

// FailuresNEQ applies the NEQ predicate on the "failures" field.
func FailuresNEQ(v int) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNEQ(FieldFailures, v))
}

// FailuresIn applies the In predicate on the "failures" field.
func FailuresIn(vs ...int) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIn(FieldFailures, vs...))
}

// FailuresNotIn applies the NotIn predicate on the "failures" field.
func FailuresNotIn(vs ...int) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotIn(FieldFailures, vs...))
}

// FailuresGT applies the GT predicate on the "failures" field.
func FailuresGT(v int) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGT(FieldFailures, v))
}

// FailuresGTE applies the GTE predicate on the "failures" field.
func FailuresGTE(v int) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGTE(FieldFailures, v))
}

// FailuresLT applies the LT predicate on the "failures" field.
func FailuresLT(v int) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLT(FieldFailures, v))
}

// FailuresLTE applies the LTE predicate on the "failures" field.
func FailuresLTE(v int) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLTE(FieldFailures, v))
}

// FailuresIsNil applies the IsNil predicate on the "failures" field.
func FailuresIsNil() predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIsNull(FieldFailures))
}

// FailuresNotNil applies the NotNil predicate on the "failures" field.
func FailuresNotNil() predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotNull(FieldFailures))
}

// LastErrorEQ applies the EQ predicate on the "last_error" field.
func LastErrorEQ(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldLastError, v))
}

// LastErrorNEQ applies the NEQ predicate on the "last_error" field.
func LastErrorNEQ(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNEQ(FieldLastError, v))
}

// LastErrorIn applies the In predicate on the "last_error" field.
func LastErrorIn(vs ...string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIn(FieldLastError, vs...))
}

// LastErrorNotIn applies the NotIn predicate on the "last_error" field.
func LastErrorNotIn(vs ...string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotIn(FieldLastError, vs...))
}

// LastErrorGT applies the GT predicate on the "last_error" field.
func LastErrorGT(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGT(FieldLastError, v))
}

// LastErrorGTE applies the GTE predicate on the "last_error" field.
func LastErrorGTE(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGTE(FieldLastError, v))
}

// LastErrorLT applies the LT predicate on the "last_error" field.
func LastErrorLT(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLT(FieldLastError, v))
}

// LastErrorLTE applies the LTE predicate on the "last_error" field.
func LastErrorLTE(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLTE(FieldLastError, v))
}

// LastErrorContains applies the Contains predicate on the "last_error" field.
func LastErrorContains(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldContains(FieldLastError, v))
}

// LastErrorHasPrefix applies the HasPrefix predicate on the "last_error" field.
func LastErrorHasPrefix(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldHasPrefix(FieldLastError, v))
}

// LastErrorHasSuffix applies the HasSuffix predicate on the "last_error" field.
func LastErrorHasSuffix(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldHasSuffix(FieldLastError, v))
}

// LastErrorIsNil applies the IsNil predicate on the "last_error" field.
func LastErrorIsNil() predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIsNull(FieldLastError))
}

// LastErrorNotNil applies the NotNil predicate on the "last_error" field.
func LastErrorNotNil() predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotNull(FieldLastError))
}

// LastErrorEqualFold applies the EqualFold predicate on the "last_error" field.
func LastErrorEqualFold(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEqualFold(FieldLastError, v))
}

// LastErrorContainsFold applies the ContainsFold predicate on the "last_error" field.
func LastErrorContainsFold(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldContainsFold(FieldLastError, v))
}

// LastResponseEQ applies the EQ predicate on the "last_response" field.
func LastResponseEQ(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEQ(FieldLastResponse, v))
}

// LastResponseNEQ applies the NEQ predicate on the "last_response" field.
func LastResponseNEQ(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNEQ(FieldLastResponse, v))
}

// LastResponseIn applies the In predicate on the "last_response" field.
func LastResponseIn(vs ...string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIn(FieldLastResponse, vs...))
}

// LastResponseNotIn applies the NotIn predicate on the "last_response" field.
func LastResponseNotIn(vs ...string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotIn(FieldLastResponse, vs...))
}

// LastResponseGT applies the GT predicate on the "last_response" field.
func LastResponseGT(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGT(FieldLastResponse, v))
}

// LastResponseGTE applies the GTE predicate on the "last_response" field.
func LastResponseGTE(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldGTE(FieldLastResponse, v))
}

// LastResponseLT applies the LT predicate on the "last_response" field.
func LastResponseLT(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLT(FieldLastResponse, v))
}

// LastResponseLTE applies the LTE predicate on the "last_response" field.
func LastResponseLTE(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldLTE(FieldLastResponse, v))
}

// LastResponseContains applies the Contains predicate on the "last_response" field.
func LastResponseContains(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldContains(FieldLastResponse, v))
}

// LastResponseHasPrefix applies the HasPrefix predicate on the "last_response" field.
func LastResponseHasPrefix(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldHasPrefix(FieldLastResponse, v))
}

// LastResponseHasSuffix applies the HasSuffix predicate on the "last_response" field.
func LastResponseHasSuffix(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldHasSuffix(FieldLastResponse, v))
}

// LastResponseIsNil applies the IsNil predicate on the "last_response" field.
func LastResponseIsNil() predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldIsNull(FieldLastResponse))
}

// LastResponseNotNil applies the NotNil predicate on the "last_response" field.
func LastResponseNotNil() predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldNotNull(FieldLastResponse))
}

// LastResponseEqualFold applies the EqualFold predicate on the "last_response" field.
func LastResponseEqualFold(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldEqualFold(FieldLastResponse, v))
}

// LastResponseContainsFold applies the ContainsFold predicate on the "last_response" field.
func LastResponseContainsFold(v string) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.FieldContainsFold(FieldLastResponse, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.WebhookHistory) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.WebhookHistory) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.WebhookHistory) predicate.WebhookHistory {
	return predicate.WebhookHistory(sql.NotPredicates(p))
}
