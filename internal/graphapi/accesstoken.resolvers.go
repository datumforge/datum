package graphapi

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.41

import (
	"context"
	"fmt"

	"github.com/datumforge/datum/internal/ent/generated"
)

// CreateAccessToken is the resolver for the createAccessToken field.
func (r *mutationResolver) CreateAccessToken(ctx context.Context, input generated.CreateAccessTokenInput) (*AccessTokenCreatePayload, error) {
	panic(fmt.Errorf("not implemented: CreateAccessToken - createAccessToken"))
}

// UpdateAccessToken is the resolver for the updateAccessToken field.
func (r *mutationResolver) UpdateAccessToken(ctx context.Context, id string, input generated.UpdateAccessTokenInput) (*AccessTokenUpdatePayload, error) {
	panic(fmt.Errorf("not implemented: UpdateAccessToken - updateAccessToken"))
}

// DeleteAccessToken is the resolver for the deleteAccessToken field.
func (r *mutationResolver) DeleteAccessToken(ctx context.Context, id string) (*AccessTokenDeletePayload, error) {
	panic(fmt.Errorf("not implemented: DeleteAccessToken - deleteAccessToken"))
}

// AccessToken is the resolver for the accessToken field.
func (r *queryResolver) AccessToken(ctx context.Context, id string) (*generated.AccessToken, error) {
	panic(fmt.Errorf("not implemented: AccessToken - accessToken"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
