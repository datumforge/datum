package graphapi

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen

import (
	"context"
	"fmt"

	"github.com/datumforge/datum/internal/ent/generated"
)

// CreateDocumentData is the resolver for the createDocumentData field.
func (r *mutationResolver) CreateDocumentData(ctx context.Context, input generated.CreateDocumentDataInput) (*DocumentDataCreatePayload, error) {
	panic(fmt.Errorf("not implemented: CreateDocumentData - createDocumentData"))
}

// UpdateDocumentData is the resolver for the updateDocumentData field.
func (r *mutationResolver) UpdateDocumentData(ctx context.Context, id string, input generated.UpdateDocumentDataInput) (*DocumentDataUpdatePayload, error) {
	panic(fmt.Errorf("not implemented: UpdateDocumentData - updateDocumentData"))
}

// DeleteDocumentData is the resolver for the deleteDocumentData field.
func (r *mutationResolver) DeleteDocumentData(ctx context.Context, id string) (*DocumentDataDeletePayload, error) {
	panic(fmt.Errorf("not implemented: DeleteDocumentData - deleteDocumentData"))
}

// DocumentData is the resolver for the documentData field.
func (r *queryResolver) DocumentData(ctx context.Context, id string) (*generated.DocumentData, error) {
	panic(fmt.Errorf("not implemented: DocumentData - documentData"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
