package graphapi

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen

import (
	"context"
	"fmt"

	"github.com/datumforge/datum/internal/ent/generated"
)

// CreateFeature is the resolver for the createFeature field.
func (r *mutationResolver) CreateFeature(ctx context.Context, input generated.CreateFeatureInput) (*FeatureCreatePayload, error) {
	panic(fmt.Errorf("not implemented: CreateFeature - createFeature"))
}

// UpdateFeature is the resolver for the updateFeature field.
func (r *mutationResolver) UpdateFeature(ctx context.Context, id string, input generated.UpdateFeatureInput) (*FeatureUpdatePayload, error) {
	panic(fmt.Errorf("not implemented: UpdateFeature - updateFeature"))
}

// DeleteFeature is the resolver for the deleteFeature field.
func (r *mutationResolver) DeleteFeature(ctx context.Context, id string) (*FeatureDeletePayload, error) {
	panic(fmt.Errorf("not implemented: DeleteFeature - deleteFeature"))
}

// Feature is the resolver for the feature field.
func (r *queryResolver) Feature(ctx context.Context, id string) (*generated.Feature, error) {
	panic(fmt.Errorf("not implemented: Feature - feature"))
}
