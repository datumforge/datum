package graphapi

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.41

import (
	"context"
	"fmt"

	"github.com/datumforge/datum/internal/ent/generated"
)

// CreateGroupMembership is the resolver for the createGroupMembership field.
func (r *mutationResolver) CreateGroupMembership(ctx context.Context, input generated.CreateGroupMembershipInput) (*GroupMembershipCreatePayload, error) {
	panic(fmt.Errorf("not implemented: CreateGroupMembership - createGroupMembership"))
}

// UpdateGroupMembership is the resolver for the updateGroupMembership field.
func (r *mutationResolver) UpdateGroupMembership(ctx context.Context, id string, input generated.UpdateGroupMembershipInput) (*GroupMembershipUpdatePayload, error) {
	panic(fmt.Errorf("not implemented: UpdateGroupMembership - updateGroupMembership"))
}

// DeleteGroupMembership is the resolver for the deleteGroupMembership field.
func (r *mutationResolver) DeleteGroupMembership(ctx context.Context, id string) (*GroupMembershipDeletePayload, error) {
	panic(fmt.Errorf("not implemented: DeleteGroupMembership - deleteGroupMembership"))
}

// GroupMembership is the resolver for the groupMembership field.
func (r *queryResolver) GroupMembership(ctx context.Context, id string) (*generated.GroupMembership, error) {
	panic(fmt.Errorf("not implemented: GroupMembership - groupMembership"))
}
