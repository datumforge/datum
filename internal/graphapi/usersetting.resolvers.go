package api

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.40

import (
	"context"
	"fmt"

	"github.com/datumforge/datum/internal/ent/generated"
)

// CreateUserSetting is the resolver for the createUserSetting field.
func (r *mutationResolver) CreateUserSetting(ctx context.Context, input generated.CreateUserSettingInput) (*UserSettingCreatePayload, error) {
	panic(fmt.Errorf("not implemented: CreateUserSetting - createUserSetting"))
}

// UpdateUserSetting is the resolver for the updateUserSetting field.
func (r *mutationResolver) UpdateUserSetting(ctx context.Context, id string, input generated.UpdateUserSettingInput) (*UserSettingUpdatePayload, error) {
	panic(fmt.Errorf("not implemented: UpdateUserSetting - updateUserSetting"))
}

// DeleteUserSetting is the resolver for the DeleteUserSetting field.
func (r *mutationResolver) DeleteUserSetting(ctx context.Context, id string) (*UserSettingDeletePayload, error) {
	panic(fmt.Errorf("not implemented: DeleteUserSetting - DeleteUserSetting"))
}

// UserSetting is the resolver for the UserSetting field.
func (r *queryResolver) UserSetting(ctx context.Context, id string) (*generated.UserSetting, error) {
	panic(fmt.Errorf("not implemented: UserSetting - UserSetting"))
}
