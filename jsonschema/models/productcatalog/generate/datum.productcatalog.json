{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://github.com/datumforge/datum/jsonschema/models/productcatalog/config",
  "$defs": {
    "AggregationInfo": {
      "properties": {
        "aggregationCount": {
          "type": "integer",
          "description": "AggregationCount: The number of intervals to aggregate over. Example:\nIf aggregation_level is \"DAILY\" and aggregation_count is 14,\naggregation will be over 14 days."
        },
        "aggregationInterval": {
          "type": "string",
          "description": "Possible values:\n  \"AGGREGATION_INTERVAL_UNSPECIFIED\"\n  \"DAILY\"\n  \"MONTHLY\""
        },
        "aggregationLevel": {
          "type": "string",
          "description": "Possible values:\n  \"AGGREGATION_LEVEL_UNSPECIFIED\"\n  \"ACCOUNT\"\n  \"PROJECT\""
        }
      },
      "additionalProperties": false,
      "type": "object",
      "description": "AggregationInfo: Represents the aggregation level and interval for pricing of a single SKU"
    },
    "BehaviorConfig": {
      "properties": {
        "credit_amount": {
          "type": "integer",
          "description": "CreditAmount is amount of credits that are awarded/consumed when buying/using this feature"
        },
        "seat_limit": {
          "type": "integer",
          "description": "SeatLimit is the maximum number of seats that can be added to the subscription"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "Category": {
      "properties": {
        "resourceFamily": {
          "type": "string"
        },
        "resourceGroup": {
          "type": "string"
        },
        "serviceDisplayName": {
          "type": "string",
          "description": "ServiceDisplayName: The display name of the service this SKU belongs\nto."
        },
        "usageType": {
          "type": "string",
          "description": "UsageType: Represents how the SKU is consumed. Example: \"OnDemand\",\n\"Preemptible\", \"Commit1Mo\", \"Commit1Yr\" etc."
        }
      },
      "additionalProperties": false,
      "type": "object",
      "description": "Category: Represents the category hierarchy of a SKU"
    },
    "Feature": {
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "a machine friendly name for the feature"
        },
        "title": {
          "type": "string",
          "description": "a human friendly title for the feature"
        },
        "product_ids": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "products this feature belongs to, this is optional and can be empty\na product will have at least one feature with the same name as the product"
        },
        "metadata": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "description": "Feature are part of a product which allows for a more granular control on what is packed with the product."
    },
    "GeoTaxonomy": {
      "properties": {
        "regions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Regions: The list of regions associated with a sku. Empty for Global\nskus, which are associated with all regions"
        },
        "type": {
          "type": "string",
          "description": "Type: The type of Geo Taxonomy: GLOBAL, REGIONAL, or MULTI_REGIONAL.\n\nPossible values:\n  \"TYPE_UNSPECIFIED\" - The type is not specified.\n  \"GLOBAL\" - The sku is global in nature, e.g. a license sku. Global\nskus are available in all regions, and so have an empty region list.\n  \"REGIONAL\" - The sku is available in a specific region, e.g.\n\"us-west2\".\n  \"MULTI_REGIONAL\" - The sku is associated with multiple regions,\ne.g. \"us-west2\" and \"us-east1\"."
        }
      },
      "additionalProperties": false,
      "type": "object",
      "description": "GeoTaxonomy: Encapsulates the geographic taxonomy data for a sku"
    },
    "Money": {
      "properties": {
        "currencyCode": {
          "type": "string",
          "description": "CurrencyCode: The three-letter currency code defined in ISO 4217."
        },
        "nanos": {
          "type": "integer",
          "description": "Nanos: Number of nano (10^-9) units of the amount. The value must be\nbetween -999,999,999 and +999,999,999 inclusive. If `units` is\npositive, `nanos` must be positive or zero. If `units` is zero,\n`nanos` can be positive, zero, or negative. If `units` is negative,\n`nanos` must be negative or zero. For example $-1.75 is represented\nas `units`=-1 and `nanos`=-750,000,000."
        },
        "units": {
          "type": "integer",
          "description": "Units: The whole units of the amount. For example if `currencyCode`\nis \"USD\", then 1 unit is one US dollar."
        }
      },
      "additionalProperties": false,
      "type": "object",
      "description": "Money: Represents an amount of money with its currency type."
    },
    "Price": {
      "properties": {
        "id": {
          "type": "string"
        },
        "feature_id": {
          "type": "string"
        },
        "provider_id": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "a machine friendly name for the price"
        },
        "billing_scheme": {
          "type": "string",
          "description": "BillingScheme specifies the billing scheme for the price\nknown schemes are \"tiered\" and \"flat\". Default is \"flat\""
        },
        "currency": {
          "type": "string",
          "description": "Currency Three-letter ISO 4217 currency code in lower case\nlike \"usd\", \"eur\", \"gbp\"\nhttps://www.six-group.com/en/products-services/financial-information/data-standards.html"
        },
        "amount": {
          "type": "integer",
          "description": "Amount price in the minor currency unit\nMinor unit is the smallest unit of a currency, e.g. 1 dollar equals 100 cents (with 2 decimals)."
        },
        "usage_type": {
          "type": "string",
          "description": "UsageType specifies the usage type for the price\nknown types are \"licensed\" and \"metered\". Default is \"licensed\""
        },
        "metered_aggregate": {
          "type": "string",
          "description": "MeteredAggregate specifies the aggregation method for the price\nknown aggregations are \"sum\", \"last_during_period\", \"last_ever\" and \"max\". Default is \"sum\""
        },
        "interval": {
          "type": "string",
          "description": "Interval is the interval at which the plan is billed\ne.g. day, week, month, year"
        },
        "metadata": {
          "type": "string"
        },
        "tier_mode": {
          "type": "string",
          "description": "TierMode specifies the tier mode for the price\nknown modes are \"graduated\" and \"volume\". Default is \"graduated\"\nIn volume-based, the maximum quantity within a period determines the per-unit price\nIn graduated, pricing changes as the quantity increases to specific thresholds"
        },
        "tiers": {
          "$ref": "#/$defs/Tier",
          "description": "Tiers specifies the optional tiers for the price\nonly applicable when BillingScheme is \"tiered\""
        },
        "state": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "description": "Price is a product price and has a corresponding price in the billing engine when creating a price, the feature must already exist when subscribing to a plan, the price must already exist"
    },
    "PricingExpression": {
      "properties": {
        "baseUnit": {
          "type": "string",
          "description": "BaseUnit: The base unit for the SKU which is the unit used in usage\nexports. Example: \"By\""
        },
        "baseUnitConversionFactor": {
          "type": "number",
          "description": "BaseUnitConversionFactor: Conversion factor for converting from price\nper usage_unit to price per base_unit, and start_usage_amount to\nstart_usage_amount in base_unit. unit_price /\nbase_unit_conversion_factor = price per base_unit. start_usage_amount\n base_unit_conversion_factor = start_usage_amount in base_unit."
        },
        "baseUnitDescription": {
          "type": "string",
          "description": "BaseUnitDescription: The base unit in human readable form. Example:\n\"byte\"."
        },
        "displayQuantity": {
          "type": "number"
        },
        "usageUnit": {
          "type": "string",
          "description": "UsageUnit: The short hand for unit of usage this pricing is specified\nin. Example: usage_unit of \"GiBy\" means that usage is specified in\n\"Gibi Byte\"."
        },
        "usageUnitDescription": {
          "type": "string",
          "description": "UsageUnitDescription: The unit of usage in human readable form.\nExample: \"gibi byte\"."
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "PricingInfo": {
      "properties": {
        "aggregationInfo": {
          "$ref": "#/$defs/AggregationInfo",
          "description": "AggregationInfo: Aggregation Info. This can be left unspecified if\nthe pricing expression doesn't require aggregation."
        },
        "currencyConversionRate": {
          "type": "number"
        },
        "effectiveTime": {
          "type": "string"
        },
        "pricingExpression": {
          "$ref": "#/$defs/PricingExpression",
          "description": "PricingExpression: Expresses the pricing formula. See\n`PricingExpression` for an example."
        },
        "summary": {
          "type": "string",
          "description": "Summary: An optional human readable summary of the pricing\ninformation, has a maximum length of 256 characters."
        }
      },
      "additionalProperties": false,
      "type": "object",
      "description": "PricingInfo: Represents the pricing information for a SKU at a single point of time."
    },
    "Product": {
      "properties": {
        "id": {
          "type": "string"
        },
        "provider_id": {
          "type": "string",
          "description": "in case of stripe, provider id and id are same"
        },
        "PlanIDs": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "plans this feature belongs to, this is optional and can be empty"
        },
        "name": {
          "type": "string",
          "description": "a machine friendly name for the feature"
        },
        "title": {
          "type": "string",
          "description": "a human friendly title for the feature"
        },
        "description": {
          "type": "string"
        },
        "behavior": {
          "type": "string",
          "description": "Type is the type of the feature\nknown types are \"credits\" and \"per_seat\". Default is \"basic\""
        },
        "config": {
          "$ref": "#/$defs/BehaviorConfig",
          "description": "Config is the configuration for the behavior"
        },
        "prices": {
          "$ref": "#/$defs/Price",
          "description": "Prices for the product, return only, shouldn't be set while updating a product"
        },
        "features": {
          "$ref": "#/$defs/Feature",
          "description": "Features for the product, return only, shouldn't be set while updating a product"
        },
        "state": {
          "type": "string"
        },
        "metadata": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "description": "Product is an item being sold by the platform and has a corresponding reference in the billing engine"
    },
    "ProjectBillingInfo": {
      "properties": {
        "billingAccountName": {
          "type": "string"
        },
        "billingEnabled": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "description": "ProjectBillingInfo: Encapsulation of billing information"
    },
    "Sku": {
      "properties": {
        "category": {
          "$ref": "#/$defs/Category",
          "description": "Category: The category hierarchy of this SKU, purely for\norganizational purpose."
        },
        "description": {
          "type": "string",
          "description": "Description: A human readable description of the SKU, has a maximum\nlength of 256 characters."
        },
        "geoTaxonomy": {
          "$ref": "#/$defs/GeoTaxonomy",
          "description": "GeoTaxonomy: The geographic taxonomy for this sku."
        },
        "name": {
          "type": "string",
          "description": "Name: The resource name for the SKU. Example:\n\"services/DA34-426B-A397/skus/AA95-CD31-42FE\""
        },
        "pricingInfo": {
          "$ref": "#/$defs/PricingInfo",
          "description": "PricingInfo: A timeline of pricing info for this SKU in chronological\norder"
        },
        "serviceProviderName": {
          "type": "string",
          "description": "ServiceProviderName: Identifies the service provider"
        },
        "serviceRegions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "ServiceRegions: List of service regions this SKU is offered at.\nExample: \"asia-east1\""
        },
        "skuId": {
          "type": "string",
          "description": "SkuId: The identifier for the SKU. Example: \"AA95-CD31-42FE\""
        }
      },
      "additionalProperties": false,
      "type": "object",
      "description": "Sku: Encapsulates a single SKU"
    },
    "Tier": {
      "properties": {
        "flat_amount": {
          "type": "integer"
        },
        "up_to": {
          "type": "integer"
        }
      },
      "additionalProperties": false,
      "type": "object"
    }
  },
  "properties": {
    "product": {
      "$ref": "#/$defs/Product"
    },
    "behavior_config": {
      "$ref": "#/$defs/BehaviorConfig"
    },
    "price": {
      "$ref": "#/$defs/Price"
    },
    "tier": {
      "$ref": "#/$defs/Tier"
    },
    "sku": {
      "$ref": "#/$defs/Sku"
    },
    "aggregation_info": {
      "$ref": "#/$defs/AggregationInfo"
    },
    "category": {
      "$ref": "#/$defs/Category"
    },
    "geo_taxonomy": {
      "$ref": "#/$defs/GeoTaxonomy"
    },
    "money": {
      "$ref": "#/$defs/Money"
    },
    "pricing_expression": {
      "$ref": "#/$defs/PricingExpression"
    },
    "pricing_info": {
      "$ref": "#/$defs/PricingInfo"
    },
    "project_billing_info": {
      "$ref": "#/$defs/ProjectBillingInfo"
    }
  },
  "additionalProperties": false,
  "type": "object"
}