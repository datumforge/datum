components:
    responses:
        "400":
            content:
                application/json:
                    schema:
                        properties:
                            code:
                                type: integer
                            errors: {}
                            status:
                                type: string
                        required:
                            - code
                            - status
                        type: object
            description: invalid input, data invalid
        "403":
            content:
                application/json:
                    schema:
                        properties:
                            code:
                                type: integer
                            errors: {}
                            status:
                                type: string
                        required:
                            - code
                            - status
                        type: object
            description: insufficient permissions
        "404":
            content:
                application/json:
                    schema:
                        properties:
                            code:
                                type: integer
                            errors: {}
                            status:
                                type: string
                        required:
                            - code
                            - status
                        type: object
            description: resource not found
        "409":
            content:
                application/json:
                    schema:
                        properties:
                            code:
                                type: integer
                            errors: {}
                            status:
                                type: string
                        required:
                            - code
                            - status
                        type: object
            description: conflicting resources
        "500":
            content:
                application/json:
                    schema:
                        properties:
                            code:
                                type: integer
                            errors: {}
                            status:
                                type: string
                        required:
                            - code
                            - status
                        type: object
            description: unexpected error
        InternalError:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ErrorReply'
            description: Internal error, admins need to address the issue on the server
        InvalidRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ErrorReply'
            description: Invalid request, user should repair the request and try again
        NotFound:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ErrorReply'
            description: Not Found
        Unauthenticated:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ErrorReply'
            description: User must be logged in to perform request
        Unauthorized:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ErrorReply'
            description: User does not have permissions to perform request
    schemas:
        EmailVerificationToken:
            properties:
                created_at:
                    format: date-time
                    type: string
                created_by:
                    type: string
                deleted_at:
                    format: date-time
                    type: string
                deleted_by:
                    type: string
                email:
                    type: string
                id:
                    type: string
                owner:
                    $ref: '#/components/schemas/User'
                owner_id:
                    type: string
                secret:
                    format: byte
                    type: string
                token:
                    type: string
                ttl:
                    format: date-time
                    type: string
                updated_at:
                    format: date-time
                    type: string
                updated_by:
                    type: string
            required:
                - id
                - owner_id
                - token
                - email
                - owner
            type: object
        Entitlement:
            properties:
                cancelled:
                    type: boolean
                created_at:
                    format: date-time
                    type: string
                created_by:
                    type: string
                deleted_at:
                    format: date-time
                    type: string
                deleted_by:
                    type: string
                expires:
                    type: boolean
                expires_at:
                    format: date-time
                    type: string
                external_customer_id:
                    type: string
                external_subscription_id:
                    type: string
                id:
                    type: string
                owner:
                    $ref: '#/components/schemas/Organization'
                owner_id:
                    type: string
                tier:
                    default: FREE
                    enum:
                        - FREE
                        - PRO
                        - ENTERPRISE
                    type: string
                updated_at:
                    format: date-time
                    type: string
                updated_by:
                    type: string
            required:
                - id
                - owner_id
                - tier
                - expires
                - cancelled
                - owner
            type: object
        ErrorReply:
            properties:
                error:
                    description: The error message with more detail about why the request failed
                    type: string
                success:
                    description: False if there is an error, true otherwise
                    type: boolean
            required:
                - success
            type: object
        Group:
            properties:
                created_at:
                    format: date-time
                    type: string
                created_by:
                    type: string
                deleted_at:
                    format: date-time
                    type: string
                deleted_by:
                    type: string
                description:
                    type: string
                display_name:
                    type: string
                gravatar_logo_url:
                    type: string
                id:
                    type: string
                logo_url:
                    type: string
                members:
                    items:
                        $ref: '#/components/schemas/GroupMembership'
                    type: array
                name:
                    type: string
                owner:
                    $ref: '#/components/schemas/Organization'
                owner_id:
                    type: string
                setting:
                    $ref: '#/components/schemas/GroupSetting'
                updated_at:
                    format: date-time
                    type: string
                updated_by:
                    type: string
                users:
                    items:
                        $ref: '#/components/schemas/User'
                    type: array
            required:
                - id
                - owner_id
                - name
                - display_name
                - owner
                - setting
            type: object
        GroupMembership:
            properties:
                created_at:
                    format: date-time
                    type: string
                created_by:
                    type: string
                deleted_at:
                    format: date-time
                    type: string
                deleted_by:
                    type: string
                group:
                    $ref: '#/components/schemas/Group'
                group_id:
                    type: string
                id:
                    type: string
                role:
                    default: MEMBER
                    enum:
                        - ADMIN
                        - MEMBER
                    type: string
                updated_at:
                    format: date-time
                    type: string
                updated_by:
                    type: string
                user:
                    $ref: '#/components/schemas/User'
                user_id:
                    type: string
            required:
                - id
                - role
                - group_id
                - user_id
                - group
                - user
            type: object
        GroupSetting:
            properties:
                created_at:
                    format: date-time
                    type: string
                created_by:
                    type: string
                deleted_at:
                    format: date-time
                    type: string
                deleted_by:
                    type: string
                group:
                    $ref: '#/components/schemas/Group'
                group_id:
                    type: string
                id:
                    type: string
                join_policy:
                    default: INVITE_OR_APPLICATION
                    enum:
                        - OPEN
                        - INVITE_ONLY
                        - APPLICATION_ONLY
                        - INVITE_OR_APPLICATION
                    type: string
                sync_to_github:
                    type: boolean
                sync_to_slack:
                    type: boolean
                tags:
                    items:
                        type: string
                    type: array
                updated_at:
                    format: date-time
                    type: string
                updated_by:
                    type: string
                visibility:
                    default: PUBLIC
                    enum:
                        - PUBLIC
                        - PRIVATE
                    type: string
            required:
                - id
                - visibility
                - join_policy
            type: object
        Integration:
            properties:
                created_at:
                    format: date-time
                    type: string
                created_by:
                    type: string
                deleted_at:
                    format: date-time
                    type: string
                deleted_by:
                    type: string
                description:
                    type: string
                id:
                    type: string
                kind:
                    type: string
                name:
                    type: string
                owner:
                    $ref: '#/components/schemas/Organization'
                owner_id:
                    type: string
                secret_name:
                    type: string
                updated_at:
                    format: date-time
                    type: string
                updated_by:
                    type: string
            required:
                - id
                - owner_id
                - name
                - owner
            type: object
        Invite:
            properties:
                created_at:
                    format: date-time
                    type: string
                created_by:
                    type: string
                deleted_at:
                    format: date-time
                    type: string
                deleted_by:
                    type: string
                expires:
                    format: date-time
                    type: string
                id:
                    type: string
                owner:
                    $ref: '#/components/schemas/Organization'
                owner_id:
                    type: string
                recipient:
                    type: string
                requestor_id:
                    type: string
                role:
                    default: MEMBER
                    enum:
                        - ADMIN
                        - MEMBER
                        - OWNER
                    type: string
                send_attempts:
                    type: integer
                status:
                    default: INVITATION_SENT
                    enum:
                        - INVITATION_SENT
                        - APPROVAL_REQUIRED
                        - INVITATION_ACCEPTED
                        - INVITATION_EXPIRED
                    type: string
                updated_at:
                    format: date-time
                    type: string
                updated_by:
                    type: string
            required:
                - id
                - owner_id
                - recipient
                - status
                - role
                - send_attempts
                - requestor_id
                - owner
            type: object
        LoginReply:
            properties:
                access_token:
                    description: A JWT token signed by Datum that authenticates the user and contains claims that authorize them
                    type: string
                refresh_token:
                    description: A JWT token signed by Datum that can be used to obtain a new access/refresh token pair
                    type: string
            required:
                - access_token
                - refresh_token
            type: object
        OauthProvider:
            properties:
                auth_style:
                    format: int32
                    maximum: 255
                    minimum: 0
                    type: integer
                auth_url:
                    type: string
                client_id:
                    type: string
                client_secret:
                    type: string
                created_at:
                    format: date-time
                    type: string
                created_by:
                    type: string
                deleted_at:
                    format: date-time
                    type: string
                deleted_by:
                    type: string
                id:
                    type: string
                info_url:
                    type: string
                name:
                    type: string
                owner:
                    $ref: '#/components/schemas/Organization'
                redirect_url:
                    type: string
                scopes:
                    type: string
                token_url:
                    type: string
                updated_at:
                    format: date-time
                    type: string
                updated_by:
                    type: string
            required:
                - id
                - name
                - client_id
                - client_secret
                - redirect_url
                - scopes
                - auth_url
                - token_url
                - auth_style
                - info_url
            type: object
        OhAuthTooToken:
            properties:
                claims_email:
                    type: string
                claims_email_verified:
                    type: boolean
                claims_groups:
                    items:
                        type: string
                    type: array
                claims_preferred_username:
                    type: string
                claims_user_id:
                    type: string
                claims_username:
                    type: string
                client_id:
                    type: string
                connector_data:
                    items:
                        type: string
                    type: array
                connector_id:
                    type: string
                id:
                    type: string
                last_used:
                    format: date-time
                    type: string
                nonce:
                    type: string
                scopes:
                    items:
                        type: string
                    type: array
            required:
                - id
                - client_id
                - nonce
                - claims_user_id
                - claims_username
                - claims_email
                - claims_email_verified
                - claims_preferred_username
                - connector_id
                - last_used
            type: object
        OrgMembership:
            properties:
                created_at:
                    format: date-time
                    type: string
                created_by:
                    type: string
                deleted_at:
                    format: date-time
                    type: string
                deleted_by:
                    type: string
                id:
                    type: string
                organization:
                    $ref: '#/components/schemas/Organization'
                organization_id:
                    type: string
                role:
                    default: MEMBER
                    enum:
                        - ADMIN
                        - MEMBER
                        - OWNER
                    type: string
                updated_at:
                    format: date-time
                    type: string
                updated_by:
                    type: string
                user:
                    $ref: '#/components/schemas/User'
                user_id:
                    type: string
            required:
                - id
                - role
                - organization_id
                - user_id
                - organization
                - user
            type: object
        Organization:
            properties:
                avatar_remote_url:
                    type: string
                children:
                    items:
                        $ref: '#/components/schemas/Organization'
                    type: array
                created_at:
                    format: date-time
                    type: string
                created_by:
                    type: string
                deleted_at:
                    format: date-time
                    type: string
                deleted_by:
                    type: string
                description:
                    type: string
                display_name:
                    type: string
                entitlements:
                    items:
                        $ref: '#/components/schemas/Entitlement'
                    type: array
                groups:
                    items:
                        $ref: '#/components/schemas/Group'
                    type: array
                id:
                    type: string
                integrations:
                    items:
                        $ref: '#/components/schemas/Integration'
                    type: array
                invites:
                    items:
                        $ref: '#/components/schemas/Invite'
                    type: array
                members:
                    items:
                        $ref: '#/components/schemas/OrgMembership'
                    type: array
                name:
                    type: string
                oauthprovider:
                    items:
                        $ref: '#/components/schemas/OauthProvider'
                    type: array
                parent:
                    $ref: '#/components/schemas/Organization'
                parent_organization_id:
                    type: string
                personal_access_tokens:
                    items:
                        $ref: '#/components/schemas/PersonalAccessToken'
                    type: array
                personal_org:
                    type: boolean
                setting:
                    $ref: '#/components/schemas/OrganizationSetting'
                subscribers:
                    items:
                        $ref: '#/components/schemas/Subscriber'
                    type: array
                updated_at:
                    format: date-time
                    type: string
                updated_by:
                    type: string
                users:
                    items:
                        $ref: '#/components/schemas/User'
                    type: array
            required:
                - id
                - name
                - display_name
            type: object
        OrganizationSetting:
            properties:
                billing_address:
                    type: string
                billing_contact:
                    type: string
                billing_email:
                    type: string
                billing_phone:
                    type: string
                created_at:
                    format: date-time
                    type: string
                created_by:
                    type: string
                deleted_at:
                    format: date-time
                    type: string
                deleted_by:
                    type: string
                domains:
                    items:
                        type: string
                    type: array
                id:
                    type: string
                organization:
                    $ref: '#/components/schemas/Organization'
                organization_id:
                    type: string
                tags:
                    items:
                        type: string
                    type: array
                tax_identifier:
                    type: string
                updated_at:
                    format: date-time
                    type: string
                updated_by:
                    type: string
            required:
                - id
            type: object
        PasswordResetToken:
            properties:
                created_at:
                    format: date-time
                    type: string
                created_by:
                    type: string
                deleted_at:
                    format: date-time
                    type: string
                deleted_by:
                    type: string
                email:
                    type: string
                id:
                    type: string
                owner:
                    $ref: '#/components/schemas/User'
                owner_id:
                    type: string
                secret:
                    format: byte
                    type: string
                token:
                    type: string
                ttl:
                    format: date-time
                    type: string
                updated_at:
                    format: date-time
                    type: string
                updated_by:
                    type: string
            required:
                - id
                - owner_id
                - token
                - email
                - owner
            type: object
        PersonalAccessToken:
            properties:
                created_at:
                    format: date-time
                    type: string
                created_by:
                    type: string
                deleted_at:
                    format: date-time
                    type: string
                deleted_by:
                    type: string
                description:
                    type: string
                expires_at:
                    format: date-time
                    type: string
                id:
                    type: string
                last_used_at:
                    format: date-time
                    type: string
                name:
                    type: string
                organizations:
                    items:
                        $ref: '#/components/schemas/Organization'
                    type: array
                owner:
                    $ref: '#/components/schemas/User'
                owner_id:
                    type: string
                scopes:
                    items:
                        type: string
                    type: array
                token:
                    type: string
                updated_at:
                    format: date-time
                    type: string
                updated_by:
                    type: string
            required:
                - id
                - owner_id
                - name
                - token
                - owner
            type: object
        Subscriber:
            properties:
                active:
                    type: boolean
                created_at:
                    format: date-time
                    type: string
                created_by:
                    type: string
                deleted_at:
                    format: date-time
                    type: string
                deleted_by:
                    type: string
                email:
                    type: string
                id:
                    type: string
                owner:
                    $ref: '#/components/schemas/Organization'
                owner_id:
                    type: string
                phone_number:
                    type: string
                secret:
                    format: byte
                    type: string
                token:
                    type: string
                ttl:
                    format: date-time
                    type: string
                updated_at:
                    format: date-time
                    type: string
                updated_by:
                    type: string
                verified_email:
                    type: boolean
                verified_phone:
                    type: boolean
            required:
                - id
                - email
                - verified_email
                - verified_phone
                - active
                - token
            type: object
        TFASettings:
            properties:
                created_at:
                    format: date-time
                    type: string
                created_by:
                    type: string
                deleted_at:
                    format: date-time
                    type: string
                deleted_by:
                    type: string
                id:
                    type: string
                owner:
                    $ref: '#/components/schemas/User'
                owner_id:
                    type: string
                totp_allowed:
                    type: boolean
                updated_at:
                    format: date-time
                    type: string
                updated_by:
                    type: string
                verified:
                    type: boolean
            required:
                - id
                - verified
            type: object
        User:
            properties:
                auth_provider:
                    default: CREDENTIALS
                    enum:
                        - CREDENTIALS
                        - GOOGLE
                        - GITHUB
                        - WEBAUTHN
                    type: string
                avatar_local_file:
                    type: string
                avatar_remote_url:
                    type: string
                avatar_updated_at:
                    format: date-time
                    type: string
                created_at:
                    format: date-time
                    type: string
                created_by:
                    type: string
                deleted_at:
                    format: date-time
                    type: string
                deleted_by:
                    type: string
                display_name:
                    type: string
                email:
                    type: string
                email_verification_tokens:
                    items:
                        $ref: '#/components/schemas/EmailVerificationToken'
                    type: array
                first_name:
                    type: string
                group_memberships:
                    items:
                        $ref: '#/components/schemas/GroupMembership'
                    type: array
                groups:
                    items:
                        $ref: '#/components/schemas/Group'
                    type: array
                id:
                    type: string
                last_name:
                    type: string
                last_seen:
                    format: date-time
                    type: string
                org_memberships:
                    items:
                        $ref: '#/components/schemas/OrgMembership'
                    type: array
                organizations:
                    items:
                        $ref: '#/components/schemas/Organization'
                    type: array
                password_reset_tokens:
                    items:
                        $ref: '#/components/schemas/PasswordResetToken'
                    type: array
                personal_access_tokens:
                    items:
                        $ref: '#/components/schemas/PersonalAccessToken'
                    type: array
                setting:
                    $ref: '#/components/schemas/UserSetting'
                tfa_settings:
                    items:
                        $ref: '#/components/schemas/TFASettings'
                    type: array
                updated_at:
                    format: date-time
                    type: string
                updated_by:
                    type: string
                webauthn:
                    items:
                        $ref: '#/components/schemas/Webauthn'
                    type: array
            required:
                - id
                - email
                - first_name
                - last_name
                - display_name
                - auth_provider
                - setting
            type: object
        UserSetting:
            properties:
                created_at:
                    format: date-time
                    type: string
                created_by:
                    type: string
                default_org:
                    $ref: '#/components/schemas/Organization'
                deleted_at:
                    format: date-time
                    type: string
                deleted_by:
                    type: string
                email_confirmed:
                    type: boolean
                id:
                    type: string
                is_tfa_enabled:
                    type: boolean
                is_webauthn_allowed:
                    type: boolean
                locked:
                    type: boolean
                silenced_at:
                    format: date-time
                    type: string
                status:
                    default: ACTIVE
                    enum:
                        - ACTIVE
                        - INACTIVE
                        - DEACTIVATED
                        - SUSPENDED
                    type: string
                suspended_at:
                    format: date-time
                    type: string
                tags:
                    items:
                        type: string
                    type: array
                updated_at:
                    format: date-time
                    type: string
                updated_by:
                    type: string
                user:
                    $ref: '#/components/schemas/User'
                user_id:
                    type: string
            required:
                - id
                - locked
                - status
                - email_confirmed
                - tags
            type: object
        Webauthn:
            properties:
                aaguid:
                    format: byte
                    type: string
                attestation_type:
                    type: string
                backup_eligible:
                    type: boolean
                backup_state:
                    type: boolean
                created_at:
                    format: date-time
                    type: string
                created_by:
                    type: string
                credential_id:
                    format: byte
                    type: string
                id:
                    type: string
                owner:
                    $ref: '#/components/schemas/User'
                owner_id:
                    type: string
                public_key:
                    format: byte
                    type: string
                sign_count:
                    format: int32
                    type: integer
                transports:
                    items:
                        type: string
                    type: array
                updated_at:
                    format: date-time
                    type: string
                updated_by:
                    type: string
                user_present:
                    type: boolean
                user_verified:
                    type: boolean
            required:
                - id
                - owner_id
                - aaguid
                - sign_count
                - transports
                - backup_eligible
                - backup_state
                - user_present
                - user_verified
                - owner
            type: object
info:
    contact:
        email: support@datum.net
        name: Datum Support
        url: https://datum.net/support
    description: Programmatic interfaces for interacting with Datum Services
    license:
        name: Apache 2.0
        url: https://www.apache.org/licenses/LICENSE-2.0
    termsOfService: https://datum.net/tos
    title: Datum OpenAPI 3.1.0 Specifications
    version: 1.0.1
openapi: 3.1.0
paths:
    /entitlements:
        get:
            description: List Entitlements.
            operationId: listEntitlement
            parameters:
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    minimum: 1
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    maximum: 255
                    minimum: 1
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/Entitlement'
                                type: array
                    description: result Entitlement list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List Entitlements
            tags:
                - Entitlement
        post:
            description: Creates a new Entitlement and persists it to storage.
            operationId: createEntitlement
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                cancelled:
                                    type: boolean
                                expires:
                                    type: boolean
                                expires_at:
                                    format: date-time
                                    type: string
                                external_customer_id:
                                    type: string
                                external_subscription_id:
                                    type: string
                                owner:
                                    type: string
                                owner_id:
                                    type: string
                                tier:
                                    default: FREE
                                    enum:
                                        - FREE
                                        - PRO
                                        - ENTERPRISE
                                    type: string
                            required:
                                - owner_id
                                - tier
                                - expires
                                - cancelled
                                - owner
                            type: object
                description: Entitlement to create
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Entitlement'
                    description: Entitlement created
                "400":
                    $ref: '#/components/responses/400'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Create a new Entitlement
            tags:
                - Entitlement
    /entitlements/{id}:
        delete:
            description: Deletes the Entitlement with the requested ID.
            operationId: deleteEntitlement
            parameters:
                - description: ID of the Entitlement
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: Entitlement with requested ID was deleted
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Deletes a Entitlement by ID
            tags:
                - Entitlement
        get:
            description: Finds the Entitlement with the requested ID and returns it.
            operationId: readEntitlement
            parameters:
                - description: ID of the Entitlement
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Entitlement'
                    description: Entitlement with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find a Entitlement by ID
            tags:
                - Entitlement
        patch:
            description: Updates a Entitlement and persists changes to storage.
            operationId: updateEntitlement
            parameters:
                - description: ID of the Entitlement
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                cancelled:
                                    type: boolean
                                expires:
                                    type: boolean
                                expires_at:
                                    format: date-time
                                    type: string
                                external_customer_id:
                                    type: string
                                external_subscription_id:
                                    type: string
                                owner:
                                    type: string
                                owner_id:
                                    type: string
                                tier:
                                    default: FREE
                                    enum:
                                        - FREE
                                        - PRO
                                        - ENTERPRISE
                                    type: string
                            type: object
                description: Entitlement properties to update
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Entitlement'
                    description: Entitlement updated
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Updates a Entitlement
            tags:
                - Entitlement
    /entitlements/{id}/owner:
        get:
            description: Find the attached Organization of the Entitlement with the given ID
            operationId: readEntitlementOwner
            parameters:
                - description: ID of the Entitlement
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Organization'
                    description: Organization attached to Entitlement with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find the attached Organization
            tags:
                - Entitlement
    /forgot-password:
        post:
            description: Ability for a user to trigger a password re-set flow
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                email:
                                    type: string
                            required:
                                - email
                            type: object
                required: true
            responses:
                "204":
                    description: Password reset received; no content is returned
                "400":
                    $ref: '#/components/responses/InvalidRequest'
                "500":
                    $ref: '#/components/responses/InternalError'
            security:
                - {}
            summary: Request a password reset
            tags:
                - passwords
    /group-memberships:
        get:
            description: List GroupMemberships.
            operationId: listGroupMembership
            parameters:
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    minimum: 1
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    maximum: 255
                    minimum: 1
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/GroupMembership'
                                type: array
                    description: result GroupMembership list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List GroupMemberships
            tags:
                - GroupMembership
        post:
            description: Creates a new GroupMembership and persists it to storage.
            operationId: createGroupMembership
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                group:
                                    type: string
                                group_id:
                                    type: string
                                role:
                                    default: MEMBER
                                    enum:
                                        - ADMIN
                                        - MEMBER
                                    type: string
                                user:
                                    type: string
                                user_id:
                                    type: string
                            required:
                                - role
                                - group_id
                                - user_id
                                - group
                                - user
                            type: object
                description: GroupMembership to create
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GroupMembership'
                    description: GroupMembership created
                "400":
                    $ref: '#/components/responses/400'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Create a new GroupMembership
            tags:
                - GroupMembership
    /group-memberships/{id}:
        delete:
            description: Deletes the GroupMembership with the requested ID.
            operationId: deleteGroupMembership
            parameters:
                - description: ID of the GroupMembership
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: GroupMembership with requested ID was deleted
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Deletes a GroupMembership by ID
            tags:
                - GroupMembership
        get:
            description: Finds the GroupMembership with the requested ID and returns it.
            operationId: readGroupMembership
            parameters:
                - description: ID of the GroupMembership
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GroupMembership'
                    description: GroupMembership with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find a GroupMembership by ID
            tags:
                - GroupMembership
        patch:
            description: Updates a GroupMembership and persists changes to storage.
            operationId: updateGroupMembership
            parameters:
                - description: ID of the GroupMembership
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                group:
                                    type: string
                                role:
                                    default: MEMBER
                                    enum:
                                        - ADMIN
                                        - MEMBER
                                    type: string
                                user:
                                    type: string
                            type: object
                description: GroupMembership properties to update
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GroupMembership'
                    description: GroupMembership updated
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Updates a GroupMembership
            tags:
                - GroupMembership
    /group-memberships/{id}/group:
        get:
            description: Find the attached Group of the GroupMembership with the given ID
            operationId: readGroupMembershipGroup
            parameters:
                - description: ID of the GroupMembership
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Group'
                    description: Group attached to GroupMembership with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find the attached Group
            tags:
                - GroupMembership
    /group-memberships/{id}/user:
        get:
            description: Find the attached User of the GroupMembership with the given ID
            operationId: readGroupMembershipUser
            parameters:
                - description: ID of the GroupMembership
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                    description: User attached to GroupMembership with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find the attached User
            tags:
                - GroupMembership
    /group-settings:
        get:
            description: List GroupSettings.
            operationId: listGroupSetting
            parameters:
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    minimum: 1
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    maximum: 255
                    minimum: 1
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/GroupSetting'
                                type: array
                    description: result GroupSetting list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List GroupSettings
            tags:
                - GroupSetting
        post:
            description: Creates a new GroupSetting and persists it to storage.
            operationId: createGroupSetting
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                group:
                                    type: string
                                group_id:
                                    type: string
                                join_policy:
                                    default: INVITE_OR_APPLICATION
                                    enum:
                                        - OPEN
                                        - INVITE_ONLY
                                        - APPLICATION_ONLY
                                        - INVITE_OR_APPLICATION
                                    type: string
                                sync_to_github:
                                    type: boolean
                                sync_to_slack:
                                    type: boolean
                                tags:
                                    items:
                                        type: string
                                    type: array
                                visibility:
                                    default: PUBLIC
                                    enum:
                                        - PUBLIC
                                        - PRIVATE
                                    type: string
                            required:
                                - visibility
                                - join_policy
                            type: object
                description: GroupSetting to create
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GroupSetting'
                    description: GroupSetting created
                "400":
                    $ref: '#/components/responses/400'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Create a new GroupSetting
            tags:
                - GroupSetting
    /group-settings/{id}:
        delete:
            description: Deletes the GroupSetting with the requested ID.
            operationId: deleteGroupSetting
            parameters:
                - description: ID of the GroupSetting
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: GroupSetting with requested ID was deleted
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Deletes a GroupSetting by ID
            tags:
                - GroupSetting
        get:
            description: Finds the GroupSetting with the requested ID and returns it.
            operationId: readGroupSetting
            parameters:
                - description: ID of the GroupSetting
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GroupSetting'
                    description: GroupSetting with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find a GroupSetting by ID
            tags:
                - GroupSetting
        patch:
            description: Updates a GroupSetting and persists changes to storage.
            operationId: updateGroupSetting
            parameters:
                - description: ID of the GroupSetting
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                group:
                                    type: string
                                group_id:
                                    type: string
                                join_policy:
                                    default: INVITE_OR_APPLICATION
                                    enum:
                                        - OPEN
                                        - INVITE_ONLY
                                        - APPLICATION_ONLY
                                        - INVITE_OR_APPLICATION
                                    type: string
                                sync_to_github:
                                    type: boolean
                                sync_to_slack:
                                    type: boolean
                                tags:
                                    items:
                                        type: string
                                    type: array
                                visibility:
                                    default: PUBLIC
                                    enum:
                                        - PUBLIC
                                        - PRIVATE
                                    type: string
                            type: object
                description: GroupSetting properties to update
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GroupSetting'
                    description: GroupSetting updated
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Updates a GroupSetting
            tags:
                - GroupSetting
    /group-settings/{id}/group:
        get:
            description: Find the attached Group of the GroupSetting with the given ID
            operationId: readGroupSettingGroup
            parameters:
                - description: ID of the GroupSetting
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Group'
                    description: Group attached to GroupSetting with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find the attached Group
            tags:
                - GroupSetting
    /groups:
        get:
            description: List Groups.
            operationId: listGroup
            parameters:
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    minimum: 1
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    maximum: 255
                    minimum: 1
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/Group'
                                type: array
                    description: result Group list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List Groups
            tags:
                - Group
        post:
            description: Creates a new Group and persists it to storage.
            operationId: createGroup
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                description:
                                    type: string
                                display_name:
                                    type: string
                                gravatar_logo_url:
                                    type: string
                                logo_url:
                                    type: string
                                members:
                                    items:
                                        type: string
                                    type: array
                                name:
                                    type: string
                                owner:
                                    type: string
                                owner_id:
                                    type: string
                                setting:
                                    type: string
                                users:
                                    items:
                                        type: string
                                    type: array
                            required:
                                - owner_id
                                - name
                                - display_name
                                - owner
                                - setting
                            type: object
                description: Group to create
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Group'
                    description: Group created
                "400":
                    $ref: '#/components/responses/400'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Create a new Group
            tags:
                - Group
    /groups/{id}:
        delete:
            description: Deletes the Group with the requested ID.
            operationId: deleteGroup
            parameters:
                - description: ID of the Group
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: Group with requested ID was deleted
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Deletes a Group by ID
            tags:
                - Group
        get:
            description: Finds the Group with the requested ID and returns it.
            operationId: readGroup
            parameters:
                - description: ID of the Group
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Group'
                    description: Group with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find a Group by ID
            tags:
                - Group
        patch:
            description: Updates a Group and persists changes to storage.
            operationId: updateGroup
            parameters:
                - description: ID of the Group
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                description:
                                    type: string
                                display_name:
                                    type: string
                                gravatar_logo_url:
                                    type: string
                                logo_url:
                                    type: string
                                members:
                                    items:
                                        type: string
                                    type: array
                                name:
                                    type: string
                                owner:
                                    type: string
                                owner_id:
                                    type: string
                                setting:
                                    type: string
                                users:
                                    items:
                                        type: string
                                    type: array
                            type: object
                description: Group properties to update
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Group'
                    description: Group updated
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Updates a Group
            tags:
                - Group
    /groups/{id}/members:
        get:
            description: List attached Members.
            operationId: listGroupMembers
            parameters:
                - description: ID of the Group
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/GroupMembership'
                                type: array
                    description: result Groups list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List attached Members
            tags:
                - Group
    /groups/{id}/owner:
        get:
            description: Find the attached Organization of the Group with the given ID
            operationId: readGroupOwner
            parameters:
                - description: ID of the Group
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Organization'
                    description: Organization attached to Group with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find the attached Organization
            tags:
                - Group
    /groups/{id}/setting:
        get:
            description: Find the attached GroupSetting of the Group with the given ID
            operationId: readGroupSetting
            parameters:
                - description: ID of the Group
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GroupSetting'
                    description: GroupSetting attached to Group with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find the attached GroupSetting
            tags:
                - Group
    /groups/{id}/users:
        get:
            description: List attached Users.
            operationId: listGroupUsers
            parameters:
                - description: ID of the Group
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/User'
                                type: array
                    description: result Groups list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List attached Users
            tags:
                - Group
    /integrations:
        get:
            description: List Integrations.
            operationId: listIntegration
            parameters:
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    minimum: 1
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    maximum: 255
                    minimum: 1
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/Integration'
                                type: array
                    description: result Integration list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List Integrations
            tags:
                - Integration
        post:
            description: Creates a new Integration and persists it to storage.
            operationId: createIntegration
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                description:
                                    type: string
                                kind:
                                    type: string
                                name:
                                    type: string
                                owner:
                                    type: string
                                owner_id:
                                    type: string
                                secret_name:
                                    type: string
                            required:
                                - owner_id
                                - name
                                - owner
                            type: object
                description: Integration to create
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Integration'
                    description: Integration created
                "400":
                    $ref: '#/components/responses/400'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Create a new Integration
            tags:
                - Integration
    /integrations/{id}:
        delete:
            description: Deletes the Integration with the requested ID.
            operationId: deleteIntegration
            parameters:
                - description: ID of the Integration
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: Integration with requested ID was deleted
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Deletes a Integration by ID
            tags:
                - Integration
        get:
            description: Finds the Integration with the requested ID and returns it.
            operationId: readIntegration
            parameters:
                - description: ID of the Integration
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Integration'
                    description: Integration with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find a Integration by ID
            tags:
                - Integration
        patch:
            description: Updates a Integration and persists changes to storage.
            operationId: updateIntegration
            parameters:
                - description: ID of the Integration
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                description:
                                    type: string
                                kind:
                                    type: string
                                name:
                                    type: string
                                owner:
                                    type: string
                                owner_id:
                                    type: string
                            type: object
                description: Integration properties to update
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Integration'
                    description: Integration updated
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Updates a Integration
            tags:
                - Integration
    /integrations/{id}/owner:
        get:
            description: Find the attached Organization of the Integration with the given ID
            operationId: readIntegrationOwner
            parameters:
                - description: ID of the Integration
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Organization'
                    description: Organization attached to Integration with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find the attached Organization
            tags:
                - Integration
    /invite:
        post:
            description: Creates an invitation token and sends that token to a user via email to complete the Datum registration process and join the organization the invitation was generated from
            parameters:
                - description: datum generated token
                  in: query
                  name: token
                  required: true
                  schema:
                    format: string
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                first-name:
                                    type: string
                                last-name:
                                    type: string
                                password:
                                    type: string
                            required:
                                - first-name
                                - last-name
                                - password
                            type: object
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                properties:
                                    email:
                                        description: The email of the user joined to the requesting orgnization
                                        type: string
                                    joined_org_id:
                                        description: The Datum generated organization ID of the requesting organization the user was joined to
                                        type: string
                                    role:
                                        description: The users role upon joining the requesting organization
                                        type: string
                                    user_id:
                                        description: The Datum generated user ID of the user joined to the requesting organization
                                        type: string
                                required:
                                    - email
                                    - user_id
                                    - joined_org_id
                                    - role
                                type: object
                    description: User and organization created successfully. The details of the new user are returned
                "400":
                    $ref: '#/components/responses/InvalidRequest'
                "401":
                    $ref: '#/components/responses/Unauthorized'
                "500":
                    $ref: '#/components/responses/InternalError'
            security:
                - {}
            summary: Invite a user to Datum
            tags:
                - invitations
    /invites:
        get:
            description: List Invites.
            operationId: listInvite
            parameters:
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    minimum: 1
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    maximum: 255
                    minimum: 1
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/Invite'
                                type: array
                    description: result Invite list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List Invites
            tags:
                - Invite
        post:
            description: Creates a new Invite and persists it to storage.
            operationId: createInvite
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                owner:
                                    type: string
                                owner_id:
                                    type: string
                                recipient:
                                    type: string
                                role:
                                    default: MEMBER
                                    enum:
                                        - ADMIN
                                        - MEMBER
                                        - OWNER
                                    type: string
                            required:
                                - owner_id
                                - recipient
                                - role
                                - owner
                            type: object
                description: Invite to create
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Invite'
                    description: Invite created
                "400":
                    $ref: '#/components/responses/400'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Create a new Invite
            tags:
                - Invite
    /invites/{id}:
        delete:
            description: Deletes the Invite with the requested ID.
            operationId: deleteInvite
            parameters:
                - description: ID of the Invite
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: Invite with requested ID was deleted
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Deletes a Invite by ID
            tags:
                - Invite
        get:
            description: Finds the Invite with the requested ID and returns it.
            operationId: readInvite
            parameters:
                - description: ID of the Invite
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Invite'
                    description: Invite with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find a Invite by ID
            tags:
                - Invite
        patch:
            description: Updates a Invite and persists changes to storage.
            operationId: updateInvite
            parameters:
                - description: ID of the Invite
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                owner:
                                    type: string
                                owner_id:
                                    type: string
                                recipient:
                                    type: string
                                role:
                                    default: MEMBER
                                    enum:
                                        - ADMIN
                                        - MEMBER
                                        - OWNER
                                    type: string
                            type: object
                description: Invite properties to update
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Invite'
                    description: Invite updated
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Updates a Invite
            tags:
                - Invite
    /invites/{id}/owner:
        get:
            description: Find the attached Organization of the Invite with the given ID
            operationId: readInviteOwner
            parameters:
                - description: ID of the Invite
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Organization'
                    description: Organization attached to Invite with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find the attached Organization
            tags:
                - Invite
    /livez:
        get:
            description: A heartbeat check to confirm the server is up or down
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    status:
                                        type: string
                                type: object
                    description: An up / down status of the server is returned
            security:
                - {}
            summary: Server liveness check response
    /login:
        post:
            description: |-
                User login and authentication via email and password. The user can optionally supply an OrgID to log into a specific organization that they belong to. An _access token_ and a _refresh token_ are returned that contain the authorization claims of the user.
                The access token should be added to the Authorize header as a Bearer token for all requests that require authentication. The refresh token can be used to obtain a new access token after it expires (extending the user's session) without requiring the user to supply their username and password again.
                The access token contains claims that help identify the user (e.g. name, email, picture) as well as the ID of the organization the user is currently logged into. A user can only be logged into one organization at a time. Additionally the claims contain the permissions the user has defined by the user's role. The subject of the claims is the ID of the user.
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                password:
                                    type: string
                                username:
                                    type: string
                            required:
                                - username
                                - password
                            type: object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginReply'
                    description: Successful authentication
                "400":
                    $ref: '#/components/responses/InvalidRequest'
                "500":
                    $ref: '#/components/responses/InternalError'
            security:
                - {}
            summary: Login User
    /oauth-providers:
        get:
            description: List OauthProviders.
            operationId: listOauthProvider
            parameters:
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    minimum: 1
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    maximum: 255
                    minimum: 1
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/OauthProvider'
                                type: array
                    description: result OauthProvider list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List OauthProviders
            tags:
                - OauthProvider
        post:
            description: Creates a new OauthProvider and persists it to storage.
            operationId: createOauthProvider
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                auth_style:
                                    format: int32
                                    maximum: 255
                                    minimum: 0
                                    type: integer
                                auth_url:
                                    type: string
                                client_id:
                                    type: string
                                client_secret:
                                    type: string
                                info_url:
                                    type: string
                                name:
                                    type: string
                                owner:
                                    type: string
                                redirect_url:
                                    type: string
                                scopes:
                                    type: string
                                token_url:
                                    type: string
                            required:
                                - name
                                - client_id
                                - client_secret
                                - redirect_url
                                - scopes
                                - auth_url
                                - token_url
                                - auth_style
                                - info_url
                            type: object
                description: OauthProvider to create
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OauthProvider'
                    description: OauthProvider created
                "400":
                    $ref: '#/components/responses/400'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Create a new OauthProvider
            tags:
                - OauthProvider
    /oauth-providers/{id}:
        delete:
            description: Deletes the OauthProvider with the requested ID.
            operationId: deleteOauthProvider
            parameters:
                - description: ID of the OauthProvider
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: OauthProvider with requested ID was deleted
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Deletes a OauthProvider by ID
            tags:
                - OauthProvider
        get:
            description: Finds the OauthProvider with the requested ID and returns it.
            operationId: readOauthProvider
            parameters:
                - description: ID of the OauthProvider
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OauthProvider'
                    description: OauthProvider with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find a OauthProvider by ID
            tags:
                - OauthProvider
        patch:
            description: Updates a OauthProvider and persists changes to storage.
            operationId: updateOauthProvider
            parameters:
                - description: ID of the OauthProvider
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                auth_style:
                                    format: int32
                                    maximum: 255
                                    minimum: 0
                                    type: integer
                                auth_url:
                                    type: string
                                client_id:
                                    type: string
                                client_secret:
                                    type: string
                                info_url:
                                    type: string
                                name:
                                    type: string
                                owner:
                                    type: string
                                redirect_url:
                                    type: string
                                scopes:
                                    type: string
                                token_url:
                                    type: string
                            type: object
                description: OauthProvider properties to update
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OauthProvider'
                    description: OauthProvider updated
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Updates a OauthProvider
            tags:
                - OauthProvider
    /oauth-providers/{id}/owner:
        get:
            description: Find the attached Organization of the OauthProvider with the given ID
            operationId: readOauthProviderOwner
            parameters:
                - description: ID of the OauthProvider
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Organization'
                    description: Organization attached to OauthProvider with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find the attached Organization
            tags:
                - OauthProvider
    /oh-auth-too-tokens:
        get:
            description: List OhAuthTooTokens.
            operationId: listOhAuthTooToken
            parameters:
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    minimum: 1
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    maximum: 255
                    minimum: 1
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/OhAuthTooToken'
                                type: array
                    description: result OhAuthTooToken list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List OhAuthTooTokens
            tags:
                - OhAuthTooToken
        post:
            description: Creates a new OhAuthTooToken and persists it to storage.
            operationId: createOhAuthTooToken
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                claims_email:
                                    type: string
                                claims_email_verified:
                                    type: boolean
                                claims_groups:
                                    items:
                                        type: string
                                    type: array
                                claims_preferred_username:
                                    type: string
                                claims_user_id:
                                    type: string
                                claims_username:
                                    type: string
                                client_id:
                                    type: string
                                connector_data:
                                    items:
                                        type: string
                                    type: array
                                connector_id:
                                    type: string
                                last_used:
                                    format: date-time
                                    type: string
                                nonce:
                                    type: string
                                scopes:
                                    items:
                                        type: string
                                    type: array
                            required:
                                - client_id
                                - nonce
                                - claims_user_id
                                - claims_username
                                - claims_email
                                - claims_email_verified
                                - claims_preferred_username
                                - connector_id
                                - last_used
                            type: object
                description: OhAuthTooToken to create
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OhAuthTooToken'
                    description: OhAuthTooToken created
                "400":
                    $ref: '#/components/responses/400'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Create a new OhAuthTooToken
            tags:
                - OhAuthTooToken
    /oh-auth-too-tokens/{id}:
        delete:
            description: Deletes the OhAuthTooToken with the requested ID.
            operationId: deleteOhAuthTooToken
            parameters:
                - description: ID of the OhAuthTooToken
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: OhAuthTooToken with requested ID was deleted
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Deletes a OhAuthTooToken by ID
            tags:
                - OhAuthTooToken
        get:
            description: Finds the OhAuthTooToken with the requested ID and returns it.
            operationId: readOhAuthTooToken
            parameters:
                - description: ID of the OhAuthTooToken
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OhAuthTooToken'
                    description: OhAuthTooToken with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find a OhAuthTooToken by ID
            tags:
                - OhAuthTooToken
        patch:
            description: Updates a OhAuthTooToken and persists changes to storage.
            operationId: updateOhAuthTooToken
            parameters:
                - description: ID of the OhAuthTooToken
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                claims_email:
                                    type: string
                                claims_email_verified:
                                    type: boolean
                                claims_groups:
                                    items:
                                        type: string
                                    type: array
                                claims_preferred_username:
                                    type: string
                                claims_user_id:
                                    type: string
                                claims_username:
                                    type: string
                                client_id:
                                    type: string
                                connector_data:
                                    items:
                                        type: string
                                    type: array
                                connector_id:
                                    type: string
                                last_used:
                                    format: date-time
                                    type: string
                                nonce:
                                    type: string
                                scopes:
                                    items:
                                        type: string
                                    type: array
                            type: object
                description: OhAuthTooToken properties to update
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OhAuthTooToken'
                    description: OhAuthTooToken updated
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Updates a OhAuthTooToken
            tags:
                - OhAuthTooToken
    /org-memberships:
        get:
            description: List OrgMemberships.
            operationId: listOrgMembership
            parameters:
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    minimum: 1
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    maximum: 255
                    minimum: 1
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/OrgMembership'
                                type: array
                    description: result OrgMembership list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List OrgMemberships
            tags:
                - OrgMembership
        post:
            description: Creates a new OrgMembership and persists it to storage.
            operationId: createOrgMembership
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                organization:
                                    type: string
                                organization_id:
                                    type: string
                                role:
                                    default: MEMBER
                                    enum:
                                        - ADMIN
                                        - MEMBER
                                        - OWNER
                                    type: string
                                user:
                                    type: string
                                user_id:
                                    type: string
                            required:
                                - role
                                - organization_id
                                - user_id
                                - organization
                                - user
                            type: object
                description: OrgMembership to create
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OrgMembership'
                    description: OrgMembership created
                "400":
                    $ref: '#/components/responses/400'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Create a new OrgMembership
            tags:
                - OrgMembership
    /org-memberships/{id}:
        delete:
            description: Deletes the OrgMembership with the requested ID.
            operationId: deleteOrgMembership
            parameters:
                - description: ID of the OrgMembership
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: OrgMembership with requested ID was deleted
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Deletes a OrgMembership by ID
            tags:
                - OrgMembership
        get:
            description: Finds the OrgMembership with the requested ID and returns it.
            operationId: readOrgMembership
            parameters:
                - description: ID of the OrgMembership
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OrgMembership'
                    description: OrgMembership with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find a OrgMembership by ID
            tags:
                - OrgMembership
        patch:
            description: Updates a OrgMembership and persists changes to storage.
            operationId: updateOrgMembership
            parameters:
                - description: ID of the OrgMembership
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                organization:
                                    type: string
                                role:
                                    default: MEMBER
                                    enum:
                                        - ADMIN
                                        - MEMBER
                                        - OWNER
                                    type: string
                                user:
                                    type: string
                            type: object
                description: OrgMembership properties to update
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OrgMembership'
                    description: OrgMembership updated
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Updates a OrgMembership
            tags:
                - OrgMembership
    /org-memberships/{id}/organization:
        get:
            description: Find the attached Organization of the OrgMembership with the given ID
            operationId: readOrgMembershipOrganization
            parameters:
                - description: ID of the OrgMembership
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Organization'
                    description: Organization attached to OrgMembership with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find the attached Organization
            tags:
                - OrgMembership
    /org-memberships/{id}/user:
        get:
            description: Find the attached User of the OrgMembership with the given ID
            operationId: readOrgMembershipUser
            parameters:
                - description: ID of the OrgMembership
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                    description: User attached to OrgMembership with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find the attached User
            tags:
                - OrgMembership
    /organization-settings:
        get:
            description: List OrganizationSettings.
            operationId: listOrganizationSetting
            parameters:
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    minimum: 1
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    maximum: 255
                    minimum: 1
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/OrganizationSetting'
                                type: array
                    description: result OrganizationSetting list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List OrganizationSettings
            tags:
                - OrganizationSetting
        post:
            description: Creates a new OrganizationSetting and persists it to storage.
            operationId: createOrganizationSetting
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                billing_address:
                                    type: string
                                billing_contact:
                                    type: string
                                billing_email:
                                    type: string
                                billing_phone:
                                    type: string
                                domains:
                                    items:
                                        type: string
                                    type: array
                                organization:
                                    type: string
                                organization_id:
                                    type: string
                                tags:
                                    items:
                                        type: string
                                    type: array
                                tax_identifier:
                                    type: string
                            type: object
                description: OrganizationSetting to create
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OrganizationSetting'
                    description: OrganizationSetting created
                "400":
                    $ref: '#/components/responses/400'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Create a new OrganizationSetting
            tags:
                - OrganizationSetting
    /organization-settings/{id}:
        delete:
            description: Deletes the OrganizationSetting with the requested ID.
            operationId: deleteOrganizationSetting
            parameters:
                - description: ID of the OrganizationSetting
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: OrganizationSetting with requested ID was deleted
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Deletes a OrganizationSetting by ID
            tags:
                - OrganizationSetting
        get:
            description: Finds the OrganizationSetting with the requested ID and returns it.
            operationId: readOrganizationSetting
            parameters:
                - description: ID of the OrganizationSetting
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OrganizationSetting'
                    description: OrganizationSetting with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find a OrganizationSetting by ID
            tags:
                - OrganizationSetting
        patch:
            description: Updates a OrganizationSetting and persists changes to storage.
            operationId: updateOrganizationSetting
            parameters:
                - description: ID of the OrganizationSetting
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                billing_address:
                                    type: string
                                billing_contact:
                                    type: string
                                billing_email:
                                    type: string
                                billing_phone:
                                    type: string
                                domains:
                                    items:
                                        type: string
                                    type: array
                                organization:
                                    type: string
                                organization_id:
                                    type: string
                                tags:
                                    items:
                                        type: string
                                    type: array
                                tax_identifier:
                                    type: string
                            type: object
                description: OrganizationSetting properties to update
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OrganizationSetting'
                    description: OrganizationSetting updated
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Updates a OrganizationSetting
            tags:
                - OrganizationSetting
    /organization-settings/{id}/organization:
        get:
            description: Find the attached Organization of the OrganizationSetting with the given ID
            operationId: readOrganizationSettingOrganization
            parameters:
                - description: ID of the OrganizationSetting
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Organization'
                    description: Organization attached to OrganizationSetting with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find the attached Organization
            tags:
                - OrganizationSetting
    /organizations:
        get:
            description: List Organizations.
            operationId: listOrganization
            parameters:
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    minimum: 1
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    maximum: 255
                    minimum: 1
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/Organization'
                                type: array
                    description: result Organization list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List Organizations
            tags:
                - Organization
        post:
            description: Creates a new Organization and persists it to storage.
            operationId: createOrganization
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                avatar_remote_url:
                                    type: string
                                children:
                                    items:
                                        type: string
                                    type: array
                                description:
                                    type: string
                                display_name:
                                    type: string
                                entitlements:
                                    items:
                                        type: string
                                    type: array
                                groups:
                                    items:
                                        type: string
                                    type: array
                                integrations:
                                    items:
                                        type: string
                                    type: array
                                invites:
                                    items:
                                        type: string
                                    type: array
                                members:
                                    items:
                                        type: string
                                    type: array
                                name:
                                    type: string
                                oauthprovider:
                                    items:
                                        type: string
                                    type: array
                                parent:
                                    type: string
                                parent_organization_id:
                                    type: string
                                personal_access_tokens:
                                    items:
                                        type: string
                                    type: array
                                personal_org:
                                    type: boolean
                                setting:
                                    type: string
                                subscribers:
                                    items:
                                        type: string
                                    type: array
                                users:
                                    items:
                                        type: string
                                    type: array
                            required:
                                - name
                                - display_name
                            type: object
                description: Organization to create
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Organization'
                    description: Organization created
                "400":
                    $ref: '#/components/responses/400'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Create a new Organization
            tags:
                - Organization
    /organizations/{id}:
        delete:
            description: Deletes the Organization with the requested ID.
            operationId: deleteOrganization
            parameters:
                - description: ID of the Organization
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: Organization with requested ID was deleted
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Deletes a Organization by ID
            tags:
                - Organization
        get:
            description: Finds the Organization with the requested ID and returns it.
            operationId: readOrganization
            parameters:
                - description: ID of the Organization
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Organization'
                    description: Organization with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find a Organization by ID
            tags:
                - Organization
        patch:
            description: Updates a Organization and persists changes to storage.
            operationId: updateOrganization
            parameters:
                - description: ID of the Organization
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                avatar_remote_url:
                                    type: string
                                children:
                                    items:
                                        type: string
                                    type: array
                                description:
                                    type: string
                                display_name:
                                    type: string
                                entitlements:
                                    items:
                                        type: string
                                    type: array
                                groups:
                                    items:
                                        type: string
                                    type: array
                                integrations:
                                    items:
                                        type: string
                                    type: array
                                invites:
                                    items:
                                        type: string
                                    type: array
                                members:
                                    items:
                                        type: string
                                    type: array
                                name:
                                    type: string
                                oauthprovider:
                                    items:
                                        type: string
                                    type: array
                                parent:
                                    type: string
                                personal_access_tokens:
                                    items:
                                        type: string
                                    type: array
                                setting:
                                    type: string
                                subscribers:
                                    items:
                                        type: string
                                    type: array
                                users:
                                    items:
                                        type: string
                                    type: array
                            type: object
                description: Organization properties to update
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Organization'
                    description: Organization updated
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Updates a Organization
            tags:
                - Organization
    /organizations/{id}/children:
        get:
            description: List attached Childrens.
            operationId: listOrganizationChildren
            parameters:
                - description: ID of the Organization
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/Organization'
                                type: array
                    description: result Organizations list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List attached Childrens
            tags:
                - Organization
    /organizations/{id}/entitlements:
        get:
            description: List attached Entitlements.
            operationId: listOrganizationEntitlements
            parameters:
                - description: ID of the Organization
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/Entitlement'
                                type: array
                    description: result Organizations list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List attached Entitlements
            tags:
                - Organization
    /organizations/{id}/groups:
        get:
            description: List attached Groups.
            operationId: listOrganizationGroups
            parameters:
                - description: ID of the Organization
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/Group'
                                type: array
                    description: result Organizations list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List attached Groups
            tags:
                - Organization
    /organizations/{id}/integrations:
        get:
            description: List attached Integrations.
            operationId: listOrganizationIntegrations
            parameters:
                - description: ID of the Organization
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/Integration'
                                type: array
                    description: result Organizations list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List attached Integrations
            tags:
                - Organization
    /organizations/{id}/invites:
        get:
            description: List attached Invites.
            operationId: listOrganizationInvites
            parameters:
                - description: ID of the Organization
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/Invite'
                                type: array
                    description: result Organizations list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List attached Invites
            tags:
                - Organization
    /organizations/{id}/members:
        get:
            description: List attached Members.
            operationId: listOrganizationMembers
            parameters:
                - description: ID of the Organization
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/OrgMembership'
                                type: array
                    description: result Organizations list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List attached Members
            tags:
                - Organization
    /organizations/{id}/oauthprovider:
        get:
            description: List attached Oauthproviders.
            operationId: listOrganizationOauthprovider
            parameters:
                - description: ID of the Organization
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/OauthProvider'
                                type: array
                    description: result Organizations list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List attached Oauthproviders
            tags:
                - Organization
    /organizations/{id}/parent:
        get:
            description: Find the attached Organization of the Organization with the given ID
            operationId: readOrganizationParent
            parameters:
                - description: ID of the Organization
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Organization'
                    description: Organization attached to Organization with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find the attached Organization
            tags:
                - Organization
    /organizations/{id}/personal-access-tokens:
        get:
            description: List attached PersonalAccessTokens.
            operationId: listOrganizationPersonalAccessTokens
            parameters:
                - description: ID of the Organization
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/PersonalAccessToken'
                                type: array
                    description: result Organizations list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List attached PersonalAccessTokens
            tags:
                - Organization
    /organizations/{id}/setting:
        get:
            description: Find the attached OrganizationSetting of the Organization with the given ID
            operationId: readOrganizationSetting
            parameters:
                - description: ID of the Organization
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OrganizationSetting'
                    description: OrganizationSetting attached to Organization with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find the attached OrganizationSetting
            tags:
                - Organization
    /organizations/{id}/subscribers:
        get:
            description: List attached Subscribers.
            operationId: listOrganizationSubscribers
            parameters:
                - description: ID of the Organization
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/Subscriber'
                                type: array
                    description: result Organizations list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List attached Subscribers
            tags:
                - Organization
    /organizations/{id}/users:
        get:
            description: List attached Users.
            operationId: listOrganizationUsers
            parameters:
                - description: ID of the Organization
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/User'
                                type: array
                    description: result Organizations list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List attached Users
            tags:
                - Organization
    /password-reset:
        post:
            description: Endpoint which will accept a Datum generated token in addition to a new password for a user
            parameters:
                - description: datum generated token
                  in: query
                  name: token
                  required: true
                  schema:
                    format: string
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                password:
                                    type: string
                            required:
                                - password
                            type: object
                required: true
            responses:
                "204":
                    description: Password reset received; no content is returned
                "400":
                    $ref: '#/components/responses/InvalidRequest'
                "500":
                    $ref: '#/components/responses/InternalError'
            security:
                - {}
            summary: Update a user's password
            tags:
                - passwords
    /personal-access-tokens:
        get:
            description: List PersonalAccessTokens.
            operationId: listPersonalAccessToken
            parameters:
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    minimum: 1
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    maximum: 255
                    minimum: 1
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/PersonalAccessToken'
                                type: array
                    description: result PersonalAccessToken list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List PersonalAccessTokens
            tags:
                - PersonalAccessToken
        post:
            description: Creates a new PersonalAccessToken and persists it to storage.
            operationId: createPersonalAccessToken
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                description:
                                    type: string
                                expires_at:
                                    format: date-time
                                    type: string
                                last_used_at:
                                    format: date-time
                                    type: string
                                name:
                                    type: string
                                organizations:
                                    items:
                                        type: string
                                    type: array
                                owner:
                                    type: string
                                owner_id:
                                    type: string
                                scopes:
                                    items:
                                        type: string
                                    type: array
                                token:
                                    type: string
                            required:
                                - owner_id
                                - name
                                - token
                                - expires_at
                                - owner
                            type: object
                description: PersonalAccessToken to create
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PersonalAccessToken'
                    description: PersonalAccessToken created
                "400":
                    $ref: '#/components/responses/400'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Create a new PersonalAccessToken
            tags:
                - PersonalAccessToken
    /personal-access-tokens/{id}:
        delete:
            description: Deletes the PersonalAccessToken with the requested ID.
            operationId: deletePersonalAccessToken
            parameters:
                - description: ID of the PersonalAccessToken
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: PersonalAccessToken with requested ID was deleted
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Deletes a PersonalAccessToken by ID
            tags:
                - PersonalAccessToken
        get:
            description: Finds the PersonalAccessToken with the requested ID and returns it.
            operationId: readPersonalAccessToken
            parameters:
                - description: ID of the PersonalAccessToken
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PersonalAccessToken'
                    description: PersonalAccessToken with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find a PersonalAccessToken by ID
            tags:
                - PersonalAccessToken
        patch:
            description: Updates a PersonalAccessToken and persists changes to storage.
            operationId: updatePersonalAccessToken
            parameters:
                - description: ID of the PersonalAccessToken
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                description:
                                    type: string
                                expires_at:
                                    format: date-time
                                    type: string
                                last_used_at:
                                    format: date-time
                                    type: string
                                name:
                                    type: string
                                organizations:
                                    items:
                                        type: string
                                    type: array
                                owner:
                                    type: string
                                owner_id:
                                    type: string
                                scopes:
                                    items:
                                        type: string
                                    type: array
                            type: object
                description: PersonalAccessToken properties to update
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PersonalAccessToken'
                    description: PersonalAccessToken updated
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Updates a PersonalAccessToken
            tags:
                - PersonalAccessToken
    /personal-access-tokens/{id}/organizations:
        get:
            description: List attached Organizations.
            operationId: listPersonalAccessTokenOrganizations
            parameters:
                - description: ID of the PersonalAccessToken
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/Organization'
                                type: array
                    description: result PersonalAccessTokens list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List attached Organizations
            tags:
                - PersonalAccessToken
    /personal-access-tokens/{id}/owner:
        get:
            description: Find the attached User of the PersonalAccessToken with the given ID
            operationId: readPersonalAccessTokenOwner
            parameters:
                - description: ID of the PersonalAccessToken
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                    description: User attached to PersonalAccessToken with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find the attached User
            tags:
                - PersonalAccessToken
    /ready:
        get:
            description: A status check for the server and it's associated dependencies
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                properties:
                                    fga:
                                        type: string
                                    redis:
                                        type: string
                                    sqlite_db_primary:
                                        type: string
                                type: object
                    description: The status of the server and sub components are returned
                "500":
                    $ref: '#/components/responses/InternalError'
            security:
                - {}
            summary: Status Check
    /refresh:
        post:
            description: |
                Access tokens have an expiration of an hour, in order to maintain long running sessions, a refresh token that is tied with a specific access token is issued at the same time. The refresh token may be used to obtain a new access/refresh token pair, thereby extending the user or api key session without requiring credentials to be authenticated a second time.
                Note that the claims that are returned during refresh may not be the same claims as the original access token (e.g. if the role of a user has changed during the session). This means that an operation that was previously allowed by the original access token may not be allowed after refresh.
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                refresh_token:
                                    description: a JWT token that is signed by Datum and linked to an access token. Has a "Not Before" and "Expires" timestamp that bound when the refresh token can be used
                                    type: string
                            required:
                                - refresh_token
                            type: object
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginReply'
                    description: Successful authentication
                "400":
                    $ref: '#/components/responses/InvalidRequest'
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorReply'
                    description: Could not authenticate refresh token
                "500":
                    $ref: '#/components/responses/InternalError'
            security:
                - {}
            summary: Refresh access token
    /register:
        post:
            description: Register a new user and their personal organization
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                email:
                                    type: string
                                first-name:
                                    type: string
                                last-name:
                                    type: string
                                password:
                                    type: string
                            required:
                                - first-name
                                - last-name
                                - email
                                - password
                            type: object
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                properties:
                                    email:
                                        type: string
                                    message:
                                        type: string
                                    user_id:
                                        type: string
                                required:
                                    - user_id
                                type: object
                    description: User and organization created successfully. The details of the new user are returned
                "400":
                    $ref: '#/components/responses/InvalidRequest'
                "409":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorReply'
                    description: A user with the email address already exists
                "500":
                    $ref: '#/components/responses/InternalError'
            security:
                - {}
            summary: Register User
    /resend:
        post:
            description: Triggers a re-send of the email and token which can be used to re-set a users's password; invalidates previously generated tokens
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                email:
                                    type: string
                            required:
                                - email
                            type: object
                required: true
            responses:
                "200":
                    description: Resend verify email request received; no content is returned
                "400":
                    $ref: '#/components/responses/InvalidRequest'
                "500":
                    $ref: '#/components/responses/InternalError'
            security:
                - {}
            summary: Resend verification email
            tags:
                - verification
    /subscribers:
        get:
            description: List Subscribers.
            operationId: listSubscriber
            parameters:
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    minimum: 1
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    maximum: 255
                    minimum: 1
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/Subscriber'
                                type: array
                    description: result Subscriber list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List Subscribers
            tags:
                - Subscriber
    /subscribers/{id}:
        get:
            description: Finds the Subscriber with the requested ID and returns it.
            operationId: readSubscriber
            parameters:
                - description: ID of the Subscriber
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Subscriber'
                    description: Subscriber with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find a Subscriber by ID
            tags:
                - Subscriber
    /subscribers/{id}/owner:
        get:
            description: Find the attached Organization of the Subscriber with the given ID
            operationId: readSubscriberOwner
            parameters:
                - description: ID of the Subscriber
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Organization'
                    description: Organization attached to Subscriber with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find the attached Organization
            tags:
                - Subscriber
    /tfa-settings:
        get:
            description: List TFASettings.
            operationId: listTFASettings
            parameters:
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    minimum: 1
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    maximum: 255
                    minimum: 1
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/TFASettings'
                                type: array
                    description: result TFASettings list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List TFASettings
            tags:
                - TFASettings
        post:
            description: Creates a new TFASettings and persists it to storage.
            operationId: createTFASettings
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                owner:
                                    type: string
                                owner_id:
                                    type: string
                                totp_allowed:
                                    type: boolean
                                verified:
                                    type: boolean
                            required:
                                - verified
                            type: object
                description: TFASettings to create
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TFASettings'
                    description: TFASettings created
                "400":
                    $ref: '#/components/responses/400'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Create a new TFASettings
            tags:
                - TFASettings
    /tfa-settings/{id}:
        get:
            description: Finds the TFASettings with the requested ID and returns it.
            operationId: readTFASettings
            parameters:
                - description: ID of the TFASettings
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TFASettings'
                    description: TFASettings with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find a TFASettings by ID
            tags:
                - TFASettings
        patch:
            description: Updates a TFASettings and persists changes to storage.
            operationId: updateTFASettings
            parameters:
                - description: ID of the TFASettings
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                owner:
                                    type: string
                                owner_id:
                                    type: string
                                totp_allowed:
                                    type: boolean
                                verified:
                                    type: boolean
                            type: object
                description: TFASettings properties to update
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TFASettings'
                    description: TFASettings updated
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Updates a TFASettings
            tags:
                - TFASettings
    /tfa-settings/{id}/owner:
        get:
            description: Find the attached User of the TFASettings with the given ID
            operationId: readTFASettingsOwner
            parameters:
                - description: ID of the TFASettings
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                    description: User attached to TFASettings with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find the attached User
            tags:
                - TFASettings
    /user-settings:
        get:
            description: List UserSettings.
            operationId: listUserSetting
            parameters:
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    minimum: 1
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    maximum: 255
                    minimum: 1
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/UserSetting'
                                type: array
                    description: result UserSetting list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List UserSettings
            tags:
                - UserSetting
        post:
            description: Creates a new UserSetting and persists it to storage.
            operationId: createUserSetting
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                default_org:
                                    type: string
                                is_tfa_enabled:
                                    type: boolean
                                is_webauthn_allowed:
                                    type: boolean
                                locked:
                                    type: boolean
                                silenced_at:
                                    format: date-time
                                    type: string
                                status:
                                    default: ACTIVE
                                    enum:
                                        - ACTIVE
                                        - INACTIVE
                                        - DEACTIVATED
                                        - SUSPENDED
                                    type: string
                                tags:
                                    items:
                                        type: string
                                    type: array
                                user:
                                    type: string
                                user_id:
                                    type: string
                            required:
                                - locked
                                - status
                                - tags
                            type: object
                description: UserSetting to create
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserSetting'
                    description: UserSetting created
                "400":
                    $ref: '#/components/responses/400'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Create a new UserSetting
            tags:
                - UserSetting
    /user-settings/{id}:
        delete:
            description: Deletes the UserSetting with the requested ID.
            operationId: deleteUserSetting
            parameters:
                - description: ID of the UserSetting
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: UserSetting with requested ID was deleted
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Deletes a UserSetting by ID
            tags:
                - UserSetting
        get:
            description: Finds the UserSetting with the requested ID and returns it.
            operationId: readUserSetting
            parameters:
                - description: ID of the UserSetting
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserSetting'
                    description: UserSetting with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find a UserSetting by ID
            tags:
                - UserSetting
        patch:
            description: Updates a UserSetting and persists changes to storage.
            operationId: updateUserSetting
            parameters:
                - description: ID of the UserSetting
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                default_org:
                                    type: string
                                is_tfa_enabled:
                                    type: boolean
                                is_webauthn_allowed:
                                    type: boolean
                                locked:
                                    type: boolean
                                silenced_at:
                                    format: date-time
                                    type: string
                                status:
                                    default: ACTIVE
                                    enum:
                                        - ACTIVE
                                        - INACTIVE
                                        - DEACTIVATED
                                        - SUSPENDED
                                    type: string
                                tags:
                                    items:
                                        type: string
                                    type: array
                                user:
                                    type: string
                                user_id:
                                    type: string
                            type: object
                description: UserSetting properties to update
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserSetting'
                    description: UserSetting updated
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Updates a UserSetting
            tags:
                - UserSetting
    /user-settings/{id}/default-org:
        get:
            description: Find the attached Organization of the UserSetting with the given ID
            operationId: readUserSettingDefaultOrg
            parameters:
                - description: ID of the UserSetting
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Organization'
                    description: Organization attached to UserSetting with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find the attached Organization
            tags:
                - UserSetting
    /user-settings/{id}/user:
        get:
            description: Find the attached User of the UserSetting with the given ID
            operationId: readUserSettingUser
            parameters:
                - description: ID of the UserSetting
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                    description: User attached to UserSetting with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find the attached User
            tags:
                - UserSetting
    /users:
        get:
            description: List Users.
            operationId: listUser
            parameters:
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    minimum: 1
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    maximum: 255
                    minimum: 1
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/User'
                                type: array
                    description: result User list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List Users
            tags:
                - User
        post:
            description: Creates a new User and persists it to storage.
            operationId: createUser
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                auth_provider:
                                    default: CREDENTIALS
                                    enum:
                                        - CREDENTIALS
                                        - GOOGLE
                                        - GITHUB
                                        - WEBAUTHN
                                    type: string
                                avatar_local_file:
                                    type: string
                                avatar_remote_url:
                                    type: string
                                avatar_updated_at:
                                    format: date-time
                                    type: string
                                display_name:
                                    type: string
                                email:
                                    type: string
                                email_verification_tokens:
                                    items:
                                        type: string
                                    type: array
                                first_name:
                                    type: string
                                group_memberships:
                                    items:
                                        type: string
                                    type: array
                                groups:
                                    items:
                                        type: string
                                    type: array
                                last_name:
                                    type: string
                                org_memberships:
                                    items:
                                        type: string
                                    type: array
                                organizations:
                                    items:
                                        type: string
                                    type: array
                                password_reset_tokens:
                                    items:
                                        type: string
                                    type: array
                                personal_access_tokens:
                                    items:
                                        type: string
                                    type: array
                                setting:
                                    type: string
                                tfa_settings:
                                    items:
                                        type: string
                                    type: array
                                webauthn:
                                    items:
                                        type: string
                                    type: array
                            required:
                                - email
                                - first_name
                                - last_name
                                - display_name
                                - auth_provider
                                - setting
                            type: object
                description: User to create
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                    description: User created
                "400":
                    $ref: '#/components/responses/400'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Create a new User
            tags:
                - User
    /users/{id}:
        delete:
            description: Deletes the User with the requested ID.
            operationId: deleteUser
            parameters:
                - description: ID of the User
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: User with requested ID was deleted
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Deletes a User by ID
            tags:
                - User
        get:
            description: Finds the User with the requested ID and returns it.
            operationId: readUser
            parameters:
                - description: ID of the User
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                    description: User with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find a User by ID
            tags:
                - User
        patch:
            description: Updates a User and persists changes to storage.
            operationId: updateUser
            parameters:
                - description: ID of the User
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                auth_provider:
                                    default: CREDENTIALS
                                    enum:
                                        - CREDENTIALS
                                        - GOOGLE
                                        - GITHUB
                                        - WEBAUTHN
                                    type: string
                                avatar_local_file:
                                    type: string
                                avatar_remote_url:
                                    type: string
                                avatar_updated_at:
                                    format: date-time
                                    type: string
                                display_name:
                                    type: string
                                email:
                                    type: string
                                email_verification_tokens:
                                    items:
                                        type: string
                                    type: array
                                first_name:
                                    type: string
                                group_memberships:
                                    items:
                                        type: string
                                    type: array
                                groups:
                                    items:
                                        type: string
                                    type: array
                                last_name:
                                    type: string
                                org_memberships:
                                    items:
                                        type: string
                                    type: array
                                organizations:
                                    items:
                                        type: string
                                    type: array
                                password_reset_tokens:
                                    items:
                                        type: string
                                    type: array
                                personal_access_tokens:
                                    items:
                                        type: string
                                    type: array
                                setting:
                                    type: string
                                tfa_settings:
                                    items:
                                        type: string
                                    type: array
                                webauthn:
                                    items:
                                        type: string
                                    type: array
                            type: object
                description: User properties to update
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                    description: User updated
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Updates a User
            tags:
                - User
    /users/{id}/email-verification-tokens:
        get:
            description: List attached EmailVerificationTokens.
            operationId: listUserEmailVerificationTokens
            parameters:
                - description: ID of the User
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/EmailVerificationToken'
                                type: array
                    description: result Users list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List attached EmailVerificationTokens
            tags:
                - User
    /users/{id}/group-memberships:
        get:
            description: List attached GroupMemberships.
            operationId: listUserGroupMemberships
            parameters:
                - description: ID of the User
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/GroupMembership'
                                type: array
                    description: result Users list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List attached GroupMemberships
            tags:
                - User
    /users/{id}/groups:
        get:
            description: List attached Groups.
            operationId: listUserGroups
            parameters:
                - description: ID of the User
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/Group'
                                type: array
                    description: result Users list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List attached Groups
            tags:
                - User
    /users/{id}/org-memberships:
        get:
            description: List attached OrgMemberships.
            operationId: listUserOrgMemberships
            parameters:
                - description: ID of the User
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/OrgMembership'
                                type: array
                    description: result Users list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List attached OrgMemberships
            tags:
                - User
    /users/{id}/organizations:
        get:
            description: List attached Organizations.
            operationId: listUserOrganizations
            parameters:
                - description: ID of the User
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/Organization'
                                type: array
                    description: result Users list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List attached Organizations
            tags:
                - User
    /users/{id}/password-reset-tokens:
        get:
            description: List attached PasswordResetTokens.
            operationId: listUserPasswordResetTokens
            parameters:
                - description: ID of the User
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/PasswordResetToken'
                                type: array
                    description: result Users list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List attached PasswordResetTokens
            tags:
                - User
    /users/{id}/personal-access-tokens:
        get:
            description: List attached PersonalAccessTokens.
            operationId: listUserPersonalAccessTokens
            parameters:
                - description: ID of the User
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/PersonalAccessToken'
                                type: array
                    description: result Users list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List attached PersonalAccessTokens
            tags:
                - User
    /users/{id}/setting:
        get:
            description: Find the attached UserSetting of the User with the given ID
            operationId: readUserSetting
            parameters:
                - description: ID of the User
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserSetting'
                    description: UserSetting attached to User with requested ID was found
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: Find the attached UserSetting
            tags:
                - User
    /users/{id}/tfa-settings:
        get:
            description: List attached TfaSettings.
            operationId: listUserTfaSettings
            parameters:
                - description: ID of the User
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/TFASettings'
                                type: array
                    description: result Users list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List attached TfaSettings
            tags:
                - User
    /users/{id}/webauthn:
        get:
            description: List attached Webauthns.
            operationId: listUserWebauthn
            parameters:
                - description: ID of the User
                  in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: what page to render
                  in: query
                  name: page
                  schema:
                    type: integer
                - description: item count to render per page
                  in: query
                  name: itemsPerPage
                  schema:
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/Webauthn'
                                type: array
                    description: result Users list
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    $ref: '#/components/responses/409'
                "500":
                    $ref: '#/components/responses/500'
            summary: List attached Webauthns
            tags:
                - User
    /verify:
        get:
            description: Verify a user's email by providing the secure token sent to the requesting email
            parameters:
                - description: datum generated token
                  in: query
                  name: token
                  required: true
                  schema:
                    format: string
                    type: string
            responses:
                "201":
                    description: Token is valid, but expired - re-sent token
                "204":
                    description: Verification completed; no content returned
                "400":
                    $ref: '#/components/responses/InvalidRequest'
                "500":
                    $ref: '#/components/responses/InternalError'
            security:
                - {}
            summary: Verify email
            tags:
                - verification
servers:
    - description: Datum Production API Endpoint
      url: https://api.datum.net/v1
    - description: http localhost endpoint for testing purposes
      url: http://localhost:17608/v1
