{
    "openapi": "3.1.0",
    "info": {
      "title": "Datum OpenAPI 3.1.0 Specifications",
      "description": "Documentation for Datum's API services",
      "termsOfService": "https://datum.net/terms",
      "contact": {
        "name": "Datum Support",
        "url": "https://datum.net/support",
        "email": "support@datum.net"
      },
      "license": {
        "name": "Apache 2.0",
        "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
      },
      "version": "1.0.1"
    },
    "servers": [
      {
        "url": "http://localhost:17608/v1"
      },
      {
        "url": "https://api.datum.net/v1"
      }
    ],
    "paths": {
      "/ready": {
        "get": {
          "security": [
            {}
          ],
          "summary": "Status Check",
          "description": "A status check for the server and it's associated dependencies",
          "responses": {
            "200": {
              "description": "The status of the server and sub components are returned",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "fga": {
                        "type": "string"
                      },
                      "redis": {
                        "type": "string"
                      },
                      "sqlite_db_primary": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "$ref": "#/components/responses/InternalError"
            }
          }
        }
      },
      "/livez": {
        "get": {
          "security": [
            {}
          ],
          "summary": "Server liveness check response",
          "description": "A heartbeat check to confirm the server is up or down",
          "responses": {
            "200": {
              "description": "An up / down status of the server is returned",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
"components": {
  "securitySchemes": {
    "openId": {
      "type": "openIdConnect",
      "openIdConnectUrl": "/.well-known/openid-configuration"
    },
    "BearerAuth": {
      "type": "http",
      "scheme": "bearer",
      "description": "Authorization header with Bearer JWT access token",
      "bearerFormat": "JWT"
    }
  },
  "schemas": {
    "ErrorReply": {
      "type": "object",
      "required": [
        "success"
      ],
      "properties": {
        "success": {
          "type": "boolean",
          "description": "False if there is an error, true otherwise"
        },
        "error": {
          "type": "string",
          "description": "The error message with more detail about why the request failed"
        }
      }
    },
    "LoginReply": {
      "type": "object",
      "required": [
        "access_token",
        "refresh_token"
      ],
      "properties": {
        "access_token": {
          "type": "string",
          "description": "A JWT token signed by Datum that authenticates the user and contains claims that authorize them"
        },
        "refresh_token": {
          "type": "string",
          "description": "A JWT token signed by Datum that can be used to obtain a new access/refresh token pair"
        }
      }
    }
  },
  "responses": {
    "Unauthenticated": {
      "description": "User must be logged in to perform request",
      "content": {
        "application/json": {
          "schema": {
            "$ref": "#/components/schemas/ErrorReply"
          }
        }
      }
    },
    "Unauthorized": {
      "description": "User does not have permissions to perform request",
      "content": {
        "application/json": {
          "schema": {
            "$ref": "#/components/schemas/ErrorReply"
          }
        }
      }
    },
    "InvalidRequest": {
      "description": "Invalid request, user should repair the request and try again",
      "content": {
        "application/json": {
          "schema": {
            "$ref": "#/components/schemas/ErrorReply"
          }
        }
      }
    },
    "NotFound": {
      "description": "Not Found",
      "content": {
        "application/json": {
          "schema": {
            "$ref": "#/components/schemas/ErrorReply"
          }
        }
      }
    },
    "InternalError": {
      "description": "Internal error, admins need to address the issue on the server",
      "content": {
        "application/json": {
          "schema": {
            "$ref": "#/components/schemas/ErrorReply"
          }
        }
      }
    }
  }
},
"security": [
  {
    "BearerAuth": []
  }
]
}