// Package openapi Code generated by swaggo/swag. DO NOT EDIT
package openapi

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://datum.net/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://datum.net/support",
            "email": "support@datum.net"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/metrics": {
            "get": {
                "description": "Handles metrics request",
                "produces": [
                    "application/json"
                ],
                "summary": "Metrics Handler",
                "operationId": "metrics-handler",
                "responses": {}
            }
        },
        "/ready": {
            "get": {
                "description": "Handles readiness check",
                "produces": [
                    "application/json"
                ],
                "summary": "Readiness Handler",
                "operationId": "readiness-handler",
                "responses": {}
            }
        },
        "/refresh": {
            "post": {
                "description": "Re-authenticates users and API keys using a refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Refresh"
                ],
                "summary": "Refresh authentication tokens",
                "responses": {
                    "200": {
                        "description": "Refresh reply object",
                        "schema": {
                            "$ref": "#/definitions/handlers.RefreshReply"
                        }
                    },
                    "400": {
                        "description": "Status error object",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusError"
                        }
                    },
                    "500": {
                        "description": "Status error object",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusError"
                        }
                    }
                }
            }
        },
        "/verify": {
            "get": {
                "description": "Verifies a user's email address by validating the token in the request.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Verify"
                ],
                "summary": "Verify Email",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.VerifyReply"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.VerifyReply"
                        }
                    },
                    "400": {
                        "description": "Status error object",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusError"
                        }
                    },
                    "500": {
                        "description": "Status error object",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.RefreshReply": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "unverified": {
                    "type": "boolean"
                }
            }
        },
        "handlers.Reply": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "unverified": {
                    "type": "boolean"
                }
            }
        },
        "handlers.StatusError": {
            "type": "object",
            "properties": {
                "reply": {
                    "$ref": "#/definitions/handlers.Reply"
                },
                "statusCode": {
                    "type": "integer"
                }
            }
        },
        "handlers.VerifyReply": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "expires_in": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "token": {
                    "type": "string"
                },
                "token_type": {
                    "type": "string"
                },
                "unverified": {
                    "type": "boolean"
                },
                "user_id": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "datum.net",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "Datum API",
	Description:      "API Specifications for Datum Services",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
