{
  "components": {
    "examples": {
      "v1.GenericExample": {
        "value": {
          "environment": "",
          "error": "error: this can be pretty long string",
          "version": "df8a489"
        }
      }
    },
    "parameters": {
      "Limit": {
        "description": "The number of items to return.",
        "in": "query",
        "name": "limit",
        "schema": {
          "default": 100,
          "type": "integer"
        }
      }
    },
    "responses": {
      "BadRequest": {
        "content": {
          "application/json": {
            "examples": {
              "error": {
                "value": {
                  "code": 400,
                  "reply": {
                    "error": "bad request",
                    "success": false
                  }
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        },
        "description": "The request's parameters are not valid"
      }
    },
    "schemas": {
      "ErrorResponse": {
        "properties": {
          "code": {
            "description": "the response HTTP code also in the response payload for your parsing convenience",
            "type": "integer"
          },
          "reply": {
            "description": "the Reply generated via the internal/rout package which contains a success bool and the corresponding message",
            "properties": {
              "error": {
                "description": "The error message if the request was unsuccessful",
                "type": "string"
              },
              "success": {
                "description": "Whether or not the request was successful or not",
                "type": "boolean"
              },
              "unverified": {
                "type": "boolean"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "v1.PubkeyRequest": {
        "properties": {
          "body": {
            "description": "Add a public part of a SSH key pair.",
            "type": "string"
          },
          "name": {
            "description": "Enter the name of the newly created pubkey.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "v1.PubkeyResponse": {
        "properties": {
          "body": {
            "type": "string"
          },
          "fingerprint": {
            "type": "string"
          },
          "fingerprint_legacy": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "info": {
    "contact": {
      "email": "support@datum.net",
      "name": "Datum Support",
      "url": "https://datum.net/support"
    },
    "description": "Documentation for Datum's API services",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "termsOfService": "https://datum.net/terms",
    "title": "Datum OpenAPI 3.1.0 Specifications",
    "version": "1.0.1"
  },
  "openapi": "3.1.0",
  "paths": {
    "/livez": {
      "get": {
        "description": "A heartbeat check to confirm the server is up or down",
        "operationId": "liveID",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An up / down status of the server is returned"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {}
        ],
        "summary": "Server liveness check response"
      }
    },
    "/ready": {
      "get": {
        "description": "A status check for the server and it's associated dependencies",
        "operationId": "readyID",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "fga": {
                      "type": "string"
                    },
                    "redis": {
                      "type": "string"
                    },
                    "sqlite_db_primary": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The status of the server and sub components are returned"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {}
        ],
        "summary": "Status Check"
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:17608/v1"
    },
    {
      "url": "https://api.datum.net/v1"
    }
  ]
}
