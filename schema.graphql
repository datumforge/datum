directive @goField(forceResolver: Boolean, name: String) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!]) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
"""
CreateEntitlementInput is used for create Entitlement object.
Input was generated by ent.
"""
input CreateEntitlementInput {
	createdAt: Time
	updatedAt: Time
	createdBy: String
	updatedBy: String
	tier: EntitlementTier
	"""
	used to store references to external systems, e.g. Stripe
	"""
	externalCustomerID: String
	"""
	used to store references to external systems, e.g. Stripe
	"""
	externalSubscriptionID: String
	"""
	whether or not the customers entitlement expires - expires_at will show the time
	"""
	expires: Boolean
	"""
	the time at which a customer's entitlement will expire, e.g. they've cancelled but paid through the end of the month
	"""
	expiresAt: Time
	"""
	whether or not the customer has cancelled their entitlement - usually used in conjunction with expires and expires at
	"""
	cancelled: Boolean
	ownerID: ID!
}
"""
CreateGroupInput is used for create Group object.
Input was generated by ent.
"""
input CreateGroupInput {
	createdAt: Time
	updatedAt: Time
	createdBy: String
	updatedBy: String
	"""
	the name of the group - must be unique within the organization
	"""
	name: String!
	"""
	the groups description
	"""
	description: String
	"""
	the URL to an auto generated gravatar image for the group
	"""
	gravatarLogoURL: String
	"""
	the URL to an image uploaded by the customer for the groups avatar image
	"""
	logoURL: String
	"""
	The group's displayed 'friendly' name
	"""
	displayName: String
	ownerID: ID!
	settingID: ID!
	userIDs: [ID!]
	createGroupSettings: CreateGroupSettingInput
}
"""
CreateGroupMembershipInput is used for create GroupMembership object.
Input was generated by ent.
"""
input CreateGroupMembershipInput {
	createdAt: Time
	updatedAt: Time
	createdBy: String
	updatedBy: String
	role: GroupMembershipRole
	groupID: ID!
	userID: ID!
}
"""
CreateGroupSettingInput is used for create GroupSetting object.
Input was generated by ent.
"""
input CreateGroupSettingInput {
	createdAt: Time
	updatedAt: Time
	createdBy: String
	updatedBy: String
	"""
	whether the group is visible to it's members / owners only or if it's searchable by anyone within the organization
	"""
	visibility: GroupSettingVisibility
	"""
	the policy governing ability to freely join a group, whether it requires an invitation, application, or either
	"""
	joinPolicy: GroupSettingJoinPolicy
	"""
	tags associated with the object
	"""
	tags: [String!]
	"""
	whether to sync group members to slack groups
	"""
	syncToSlack: Boolean
	"""
	whether to sync group members to github groups
	"""
	syncToGithub: Boolean
	groupID: ID
}
"""
CreateIntegrationInput is used for create Integration object.
Input was generated by ent.
"""
input CreateIntegrationInput {
	createdAt: Time
	updatedAt: Time
	createdBy: String
	updatedBy: String
	"""
	the name of the integration - must be unique within the organization
	"""
	name: String!
	"""
	a description of the integration
	"""
	description: String
	kind: String
	secretName: String
	ownerID: ID!
}
"""
CreateInviteInput is used for create Invite object.
Input was generated by ent.
"""
input CreateInviteInput {
	createdAt: Time
	updatedAt: Time
	createdBy: String
	updatedBy: String
	"""
	the expiration date of the invitation token which defaults to 14 days in the future from creation
	"""
	expires: Time!
	"""
	the email used as input to generate the invitation token and is the destination person the invitation is sent to who is required to accept to join the organization
	"""
	recipient: String!
	"""
	the status of the invitation
	"""
	status: InviteInviteStatus
	role: InviteRole
	"""
	the number of attempts made to perform email send of the invitation, maximum of 5
	"""
	sendAttempts: Int
	"""
	the user who initiated the invitation
	"""
	requestorID: String!
	ownerID: ID!
}
"""
CreateOauthProviderInput is used for create OauthProvider object.
Input was generated by ent.
"""
input CreateOauthProviderInput {
	createdAt: Time
	updatedAt: Time
	createdBy: String
	updatedBy: String
	"""
	the oauth provider's name
	"""
	name: String!
	"""
	the client id for the oauth provider
	"""
	clientID: String!
	"""
	the client secret
	"""
	clientSecret: String!
	"""
	the redirect url
	"""
	redirectURL: String!
	"""
	the scopes
	"""
	scopes: String!
	"""
	the auth url of the provider
	"""
	authURL: String!
	"""
	the token url of the provider
	"""
	tokenURL: String!
	"""
	the auth style, 0: auto detect 1: third party log in 2: log in with username and password
	"""
	authStyle: Int!
	"""
	the URL to request user information by token
	"""
	infoURL: String!
	ownerID: ID
}
"""
CreateOhAuthTooTokenInput is used for create OhAuthTooToken object.
Input was generated by ent.
"""
input CreateOhAuthTooTokenInput {
	clientID: String!
	scopes: [String!]
	nonce: String!
	claimsUserID: String!
	claimsUsername: String!
	claimsEmail: String!
	claimsEmailVerified: Boolean!
	claimsGroups: [String!]
	claimsPreferredUsername: String!
	connectorID: String!
	connectorData: [String!]
	lastUsed: Time
}
"""
CreateOrgMembershipInput is used for create OrgMembership object.
Input was generated by ent.
"""
input CreateOrgMembershipInput {
	createdAt: Time
	updatedAt: Time
	createdBy: String
	updatedBy: String
	role: OrgMembershipRole
	organizationID: ID!
	userID: ID!
}
"""
CreateOrganizationInput is used for create Organization object.
Input was generated by ent.
"""
input CreateOrganizationInput {
	createdAt: Time
	updatedAt: Time
	createdBy: String
	updatedBy: String
	"""
	the name of the organization
	"""
	name: String!
	"""
	The organization's displayed 'friendly' name
	"""
	displayName: String
	"""
	An optional description of the organization
	"""
	description: String
	"""
	orgs directly associated with a user
	"""
	personalOrg: Boolean
	"""
	URL of the user's remote avatar
	"""
	avatarRemoteURL: String
	"""
	Whether the organization has a dedicated database
	"""
	dedicatedDb: Boolean
	parentID: ID
	groupIDs: [ID!]
	templateIDs: [ID!]
	integrationIDs: [ID!]
	settingID: ID
	entitlementIDs: [ID!]
	personalAccessTokenIDs: [ID!]
	oauthproviderIDs: [ID!]
	userIDs: [ID!]
	inviteIDs: [ID!]
	subscriberIDs: [ID!]
	createOrgSettings: CreateOrganizationSettingInput
}
"""
CreateOrganizationSettingInput is used for create OrganizationSetting object.
Input was generated by ent.
"""
input CreateOrganizationSettingInput {
	createdAt: Time
	updatedAt: Time
	createdBy: String
	updatedBy: String
	"""
	domains associated with the organization
	"""
	domains: [String!]
	"""
	Name of the person to contact for billing
	"""
	billingContact: String
	"""
	Email address of the person to contact for billing
	"""
	billingEmail: String
	"""
	Phone number to contact for billing
	"""
	billingPhone: String
	"""
	Address to send billing information to
	"""
	billingAddress: String
	"""
	Usually government-issued tax ID or business ID such as ABN in Australia
	"""
	taxIdentifier: String
	"""
	tags associated with the object
	"""
	tags: [String!]
	"""
	geographical location of the organization
	"""
	geoLocation: OrganizationSettingRegion
	organizationID: ID
}
"""
CreatePersonalAccessTokenInput is used for create PersonalAccessToken object.
Input was generated by ent.
"""
input CreatePersonalAccessTokenInput {
	createdAt: Time
	updatedAt: Time
	createdBy: String
	updatedBy: String
	"""
	the name associated with the token
	"""
	name: String!
	"""
	when the token expires
	"""
	expiresAt: Time!
	"""
	a description of the token's purpose
	"""
	description: String
	scopes: [String!]
	lastUsedAt: Time
	ownerID: ID!
	organizationIDs: [ID!]
}
"""
CreateSubscriberInput is used for create Subscriber object.
Input was generated by ent.
"""
input CreateSubscriberInput {
	createdAt: Time
	updatedAt: Time
	createdBy: String
	updatedBy: String
	"""
	email address of the subscriber
	"""
	email: String!
	"""
	phone number of the subscriber
	"""
	phoneNumber: String
	"""
	indicates if the email address has been verified
	"""
	verifiedEmail: Boolean
	"""
	indicates if the phone number has been verified
	"""
	verifiedPhone: Boolean
	"""
	indicates if the subscriber is active or not, active users will have at least one verified contact method
	"""
	active: Boolean
	ownerID: ID
}
"""
CreateTFASettingsInput is used for create TFASettings object.
Input was generated by ent.
"""
input CreateTFASettingsInput {
	createdAt: Time
	updatedAt: Time
	createdBy: String
	updatedBy: String
	"""
	specifies a user may complete authentication by verifying a TOTP code delivered through an authenticator app
	"""
	totpAllowed: Boolean
	ownerID: ID
}
"""
CreateTemplateInput is used for create Template object.
Input was generated by ent.
"""
input CreateTemplateInput {
	createdAt: Time
	updatedAt: Time
	createdBy: String
	updatedBy: String
	"""
	the name of the template
	"""
	name: String!
	"""
	the description of the template
	"""
	description: String
	"""
	the jsonschema object of the template
	"""
	jsonconfig: JSON
	ownerID: ID!
}
"""
CreateUserInput is used for create User object.
Input was generated by ent.
"""
input CreateUserInput {
	createdAt: Time
	updatedAt: Time
	createdBy: String
	updatedBy: String
	email: String!
	firstName: String!
	lastName: String!
	"""
	The user's displayed 'friendly' name
	"""
	displayName: String!
	"""
	URL of the user's remote avatar
	"""
	avatarRemoteURL: String
	"""
	The user's local avatar file
	"""
	avatarLocalFile: String
	"""
	The time the user's (local) avatar was last updated
	"""
	avatarUpdatedAt: Time
	"""
	the time the user was last seen
	"""
	lastSeen: Time
	"""
	user password hash
	"""
	password: String
	"""
	the Subject of the user JWT
	"""
	sub: String
	"""
	auth provider used to register the account
	"""
	authProvider: UserAuthProvider
	personalAccessTokenIDs: [ID!]
	tfaSettingIDs: [ID!]
	settingID: ID!
	emailVerificationTokenIDs: [ID!]
	passwordResetTokenIDs: [ID!]
	groupIDs: [ID!]
	organizationIDs: [ID!]
	webauthnIDs: [ID!]
}
"""
CreateUserSettingInput is used for create UserSetting object.
Input was generated by ent.
"""
input CreateUserSettingInput {
	createdAt: Time
	updatedAt: Time
	createdBy: String
	updatedBy: String
	"""
	user account is locked if unconfirmed or explicitly locked
	"""
	locked: Boolean
	"""
	The time notifications regarding the user were silenced
	"""
	silencedAt: Time
	"""
	The time the user was suspended
	"""
	suspendedAt: Time
	status: UserSettingUserStatus
	emailConfirmed: Boolean
	"""
	tags associated with the user
	"""
	tags: [String!]
	"""
	specifies a user may complete authentication by verifying a WebAuthn capable device
	"""
	isWebauthnAllowed: Boolean
	"""
	whether the user has two factor authentication enabled
	"""
	isTfaEnabled: Boolean
	userID: ID
	defaultOrgID: ID
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
type Dummy {
	id: ID!
	text: String!
	done: Boolean!
}
type Entitlement implements Node {
	id: ID!
	createdAt: Time
	updatedAt: Time
	createdBy: String
	updatedBy: String
	deletedAt: Time
	deletedBy: String
	tier: EntitlementTier!
	"""
	used to store references to external systems, e.g. Stripe
	"""
	externalCustomerID: String
	"""
	used to store references to external systems, e.g. Stripe
	"""
	externalSubscriptionID: String
	"""
	whether or not the customers entitlement expires - expires_at will show the time
	"""
	expires: Boolean!
	"""
	the time at which a customer's entitlement will expire, e.g. they've cancelled but paid through the end of the month
	"""
	expiresAt: Time
	"""
	whether or not the customer has cancelled their entitlement - usually used in conjunction with expires and expires at
	"""
	cancelled: Boolean!
	owner: Organization!
}
"""
A connection to a list of items.
"""
type EntitlementConnection {
	"""
	A list of edges.
	"""
	edges: [EntitlementEdge]
	"""
	Information to aid in pagination.
	"""
	pageInfo: PageInfo!
	"""
	Identifies the total count of items in the connection.
	"""
	totalCount: Int!
}
"""
Return response for createEntitlement mutation
"""
type EntitlementCreatePayload {
	"""
	Created entitlement
	"""
	entitlement: Entitlement!
}
"""
Return response for deleteEntitlement mutation
"""
type EntitlementDeletePayload {
	"""
	Deleted entitlement ID
	"""
	deletedID: ID!
}
"""
An edge in a connection.
"""
type EntitlementEdge {
	"""
	The item at the end of the edge.
	"""
	node: Entitlement
	"""
	A cursor for use in pagination.
	"""
	cursor: Cursor!
}
"""
EntitlementTier is enum for the field tier
"""
enum EntitlementTier @goModel(model: "github.com/datumforge/datum/internal/ent/enums.Tier") {
	FREE
	PRO
	ENTERPRISE
}
"""
Return response for updateEntitlement mutation
"""
type EntitlementUpdatePayload {
	"""
	Updated entitlement
	"""
	entitlement: Entitlement!
}
"""
EntitlementWhereInput is used for filtering Entitlement objects.
Input was generated by ent.
"""
input EntitlementWhereInput {
	not: EntitlementWhereInput
	and: [EntitlementWhereInput!]
	or: [EntitlementWhereInput!]
	"""
	id field predicates
	"""
	id: ID
	idNEQ: ID
	idIn: [ID!]
	idNotIn: [ID!]
	idGT: ID
	idGTE: ID
	idLT: ID
	idLTE: ID
	idEqualFold: ID
	idContainsFold: ID
	"""
	created_at field predicates
	"""
	createdAt: Time
	createdAtNEQ: Time
	createdAtIn: [Time!]
	createdAtNotIn: [Time!]
	createdAtGT: Time
	createdAtGTE: Time
	createdAtLT: Time
	createdAtLTE: Time
	createdAtIsNil: Boolean
	createdAtNotNil: Boolean
	"""
	updated_at field predicates
	"""
	updatedAt: Time
	updatedAtNEQ: Time
	updatedAtIn: [Time!]
	updatedAtNotIn: [Time!]
	updatedAtGT: Time
	updatedAtGTE: Time
	updatedAtLT: Time
	updatedAtLTE: Time
	updatedAtIsNil: Boolean
	updatedAtNotNil: Boolean
	"""
	created_by field predicates
	"""
	createdBy: String
	createdByNEQ: String
	createdByIn: [String!]
	createdByNotIn: [String!]
	createdByGT: String
	createdByGTE: String
	createdByLT: String
	createdByLTE: String
	createdByContains: String
	createdByHasPrefix: String
	createdByHasSuffix: String
	createdByIsNil: Boolean
	createdByNotNil: Boolean
	createdByEqualFold: String
	createdByContainsFold: String
	"""
	updated_by field predicates
	"""
	updatedBy: String
	updatedByNEQ: String
	updatedByIn: [String!]
	updatedByNotIn: [String!]
	updatedByGT: String
	updatedByGTE: String
	updatedByLT: String
	updatedByLTE: String
	updatedByContains: String
	updatedByHasPrefix: String
	updatedByHasSuffix: String
	updatedByIsNil: Boolean
	updatedByNotNil: Boolean
	updatedByEqualFold: String
	updatedByContainsFold: String
	"""
	deleted_at field predicates
	"""
	deletedAt: Time
	deletedAtNEQ: Time
	deletedAtIn: [Time!]
	deletedAtNotIn: [Time!]
	deletedAtGT: Time
	deletedAtGTE: Time
	deletedAtLT: Time
	deletedAtLTE: Time
	deletedAtIsNil: Boolean
	deletedAtNotNil: Boolean
	"""
	deleted_by field predicates
	"""
	deletedBy: String
	deletedByNEQ: String
	deletedByIn: [String!]
	deletedByNotIn: [String!]
	deletedByGT: String
	deletedByGTE: String
	deletedByLT: String
	deletedByLTE: String
	deletedByContains: String
	deletedByHasPrefix: String
	deletedByHasSuffix: String
	deletedByIsNil: Boolean
	deletedByNotNil: Boolean
	deletedByEqualFold: String
	deletedByContainsFold: String
	"""
	tier field predicates
	"""
	tier: EntitlementTier
	tierNEQ: EntitlementTier
	tierIn: [EntitlementTier!]
	tierNotIn: [EntitlementTier!]
	"""
	external_customer_id field predicates
	"""
	externalCustomerID: String
	externalCustomerIDNEQ: String
	externalCustomerIDIn: [String!]
	externalCustomerIDNotIn: [String!]
	externalCustomerIDGT: String
	externalCustomerIDGTE: String
	externalCustomerIDLT: String
	externalCustomerIDLTE: String
	externalCustomerIDContains: String
	externalCustomerIDHasPrefix: String
	externalCustomerIDHasSuffix: String
	externalCustomerIDIsNil: Boolean
	externalCustomerIDNotNil: Boolean
	externalCustomerIDEqualFold: String
	externalCustomerIDContainsFold: String
	"""
	external_subscription_id field predicates
	"""
	externalSubscriptionID: String
	externalSubscriptionIDNEQ: String
	externalSubscriptionIDIn: [String!]
	externalSubscriptionIDNotIn: [String!]
	externalSubscriptionIDGT: String
	externalSubscriptionIDGTE: String
	externalSubscriptionIDLT: String
	externalSubscriptionIDLTE: String
	externalSubscriptionIDContains: String
	externalSubscriptionIDHasPrefix: String
	externalSubscriptionIDHasSuffix: String
	externalSubscriptionIDIsNil: Boolean
	externalSubscriptionIDNotNil: Boolean
	externalSubscriptionIDEqualFold: String
	externalSubscriptionIDContainsFold: String
	"""
	expires field predicates
	"""
	expires: Boolean
	expiresNEQ: Boolean
	"""
	expires_at field predicates
	"""
	expiresAt: Time
	expiresAtNEQ: Time
	expiresAtIn: [Time!]
	expiresAtNotIn: [Time!]
	expiresAtGT: Time
	expiresAtGTE: Time
	expiresAtLT: Time
	expiresAtLTE: Time
	expiresAtIsNil: Boolean
	expiresAtNotNil: Boolean
	"""
	cancelled field predicates
	"""
	cancelled: Boolean
	cancelledNEQ: Boolean
	"""
	owner edge predicates
	"""
	hasOwner: Boolean
	hasOwnerWith: [OrganizationWhereInput!]
}
type Group implements Node {
	id: ID!
	createdAt: Time
	updatedAt: Time
	createdBy: String
	updatedBy: String
	deletedAt: Time
	deletedBy: String
	"""
	the name of the group - must be unique within the organization
	"""
	name: String!
	"""
	the groups description
	"""
	description: String
	"""
	the URL to an auto generated gravatar image for the group
	"""
	gravatarLogoURL: String
	"""
	the URL to an image uploaded by the customer for the groups avatar image
	"""
	logoURL: String
	"""
	The group's displayed 'friendly' name
	"""
	displayName: String!
	owner: Organization!
	setting: GroupSetting!
	users: [User!]
	members: [GroupMembership!]
}
"""
A connection to a list of items.
"""
type GroupConnection {
	"""
	A list of edges.
	"""
	edges: [GroupEdge]
	"""
	Information to aid in pagination.
	"""
	pageInfo: PageInfo!
	"""
	Identifies the total count of items in the connection.
	"""
	totalCount: Int!
}
"""
Return response for createGroup mutation
"""
type GroupCreatePayload {
	"""
	Created group
	"""
	group: Group!
}
"""
Return response for deleteGroup mutation
"""
type GroupDeletePayload {
	"""
	Deleted group ID
	"""
	deletedID: ID!
}
"""
An edge in a connection.
"""
type GroupEdge {
	"""
	The item at the end of the edge.
	"""
	node: Group
	"""
	A cursor for use in pagination.
	"""
	cursor: Cursor!
}
type GroupMembership implements Node {
	id: ID!
	createdAt: Time
	updatedAt: Time
	createdBy: String
	updatedBy: String
	deletedAt: Time
	deletedBy: String
	role: GroupMembershipRole!
	groupID: ID!
	userID: ID!
	group: Group!
	user: User!
}
"""
A connection to a list of items.
"""
type GroupMembershipConnection {
	"""
	A list of edges.
	"""
	edges: [GroupMembershipEdge]
	"""
	Information to aid in pagination.
	"""
	pageInfo: PageInfo!
	"""
	Identifies the total count of items in the connection.
	"""
	totalCount: Int!
}
"""
Return response for createGroupMembership mutation
"""
type GroupMembershipCreatePayload {
	"""
	Created groupMembership
	"""
	groupMembership: GroupMembership!
}
"""
Return response for deleteGroupMembership mutation
"""
type GroupMembershipDeletePayload {
	"""
	Deleted groupMembership ID
	"""
	deletedID: ID!
}
"""
An edge in a connection.
"""
type GroupMembershipEdge {
	"""
	The item at the end of the edge.
	"""
	node: GroupMembership
	"""
	A cursor for use in pagination.
	"""
	cursor: Cursor!
}
"""
GroupMembershipRole is enum for the field role
"""
enum GroupMembershipRole @goModel(model: "github.com/datumforge/datum/internal/ent/enums.Role") {
	ADMIN
	MEMBER
}
"""
Return response for updateGroupMembership mutation
"""
type GroupMembershipUpdatePayload {
	"""
	Updated groupMembership
	"""
	groupMembership: GroupMembership!
}
"""
GroupMembershipWhereInput is used for filtering GroupMembership objects.
Input was generated by ent.
"""
input GroupMembershipWhereInput {
	not: GroupMembershipWhereInput
	and: [GroupMembershipWhereInput!]
	or: [GroupMembershipWhereInput!]
	"""
	id field predicates
	"""
	id: ID
	idNEQ: ID
	idIn: [ID!]
	idNotIn: [ID!]
	idGT: ID
	idGTE: ID
	idLT: ID
	idLTE: ID
	idEqualFold: ID
	idContainsFold: ID
	"""
	created_at field predicates
	"""
	createdAt: Time
	createdAtNEQ: Time
	createdAtIn: [Time!]
	createdAtNotIn: [Time!]
	createdAtGT: Time
	createdAtGTE: Time
	createdAtLT: Time
	createdAtLTE: Time
	createdAtIsNil: Boolean
	createdAtNotNil: Boolean
	"""
	updated_at field predicates
	"""
	updatedAt: Time
	updatedAtNEQ: Time
	updatedAtIn: [Time!]
	updatedAtNotIn: [Time!]
	updatedAtGT: Time
	updatedAtGTE: Time
	updatedAtLT: Time
	updatedAtLTE: Time
	updatedAtIsNil: Boolean
	updatedAtNotNil: Boolean
	"""
	created_by field predicates
	"""
	createdBy: String
	createdByNEQ: String
	createdByIn: [String!]
	createdByNotIn: [String!]
	createdByGT: String
	createdByGTE: String
	createdByLT: String
	createdByLTE: String
	createdByContains: String
	createdByHasPrefix: String
	createdByHasSuffix: String
	createdByIsNil: Boolean
	createdByNotNil: Boolean
	createdByEqualFold: String
	createdByContainsFold: String
	"""
	updated_by field predicates
	"""
	updatedBy: String
	updatedByNEQ: String
	updatedByIn: [String!]
	updatedByNotIn: [String!]
	updatedByGT: String
	updatedByGTE: String
	updatedByLT: String
	updatedByLTE: String
	updatedByContains: String
	updatedByHasPrefix: String
	updatedByHasSuffix: String
	updatedByIsNil: Boolean
	updatedByNotNil: Boolean
	updatedByEqualFold: String
	updatedByContainsFold: String
	"""
	deleted_at field predicates
	"""
	deletedAt: Time
	deletedAtNEQ: Time
	deletedAtIn: [Time!]
	deletedAtNotIn: [Time!]
	deletedAtGT: Time
	deletedAtGTE: Time
	deletedAtLT: Time
	deletedAtLTE: Time
	deletedAtIsNil: Boolean
	deletedAtNotNil: Boolean
	"""
	deleted_by field predicates
	"""
	deletedBy: String
	deletedByNEQ: String
	deletedByIn: [String!]
	deletedByNotIn: [String!]
	deletedByGT: String
	deletedByGTE: String
	deletedByLT: String
	deletedByLTE: String
	deletedByContains: String
	deletedByHasPrefix: String
	deletedByHasSuffix: String
	deletedByIsNil: Boolean
	deletedByNotNil: Boolean
	deletedByEqualFold: String
	deletedByContainsFold: String
	"""
	role field predicates
	"""
	role: GroupMembershipRole
	roleNEQ: GroupMembershipRole
	roleIn: [GroupMembershipRole!]
	roleNotIn: [GroupMembershipRole!]
	groupID: String
	userID: String
}
"""
Ordering options for Group connections
"""
input GroupOrder {
	"""
	The ordering direction.
	"""
	direction: OrderDirection! = ASC
	"""
	The field by which to order Groups.
	"""
	field: GroupOrderField!
}
"""
Properties by which Group connections can be ordered.
"""
enum GroupOrderField {
	name
	display_name
}
type GroupSetting implements Node {
	id: ID!
	createdAt: Time
	updatedAt: Time
	createdBy: String
	updatedBy: String
	deletedAt: Time
	deletedBy: String
	"""
	whether the group is visible to it's members / owners only or if it's searchable by anyone within the organization
	"""
	visibility: GroupSettingVisibility!
	"""
	the policy governing ability to freely join a group, whether it requires an invitation, application, or either
	"""
	joinPolicy: GroupSettingJoinPolicy!
	"""
	tags associated with the object
	"""
	tags: [String!]
	"""
	whether to sync group members to slack groups
	"""
	syncToSlack: Boolean
	"""
	whether to sync group members to github groups
	"""
	syncToGithub: Boolean
	"""
	the group id associated with the settings
	"""
	groupID: ID
	group: Group
}
"""
A connection to a list of items.
"""
type GroupSettingConnection {
	"""
	A list of edges.
	"""
	edges: [GroupSettingEdge]
	"""
	Information to aid in pagination.
	"""
	pageInfo: PageInfo!
	"""
	Identifies the total count of items in the connection.
	"""
	totalCount: Int!
}
"""
Return response for createGroupSetting mutation
"""
type GroupSettingCreatePayload {
	"""
	Created groupSetting
	"""
	groupSetting: GroupSetting!
}
"""
Return response for deleteGroupSetting mutation
"""
type GroupSettingDeletePayload {
	"""
	Deleted groupSetting ID
	"""
	deletedID: ID!
}
"""
An edge in a connection.
"""
type GroupSettingEdge {
	"""
	The item at the end of the edge.
	"""
	node: GroupSetting
	"""
	A cursor for use in pagination.
	"""
	cursor: Cursor!
}
"""
GroupSettingJoinPolicy is enum for the field join_policy
"""
enum GroupSettingJoinPolicy @goModel(model: "github.com/datumforge/datum/internal/ent/enums.JoinPolicy") {
	OPEN
	INVITE_ONLY
	APPLICATION_ONLY
	INVITE_OR_APPLICATION
}
"""
Return response for updateGroupSetting mutation
"""
type GroupSettingUpdatePayload {
	"""
	Updated groupSetting
	"""
	groupSetting: GroupSetting!
}
"""
GroupSettingVisibility is enum for the field visibility
"""
enum GroupSettingVisibility @goModel(model: "github.com/datumforge/datum/internal/ent/enums.Visibility") {
	PUBLIC
	PRIVATE
}
"""
GroupSettingWhereInput is used for filtering GroupSetting objects.
Input was generated by ent.
"""
input GroupSettingWhereInput {
	not: GroupSettingWhereInput
	and: [GroupSettingWhereInput!]
	or: [GroupSettingWhereInput!]
	"""
	id field predicates
	"""
	id: ID
	idNEQ: ID
	idIn: [ID!]
	idNotIn: [ID!]
	idGT: ID
	idGTE: ID
	idLT: ID
	idLTE: ID
	idEqualFold: ID
	idContainsFold: ID
	"""
	created_at field predicates
	"""
	createdAt: Time
	createdAtNEQ: Time
	createdAtIn: [Time!]
	createdAtNotIn: [Time!]
	createdAtGT: Time
	createdAtGTE: Time
	createdAtLT: Time
	createdAtLTE: Time
	createdAtIsNil: Boolean
	createdAtNotNil: Boolean
	"""
	updated_at field predicates
	"""
	updatedAt: Time
	updatedAtNEQ: Time
	updatedAtIn: [Time!]
	updatedAtNotIn: [Time!]
	updatedAtGT: Time
	updatedAtGTE: Time
	updatedAtLT: Time
	updatedAtLTE: Time
	updatedAtIsNil: Boolean
	updatedAtNotNil: Boolean
	"""
	created_by field predicates
	"""
	createdBy: String
	createdByNEQ: String
	createdByIn: [String!]
	createdByNotIn: [String!]
	createdByGT: String
	createdByGTE: String
	createdByLT: String
	createdByLTE: String
	createdByContains: String
	createdByHasPrefix: String
	createdByHasSuffix: String
	createdByIsNil: Boolean
	createdByNotNil: Boolean
	createdByEqualFold: String
	createdByContainsFold: String
	"""
	updated_by field predicates
	"""
	updatedBy: String
	updatedByNEQ: String
	updatedByIn: [String!]
	updatedByNotIn: [String!]
	updatedByGT: String
	updatedByGTE: String
	updatedByLT: String
	updatedByLTE: String
	updatedByContains: String
	updatedByHasPrefix: String
	updatedByHasSuffix: String
	updatedByIsNil: Boolean
	updatedByNotNil: Boolean
	updatedByEqualFold: String
	updatedByContainsFold: String
	"""
	deleted_at field predicates
	"""
	deletedAt: Time
	deletedAtNEQ: Time
	deletedAtIn: [Time!]
	deletedAtNotIn: [Time!]
	deletedAtGT: Time
	deletedAtGTE: Time
	deletedAtLT: Time
	deletedAtLTE: Time
	deletedAtIsNil: Boolean
	deletedAtNotNil: Boolean
	"""
	deleted_by field predicates
	"""
	deletedBy: String
	deletedByNEQ: String
	deletedByIn: [String!]
	deletedByNotIn: [String!]
	deletedByGT: String
	deletedByGTE: String
	deletedByLT: String
	deletedByLTE: String
	deletedByContains: String
	deletedByHasPrefix: String
	deletedByHasSuffix: String
	deletedByIsNil: Boolean
	deletedByNotNil: Boolean
	deletedByEqualFold: String
	deletedByContainsFold: String
	"""
	visibility field predicates
	"""
	visibility: GroupSettingVisibility
	visibilityNEQ: GroupSettingVisibility
	visibilityIn: [GroupSettingVisibility!]
	visibilityNotIn: [GroupSettingVisibility!]
	"""
	join_policy field predicates
	"""
	joinPolicy: GroupSettingJoinPolicy
	joinPolicyNEQ: GroupSettingJoinPolicy
	joinPolicyIn: [GroupSettingJoinPolicy!]
	joinPolicyNotIn: [GroupSettingJoinPolicy!]
	"""
	sync_to_slack field predicates
	"""
	syncToSlack: Boolean
	syncToSlackNEQ: Boolean
	syncToSlackIsNil: Boolean
	syncToSlackNotNil: Boolean
	"""
	sync_to_github field predicates
	"""
	syncToGithub: Boolean
	syncToGithubNEQ: Boolean
	syncToGithubIsNil: Boolean
	syncToGithubNotNil: Boolean
	"""
	group_id field predicates
	"""
	groupID: ID
	groupIDNEQ: ID
	groupIDIn: [ID!]
	groupIDNotIn: [ID!]
	groupIDGT: ID
	groupIDGTE: ID
	groupIDLT: ID
	groupIDLTE: ID
	groupIDContains: ID
	groupIDHasPrefix: ID
	groupIDHasSuffix: ID
	groupIDIsNil: Boolean
	groupIDNotNil: Boolean
	groupIDEqualFold: ID
	groupIDContainsFold: ID
	"""
	group edge predicates
	"""
	hasGroup: Boolean
	hasGroupWith: [GroupWhereInput!]
}
"""
Return response for updateGroup mutation
"""
type GroupUpdatePayload {
	"""
	Updated group
	"""
	group: Group!
}
"""
GroupWhereInput is used for filtering Group objects.
Input was generated by ent.
"""
input GroupWhereInput {
	not: GroupWhereInput
	and: [GroupWhereInput!]
	or: [GroupWhereInput!]
	"""
	id field predicates
	"""
	id: ID
	idNEQ: ID
	idIn: [ID!]
	idNotIn: [ID!]
	idGT: ID
	idGTE: ID
	idLT: ID
	idLTE: ID
	idEqualFold: ID
	idContainsFold: ID
	"""
	created_at field predicates
	"""
	createdAt: Time
	createdAtNEQ: Time
	createdAtIn: [Time!]
	createdAtNotIn: [Time!]
	createdAtGT: Time
	createdAtGTE: Time
	createdAtLT: Time
	createdAtLTE: Time
	createdAtIsNil: Boolean
	createdAtNotNil: Boolean
	"""
	updated_at field predicates
	"""
	updatedAt: Time
	updatedAtNEQ: Time
	updatedAtIn: [Time!]
	updatedAtNotIn: [Time!]
	updatedAtGT: Time
	updatedAtGTE: Time
	updatedAtLT: Time
	updatedAtLTE: Time
	updatedAtIsNil: Boolean
	updatedAtNotNil: Boolean
	"""
	created_by field predicates
	"""
	createdBy: String
	createdByNEQ: String
	createdByIn: [String!]
	createdByNotIn: [String!]
	createdByGT: String
	createdByGTE: String
	createdByLT: String
	createdByLTE: String
	createdByContains: String
	createdByHasPrefix: String
	createdByHasSuffix: String
	createdByIsNil: Boolean
	createdByNotNil: Boolean
	createdByEqualFold: String
	createdByContainsFold: String
	"""
	updated_by field predicates
	"""
	updatedBy: String
	updatedByNEQ: String
	updatedByIn: [String!]
	updatedByNotIn: [String!]
	updatedByGT: String
	updatedByGTE: String
	updatedByLT: String
	updatedByLTE: String
	updatedByContains: String
	updatedByHasPrefix: String
	updatedByHasSuffix: String
	updatedByIsNil: Boolean
	updatedByNotNil: Boolean
	updatedByEqualFold: String
	updatedByContainsFold: String
	"""
	deleted_at field predicates
	"""
	deletedAt: Time
	deletedAtNEQ: Time
	deletedAtIn: [Time!]
	deletedAtNotIn: [Time!]
	deletedAtGT: Time
	deletedAtGTE: Time
	deletedAtLT: Time
	deletedAtLTE: Time
	deletedAtIsNil: Boolean
	deletedAtNotNil: Boolean
	"""
	deleted_by field predicates
	"""
	deletedBy: String
	deletedByNEQ: String
	deletedByIn: [String!]
	deletedByNotIn: [String!]
	deletedByGT: String
	deletedByGTE: String
	deletedByLT: String
	deletedByLTE: String
	deletedByContains: String
	deletedByHasPrefix: String
	deletedByHasSuffix: String
	deletedByIsNil: Boolean
	deletedByNotNil: Boolean
	deletedByEqualFold: String
	deletedByContainsFold: String
	"""
	name field predicates
	"""
	name: String
	nameNEQ: String
	nameIn: [String!]
	nameNotIn: [String!]
	nameGT: String
	nameGTE: String
	nameLT: String
	nameLTE: String
	nameContains: String
	nameHasPrefix: String
	nameHasSuffix: String
	nameEqualFold: String
	nameContainsFold: String
	"""
	display_name field predicates
	"""
	displayName: String
	displayNameNEQ: String
	displayNameIn: [String!]
	displayNameNotIn: [String!]
	displayNameGT: String
	displayNameGTE: String
	displayNameLT: String
	displayNameLTE: String
	displayNameContains: String
	displayNameHasPrefix: String
	displayNameHasSuffix: String
	displayNameEqualFold: String
	displayNameContainsFold: String
	"""
	owner edge predicates
	"""
	hasOwner: Boolean
	hasOwnerWith: [OrganizationWhereInput!]
	"""
	setting edge predicates
	"""
	hasSetting: Boolean
	hasSettingWith: [GroupSettingWhereInput!]
	"""
	users edge predicates
	"""
	hasUsers: Boolean
	hasUsersWith: [UserWhereInput!]
	"""
	members edge predicates
	"""
	hasMembers: Boolean
	hasMembersWith: [GroupMembershipWhereInput!]
}
type Integration implements Node {
	id: ID!
	createdAt: Time
	updatedAt: Time
	createdBy: String
	updatedBy: String
	deletedAt: Time
	deletedBy: String
	ownerID: ID!
	"""
	the name of the integration - must be unique within the organization
	"""
	name: String!
	"""
	a description of the integration
	"""
	description: String
	kind: String
	secretName: String
	owner: Organization!
}
"""
A connection to a list of items.
"""
type IntegrationConnection {
	"""
	A list of edges.
	"""
	edges: [IntegrationEdge]
	"""
	Information to aid in pagination.
	"""
	pageInfo: PageInfo!
	"""
	Identifies the total count of items in the connection.
	"""
	totalCount: Int!
}
"""
Return response for createIntegration mutation
"""
type IntegrationCreatePayload {
	"""
	Created integration
	"""
	integration: Integration!
}
"""
Return response for deleteIntegration mutation
"""
type IntegrationDeletePayload {
	"""
	Deleted integration ID
	"""
	deletedID: ID!
}
"""
An edge in a connection.
"""
type IntegrationEdge {
	"""
	The item at the end of the edge.
	"""
	node: Integration
	"""
	A cursor for use in pagination.
	"""
	cursor: Cursor!
}
"""
Ordering options for Integration connections
"""
input IntegrationOrder {
	"""
	The ordering direction.
	"""
	direction: OrderDirection! = ASC
	"""
	The field by which to order Integrations.
	"""
	field: IntegrationOrderField!
}
"""
Properties by which Integration connections can be ordered.
"""
enum IntegrationOrderField {
	name
	kind
}
"""
Return response for updateIntegration mutation
"""
type IntegrationUpdatePayload {
	"""
	Updated integration
	"""
	integration: Integration!
}
"""
IntegrationWhereInput is used for filtering Integration objects.
Input was generated by ent.
"""
input IntegrationWhereInput {
	not: IntegrationWhereInput
	and: [IntegrationWhereInput!]
	or: [IntegrationWhereInput!]
	"""
	id field predicates
	"""
	id: ID
	idNEQ: ID
	idIn: [ID!]
	idNotIn: [ID!]
	idGT: ID
	idGTE: ID
	idLT: ID
	idLTE: ID
	idEqualFold: ID
	idContainsFold: ID
	"""
	created_at field predicates
	"""
	createdAt: Time
	createdAtNEQ: Time
	createdAtIn: [Time!]
	createdAtNotIn: [Time!]
	createdAtGT: Time
	createdAtGTE: Time
	createdAtLT: Time
	createdAtLTE: Time
	createdAtIsNil: Boolean
	createdAtNotNil: Boolean
	"""
	updated_at field predicates
	"""
	updatedAt: Time
	updatedAtNEQ: Time
	updatedAtIn: [Time!]
	updatedAtNotIn: [Time!]
	updatedAtGT: Time
	updatedAtGTE: Time
	updatedAtLT: Time
	updatedAtLTE: Time
	updatedAtIsNil: Boolean
	updatedAtNotNil: Boolean
	"""
	created_by field predicates
	"""
	createdBy: String
	createdByNEQ: String
	createdByIn: [String!]
	createdByNotIn: [String!]
	createdByGT: String
	createdByGTE: String
	createdByLT: String
	createdByLTE: String
	createdByContains: String
	createdByHasPrefix: String
	createdByHasSuffix: String
	createdByIsNil: Boolean
	createdByNotNil: Boolean
	createdByEqualFold: String
	createdByContainsFold: String
	"""
	updated_by field predicates
	"""
	updatedBy: String
	updatedByNEQ: String
	updatedByIn: [String!]
	updatedByNotIn: [String!]
	updatedByGT: String
	updatedByGTE: String
	updatedByLT: String
	updatedByLTE: String
	updatedByContains: String
	updatedByHasPrefix: String
	updatedByHasSuffix: String
	updatedByIsNil: Boolean
	updatedByNotNil: Boolean
	updatedByEqualFold: String
	updatedByContainsFold: String
	"""
	deleted_at field predicates
	"""
	deletedAt: Time
	deletedAtNEQ: Time
	deletedAtIn: [Time!]
	deletedAtNotIn: [Time!]
	deletedAtGT: Time
	deletedAtGTE: Time
	deletedAtLT: Time
	deletedAtLTE: Time
	deletedAtIsNil: Boolean
	deletedAtNotNil: Boolean
	"""
	deleted_by field predicates
	"""
	deletedBy: String
	deletedByNEQ: String
	deletedByIn: [String!]
	deletedByNotIn: [String!]
	deletedByGT: String
	deletedByGTE: String
	deletedByLT: String
	deletedByLTE: String
	deletedByContains: String
	deletedByHasPrefix: String
	deletedByHasSuffix: String
	deletedByIsNil: Boolean
	deletedByNotNil: Boolean
	deletedByEqualFold: String
	deletedByContainsFold: String
	"""
	owner_id field predicates
	"""
	ownerID: ID
	ownerIDNEQ: ID
	ownerIDIn: [ID!]
	ownerIDNotIn: [ID!]
	ownerIDGT: ID
	ownerIDGTE: ID
	ownerIDLT: ID
	ownerIDLTE: ID
	ownerIDContains: ID
	ownerIDHasPrefix: ID
	ownerIDHasSuffix: ID
	ownerIDEqualFold: ID
	ownerIDContainsFold: ID
	"""
	name field predicates
	"""
	name: String
	nameNEQ: String
	nameIn: [String!]
	nameNotIn: [String!]
	nameGT: String
	nameGTE: String
	nameLT: String
	nameLTE: String
	nameContains: String
	nameHasPrefix: String
	nameHasSuffix: String
	nameEqualFold: String
	nameContainsFold: String
	"""
	kind field predicates
	"""
	kind: String
	kindNEQ: String
	kindIn: [String!]
	kindNotIn: [String!]
	kindGT: String
	kindGTE: String
	kindLT: String
	kindLTE: String
	kindContains: String
	kindHasPrefix: String
	kindHasSuffix: String
	kindIsNil: Boolean
	kindNotNil: Boolean
	kindEqualFold: String
	kindContainsFold: String
	"""
	secret_name field predicates
	"""
	secretName: String
	secretNameNEQ: String
	secretNameIn: [String!]
	secretNameNotIn: [String!]
	secretNameGT: String
	secretNameGTE: String
	secretNameLT: String
	secretNameLTE: String
	secretNameContains: String
	secretNameHasPrefix: String
	secretNameHasSuffix: String
	secretNameIsNil: Boolean
	secretNameNotNil: Boolean
	secretNameEqualFold: String
	secretNameContainsFold: String
	"""
	owner edge predicates
	"""
	hasOwner: Boolean
	hasOwnerWith: [OrganizationWhereInput!]
}
type Invite implements Node {
	id: ID!
	createdAt: Time
	updatedAt: Time
	createdBy: String
	updatedBy: String
	deletedAt: Time
	deletedBy: String
	ownerID: ID!
	"""
	the expiration date of the invitation token which defaults to 14 days in the future from creation
	"""
	expires: Time!
	"""
	the email used as input to generate the invitation token and is the destination person the invitation is sent to who is required to accept to join the organization
	"""
	recipient: String!
	"""
	the status of the invitation
	"""
	status: InviteInviteStatus!
	role: InviteRole!
	"""
	the number of attempts made to perform email send of the invitation, maximum of 5
	"""
	sendAttempts: Int!
	"""
	the user who initiated the invitation
	"""
	requestorID: String!
	owner: Organization!
}
"""
A connection to a list of items.
"""
type InviteConnection {
	"""
	A list of edges.
	"""
	edges: [InviteEdge]
	"""
	Information to aid in pagination.
	"""
	pageInfo: PageInfo!
	"""
	Identifies the total count of items in the connection.
	"""
	totalCount: Int!
}
"""
Return response for createInvite mutation
"""
type InviteCreatePayload {
	"""
	Created invite
	"""
	invite: Invite!
}
"""
Return response for deleteInvite mutation
"""
type InviteDeletePayload {
	"""
	Deleted invite ID
	"""
	deletedID: ID!
}
"""
An edge in a connection.
"""
type InviteEdge {
	"""
	The item at the end of the edge.
	"""
	node: Invite
	"""
	A cursor for use in pagination.
	"""
	cursor: Cursor!
}
"""
InviteInviteStatus is enum for the field status
"""
enum InviteInviteStatus @goModel(model: "github.com/datumforge/datum/internal/ent/enums.InviteStatus") {
	INVITATION_SENT
	APPROVAL_REQUIRED
	INVITATION_ACCEPTED
	INVITATION_EXPIRED
}
"""
InviteRole is enum for the field role
"""
enum InviteRole @goModel(model: "github.com/datumforge/datum/internal/ent/enums.Role") {
	ADMIN
	MEMBER
	OWNER
}
"""
Return response for updateInvite mutation
"""
type InviteUpdatePayload {
	"""
	Updated invite
	"""
	invite: Invite!
}
"""
InviteWhereInput is used for filtering Invite objects.
Input was generated by ent.
"""
input InviteWhereInput {
	not: InviteWhereInput
	and: [InviteWhereInput!]
	or: [InviteWhereInput!]
	"""
	id field predicates
	"""
	id: ID
	idNEQ: ID
	idIn: [ID!]
	idNotIn: [ID!]
	idGT: ID
	idGTE: ID
	idLT: ID
	idLTE: ID
	idEqualFold: ID
	idContainsFold: ID
	"""
	created_at field predicates
	"""
	createdAt: Time
	createdAtNEQ: Time
	createdAtIn: [Time!]
	createdAtNotIn: [Time!]
	createdAtGT: Time
	createdAtGTE: Time
	createdAtLT: Time
	createdAtLTE: Time
	createdAtIsNil: Boolean
	createdAtNotNil: Boolean
	"""
	updated_at field predicates
	"""
	updatedAt: Time
	updatedAtNEQ: Time
	updatedAtIn: [Time!]
	updatedAtNotIn: [Time!]
	updatedAtGT: Time
	updatedAtGTE: Time
	updatedAtLT: Time
	updatedAtLTE: Time
	updatedAtIsNil: Boolean
	updatedAtNotNil: Boolean
	"""
	created_by field predicates
	"""
	createdBy: String
	createdByNEQ: String
	createdByIn: [String!]
	createdByNotIn: [String!]
	createdByGT: String
	createdByGTE: String
	createdByLT: String
	createdByLTE: String
	createdByContains: String
	createdByHasPrefix: String
	createdByHasSuffix: String
	createdByIsNil: Boolean
	createdByNotNil: Boolean
	createdByEqualFold: String
	createdByContainsFold: String
	"""
	updated_by field predicates
	"""
	updatedBy: String
	updatedByNEQ: String
	updatedByIn: [String!]
	updatedByNotIn: [String!]
	updatedByGT: String
	updatedByGTE: String
	updatedByLT: String
	updatedByLTE: String
	updatedByContains: String
	updatedByHasPrefix: String
	updatedByHasSuffix: String
	updatedByIsNil: Boolean
	updatedByNotNil: Boolean
	updatedByEqualFold: String
	updatedByContainsFold: String
	"""
	deleted_at field predicates
	"""
	deletedAt: Time
	deletedAtNEQ: Time
	deletedAtIn: [Time!]
	deletedAtNotIn: [Time!]
	deletedAtGT: Time
	deletedAtGTE: Time
	deletedAtLT: Time
	deletedAtLTE: Time
	deletedAtIsNil: Boolean
	deletedAtNotNil: Boolean
	"""
	deleted_by field predicates
	"""
	deletedBy: String
	deletedByNEQ: String
	deletedByIn: [String!]
	deletedByNotIn: [String!]
	deletedByGT: String
	deletedByGTE: String
	deletedByLT: String
	deletedByLTE: String
	deletedByContains: String
	deletedByHasPrefix: String
	deletedByHasSuffix: String
	deletedByIsNil: Boolean
	deletedByNotNil: Boolean
	deletedByEqualFold: String
	deletedByContainsFold: String
	"""
	owner_id field predicates
	"""
	ownerID: ID
	ownerIDNEQ: ID
	ownerIDIn: [ID!]
	ownerIDNotIn: [ID!]
	ownerIDGT: ID
	ownerIDGTE: ID
	ownerIDLT: ID
	ownerIDLTE: ID
	ownerIDContains: ID
	ownerIDHasPrefix: ID
	ownerIDHasSuffix: ID
	ownerIDEqualFold: ID
	ownerIDContainsFold: ID
	"""
	expires field predicates
	"""
	expires: Time
	expiresNEQ: Time
	expiresIn: [Time!]
	expiresNotIn: [Time!]
	expiresGT: Time
	expiresGTE: Time
	expiresLT: Time
	expiresLTE: Time
	"""
	recipient field predicates
	"""
	recipient: String
	recipientNEQ: String
	recipientIn: [String!]
	recipientNotIn: [String!]
	recipientGT: String
	recipientGTE: String
	recipientLT: String
	recipientLTE: String
	recipientContains: String
	recipientHasPrefix: String
	recipientHasSuffix: String
	recipientEqualFold: String
	recipientContainsFold: String
	"""
	status field predicates
	"""
	status: InviteInviteStatus
	statusNEQ: InviteInviteStatus
	statusIn: [InviteInviteStatus!]
	statusNotIn: [InviteInviteStatus!]
	"""
	role field predicates
	"""
	role: InviteRole
	roleNEQ: InviteRole
	roleIn: [InviteRole!]
	roleNotIn: [InviteRole!]
	"""
	send_attempts field predicates
	"""
	sendAttempts: Int
	sendAttemptsNEQ: Int
	sendAttemptsIn: [Int!]
	sendAttemptsNotIn: [Int!]
	sendAttemptsGT: Int
	sendAttemptsGTE: Int
	sendAttemptsLT: Int
	sendAttemptsLTE: Int
	"""
	requestor_id field predicates
	"""
	requestorID: String
	requestorIDNEQ: String
	requestorIDIn: [String!]
	requestorIDNotIn: [String!]
	requestorIDGT: String
	requestorIDGTE: String
	requestorIDLT: String
	requestorIDLTE: String
	requestorIDContains: String
	requestorIDHasPrefix: String
	requestorIDHasSuffix: String
	requestorIDEqualFold: String
	requestorIDContainsFold: String
	"""
	owner edge predicates
	"""
	hasOwner: Boolean
	hasOwnerWith: [OrganizationWhereInput!]
}
"""
A valid JSON string.
"""
scalar JSON
type Mutation {
	"""
	Create a new entitlement
	"""
	createEntitlement(
		"""
		values of the entitlement
		"""
		input: CreateEntitlementInput!
	): EntitlementCreatePayload!
	"""
	Update an existing entitlement
	"""
	updateEntitlement(
		"""
		ID of the entitlement
		"""
		id: ID!

		"""
		New values for the entitlement
		"""
		input: UpdateEntitlementInput!
	): EntitlementUpdatePayload!
	"""
	Delete an existing entitlement
	"""
	deleteEntitlement(
		"""
		ID of the entitlement
		"""
		id: ID!
	): EntitlementDeletePayload!
	"""
	Create a new group
	"""
	createGroup(
		"""
		values of the group
		"""
		input: CreateGroupInput!
	): GroupCreatePayload!
	"""
	Update an existing group
	"""
	updateGroup(
		"""
		ID of the group
		"""
		id: ID!

		"""
		New values for the group
		"""
		input: UpdateGroupInput!
	): GroupUpdatePayload!
	"""
	Delete an existing group
	"""
	deleteGroup(
		"""
		ID of the group
		"""
		id: ID!
	): GroupDeletePayload!
	"""
	Create a new groupMembership
	"""
	createGroupMembership(
		"""
		values of the groupMembership
		"""
		input: CreateGroupMembershipInput!
	): GroupMembershipCreatePayload!
	"""
	Update an existing groupMembership
	"""
	updateGroupMembership(
		"""
		ID of the groupMembership
		"""
		id: ID!

		"""
		New values for the groupMembership
		"""
		input: UpdateGroupMembershipInput!
	): GroupMembershipUpdatePayload!
	"""
	Delete an existing groupMembership
	"""
	deleteGroupMembership(
		"""
		ID of the groupMembership
		"""
		id: ID!
	): GroupMembershipDeletePayload!
	"""
	Update an existing groupSetting
	"""
	updateGroupSetting(
		"""
		ID of the groupSetting
		"""
		id: ID!

		"""
		New values for the groupSetting
		"""
		input: UpdateGroupSettingInput!
	): GroupSettingUpdatePayload!
	"""
	Create a new integration
	"""
	createIntegration(
		"""
		values of the integration
		"""
		input: CreateIntegrationInput!
	): IntegrationCreatePayload!
	"""
	Update an existing integration
	"""
	updateIntegration(
		"""
		ID of the integration
		"""
		id: ID!

		"""
		New values for the integration
		"""
		input: UpdateIntegrationInput!
	): IntegrationUpdatePayload!
	"""
	Delete an existing integration
	"""
	deleteIntegration(
		"""
		ID of the integration
		"""
		id: ID!
	): IntegrationDeletePayload!
	"""
	Create a new invite
	"""
	createInvite(
		"""
		values of the invite
		"""
		input: CreateInviteInput!
	): InviteCreatePayload!
	"""
	Update an existing invite
	"""
	updateInvite(
		"""
		ID of the invite
		"""
		id: ID!

		"""
		New values for the invite
		"""
		input: UpdateInviteInput!
	): InviteUpdatePayload!
	"""
	Delete an existing invite
	"""
	deleteInvite(
		"""
		ID of the invite
		"""
		id: ID!
	): InviteDeletePayload!
	"""
	Create a new oauthProvider
	"""
	createOauthProvider(
		"""
		values of the oauthProvider
		"""
		input: CreateOauthProviderInput!
	): OauthProviderCreatePayload!
	"""
	Update an existing oauthProvider
	"""
	updateOauthProvider(
		"""
		ID of the oauthProvider
		"""
		id: ID!

		"""
		New values for the oauthProvider
		"""
		input: UpdateOauthProviderInput!
	): OauthProviderUpdatePayload!
	"""
	Delete an existing oauthProvider
	"""
	deleteOauthProvider(
		"""
		ID of the oauthProvider
		"""
		id: ID!
	): OauthProviderDeletePayload!
	"""
	Create a new ohAuthTooToken
	"""
	createOhAuthTooToken(
		"""
		values of the ohAuthTooToken
		"""
		input: CreateOhAuthTooTokenInput!
	): OhAuthTooTokenCreatePayload!
	"""
	Update an existing ohAuthTooToken
	"""
	updateOhAuthTooToken(
		"""
		ID of the ohAuthTooToken
		"""
		id: ID!

		"""
		New values for the ohAuthTooToken
		"""
		input: UpdateOhAuthTooTokenInput!
	): OhAuthTooTokenUpdatePayload!
	"""
	Delete an existing ohAuthTooToken
	"""
	deleteOhAuthTooToken(
		"""
		ID of the ohAuthTooToken
		"""
		id: ID!
	): OhAuthTooTokenDeletePayload!
	"""
	Create a new organization
	"""
	createOrganization(
		"""
		values of the organization
		"""
		input: CreateOrganizationInput!
	): OrganizationCreatePayload!
	"""
	Update an existing organization
	"""
	updateOrganization(
		"""
		ID of the organization
		"""
		id: ID!

		"""
		New values for the organization
		"""
		input: UpdateOrganizationInput!
	): OrganizationUpdatePayload!
	"""
	Delete an existing organization
	"""
	deleteOrganization(
		"""
		ID of the organization
		"""
		id: ID!
	): OrganizationDeletePayload!
	"""
	Update an existing organizationSetting
	"""
	updateOrganizationSetting(
		"""
		ID of the organizationSetting
		"""
		id: ID!

		"""
		New values for the organizationSetting
		"""
		input: UpdateOrganizationSettingInput!
	): OrganizationSettingUpdatePayload!
	"""
	Create a new orgMembership
	"""
	createOrgMembership(
		"""
		values of the orgMembership
		"""
		input: CreateOrgMembershipInput!
	): OrgMembershipCreatePayload!
	"""
	Update an existing orgMembership
	"""
	updateOrgMembership(
		"""
		ID of the orgMembership
		"""
		id: ID!

		"""
		New values for the orgMembership
		"""
		input: UpdateOrgMembershipInput!
	): OrgMembershipUpdatePayload!
	"""
	Delete an existing orgMembership
	"""
	deleteOrgMembership(
		"""
		ID of the orgMembership
		"""
		id: ID!
	): OrgMembershipDeletePayload!
	"""
	Create a new personalAccessToken
	"""
	createPersonalAccessToken(
		"""
		values of the personalAccessToken
		"""
		input: CreatePersonalAccessTokenInput!
	): PersonalAccessTokenCreatePayload!
	"""
	Update an existing personalAccessToken
	"""
	updatePersonalAccessToken(
		"""
		ID of the personalAccessToken
		"""
		id: ID!

		"""
		New values for the personalAccessToken
		"""
		input: UpdatePersonalAccessTokenInput!
	): PersonalAccessTokenUpdatePayload!
	"""
	Delete an existing personalAccessToken
	"""
	deletePersonalAccessToken(
		"""
		ID of the personalAccessToken
		"""
		id: ID!
	): PersonalAccessTokenDeletePayload!
	"""
	Create a new subscriber
	"""
	createSubscriber(
		"""
		values of the subscriber
		"""
		input: CreateSubscriberInput!
	): SubscriberCreatePayload!
	"""
	Update an existing subscriber
	"""
	updateSubscriber(
		"""
		ID of the subscriber
		"""
		id: ID!

		"""
		New values for the subscriber
		"""
		input: UpdateSubscriberInput!
	): SubscriberUpdatePayload!
	"""
	Delete an existing subscriber
	"""
	deleteSubscriber(
		"""
		ID of the subscriber
		"""
		id: ID!
	): SubscriberDeletePayload!
	"""
	Create a new template
	"""
	createTemplate(
		"""
		values of the template
		"""
		input: CreateTemplateInput!
	): TemplateCreatePayload!
	"""
	Update an existing template
	"""
	updateTemplate(
		"""
		ID of the template
		"""
		id: ID!

		"""
		New values for the template
		"""
		input: UpdateTemplateInput!
	): TemplateUpdatePayload!
	"""
	Delete an existing template
	"""
	deleteTemplate(
		"""
		ID of the template
		"""
		id: ID!
	): TemplateDeletePayload!
	"""
	Create a new tfaSettings
	"""
	createTFASettings(
		"""
		values of the tfaSettings
		"""
		input: CreateTFASettingsInput!
	): TFASettingsCreatePayload!
	"""
	Update an existing tfaSettings
	"""
	updateTFASettings(
		"""
		New values for the tfaSettings
		"""
		input: UpdateTFASettingsInput!
	): TFASettingsUpdatePayload!
	"""
	Create a new user
	"""
	createUser(
		"""
		values of the user
		"""
		input: CreateUserInput!
	): UserCreatePayload!
	"""
	Update an existing user
	"""
	updateUser(
		"""
		ID of the user
		"""
		id: ID!

		"""
		New values for the user
		"""
		input: UpdateUserInput!
	): UserUpdatePayload!
	"""
	Delete an existing user
	"""
	deleteUser(
		"""
		ID of the user
		"""
		id: ID!
	): UserDeletePayload!
	"""
	Update an existing userSetting
	"""
	updateUserSetting(
		"""
		ID of the userSetting
		"""
		id: ID!

		"""
		New values for the userSetting
		"""
		input: UpdateUserSettingInput!
	): UserSettingUpdatePayload!
	postMessageTo(subscriber: String!, content: String!): ID!
}
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "github.com/datumforge/datum/internal/ent/generated.Noder") {
	"""
	The id of the object.
	"""
	id: ID!
}
type OauthProvider implements Node {
	id: ID!
	createdAt: Time
	updatedAt: Time
	createdBy: String
	updatedBy: String
	deletedAt: Time
	deletedBy: String
	"""
	the oauth provider's name
	"""
	name: String!
	"""
	the client id for the oauth provider
	"""
	clientID: String!
	"""
	the client secret
	"""
	clientSecret: String!
	"""
	the redirect url
	"""
	redirectURL: String!
	"""
	the scopes
	"""
	scopes: String!
	"""
	the auth url of the provider
	"""
	authURL: String!
	"""
	the token url of the provider
	"""
	tokenURL: String!
	"""
	the auth style, 0: auto detect 1: third party log in 2: log in with username and password
	"""
	authStyle: Int!
	"""
	the URL to request user information by token
	"""
	infoURL: String!
	owner: Organization
}
"""
A connection to a list of items.
"""
type OauthProviderConnection {
	"""
	A list of edges.
	"""
	edges: [OauthProviderEdge]
	"""
	Information to aid in pagination.
	"""
	pageInfo: PageInfo!
	"""
	Identifies the total count of items in the connection.
	"""
	totalCount: Int!
}
"""
Return response for createOauthProvider mutation
"""
type OauthProviderCreatePayload {
	"""
	Created oauthProvider
	"""
	oauthProvider: OauthProvider!
}
"""
Return response for deleteOauthProvider mutation
"""
type OauthProviderDeletePayload {
	"""
	Deleted oauthProvider ID
	"""
	deletedID: ID!
}
"""
An edge in a connection.
"""
type OauthProviderEdge {
	"""
	The item at the end of the edge.
	"""
	node: OauthProvider
	"""
	A cursor for use in pagination.
	"""
	cursor: Cursor!
}
"""
Return response for updateOauthProvider mutation
"""
type OauthProviderUpdatePayload {
	"""
	Updated oauthProvider
	"""
	oauthProvider: OauthProvider!
}
"""
OauthProviderWhereInput is used for filtering OauthProvider objects.
Input was generated by ent.
"""
input OauthProviderWhereInput {
	not: OauthProviderWhereInput
	and: [OauthProviderWhereInput!]
	or: [OauthProviderWhereInput!]
	"""
	id field predicates
	"""
	id: ID
	idNEQ: ID
	idIn: [ID!]
	idNotIn: [ID!]
	idGT: ID
	idGTE: ID
	idLT: ID
	idLTE: ID
	idEqualFold: ID
	idContainsFold: ID
	"""
	created_at field predicates
	"""
	createdAt: Time
	createdAtNEQ: Time
	createdAtIn: [Time!]
	createdAtNotIn: [Time!]
	createdAtGT: Time
	createdAtGTE: Time
	createdAtLT: Time
	createdAtLTE: Time
	createdAtIsNil: Boolean
	createdAtNotNil: Boolean
	"""
	updated_at field predicates
	"""
	updatedAt: Time
	updatedAtNEQ: Time
	updatedAtIn: [Time!]
	updatedAtNotIn: [Time!]
	updatedAtGT: Time
	updatedAtGTE: Time
	updatedAtLT: Time
	updatedAtLTE: Time
	updatedAtIsNil: Boolean
	updatedAtNotNil: Boolean
	"""
	created_by field predicates
	"""
	createdBy: String
	createdByNEQ: String
	createdByIn: [String!]
	createdByNotIn: [String!]
	createdByGT: String
	createdByGTE: String
	createdByLT: String
	createdByLTE: String
	createdByContains: String
	createdByHasPrefix: String
	createdByHasSuffix: String
	createdByIsNil: Boolean
	createdByNotNil: Boolean
	createdByEqualFold: String
	createdByContainsFold: String
	"""
	updated_by field predicates
	"""
	updatedBy: String
	updatedByNEQ: String
	updatedByIn: [String!]
	updatedByNotIn: [String!]
	updatedByGT: String
	updatedByGTE: String
	updatedByLT: String
	updatedByLTE: String
	updatedByContains: String
	updatedByHasPrefix: String
	updatedByHasSuffix: String
	updatedByIsNil: Boolean
	updatedByNotNil: Boolean
	updatedByEqualFold: String
	updatedByContainsFold: String
	"""
	deleted_at field predicates
	"""
	deletedAt: Time
	deletedAtNEQ: Time
	deletedAtIn: [Time!]
	deletedAtNotIn: [Time!]
	deletedAtGT: Time
	deletedAtGTE: Time
	deletedAtLT: Time
	deletedAtLTE: Time
	deletedAtIsNil: Boolean
	deletedAtNotNil: Boolean
	"""
	deleted_by field predicates
	"""
	deletedBy: String
	deletedByNEQ: String
	deletedByIn: [String!]
	deletedByNotIn: [String!]
	deletedByGT: String
	deletedByGTE: String
	deletedByLT: String
	deletedByLTE: String
	deletedByContains: String
	deletedByHasPrefix: String
	deletedByHasSuffix: String
	deletedByIsNil: Boolean
	deletedByNotNil: Boolean
	deletedByEqualFold: String
	deletedByContainsFold: String
	"""
	name field predicates
	"""
	name: String
	nameNEQ: String
	nameIn: [String!]
	nameNotIn: [String!]
	nameGT: String
	nameGTE: String
	nameLT: String
	nameLTE: String
	nameContains: String
	nameHasPrefix: String
	nameHasSuffix: String
	nameEqualFold: String
	nameContainsFold: String
	"""
	client_id field predicates
	"""
	clientID: String
	clientIDNEQ: String
	clientIDIn: [String!]
	clientIDNotIn: [String!]
	clientIDGT: String
	clientIDGTE: String
	clientIDLT: String
	clientIDLTE: String
	clientIDContains: String
	clientIDHasPrefix: String
	clientIDHasSuffix: String
	clientIDEqualFold: String
	clientIDContainsFold: String
	"""
	client_secret field predicates
	"""
	clientSecret: String
	clientSecretNEQ: String
	clientSecretIn: [String!]
	clientSecretNotIn: [String!]
	clientSecretGT: String
	clientSecretGTE: String
	clientSecretLT: String
	clientSecretLTE: String
	clientSecretContains: String
	clientSecretHasPrefix: String
	clientSecretHasSuffix: String
	clientSecretEqualFold: String
	clientSecretContainsFold: String
	"""
	redirect_url field predicates
	"""
	redirectURL: String
	redirectURLNEQ: String
	redirectURLIn: [String!]
	redirectURLNotIn: [String!]
	redirectURLGT: String
	redirectURLGTE: String
	redirectURLLT: String
	redirectURLLTE: String
	redirectURLContains: String
	redirectURLHasPrefix: String
	redirectURLHasSuffix: String
	redirectURLEqualFold: String
	redirectURLContainsFold: String
	"""
	scopes field predicates
	"""
	scopes: String
	scopesNEQ: String
	scopesIn: [String!]
	scopesNotIn: [String!]
	scopesGT: String
	scopesGTE: String
	scopesLT: String
	scopesLTE: String
	scopesContains: String
	scopesHasPrefix: String
	scopesHasSuffix: String
	scopesEqualFold: String
	scopesContainsFold: String
	"""
	auth_url field predicates
	"""
	authURL: String
	authURLNEQ: String
	authURLIn: [String!]
	authURLNotIn: [String!]
	authURLGT: String
	authURLGTE: String
	authURLLT: String
	authURLLTE: String
	authURLContains: String
	authURLHasPrefix: String
	authURLHasSuffix: String
	authURLEqualFold: String
	authURLContainsFold: String
	"""
	token_url field predicates
	"""
	tokenURL: String
	tokenURLNEQ: String
	tokenURLIn: [String!]
	tokenURLNotIn: [String!]
	tokenURLGT: String
	tokenURLGTE: String
	tokenURLLT: String
	tokenURLLTE: String
	tokenURLContains: String
	tokenURLHasPrefix: String
	tokenURLHasSuffix: String
	tokenURLEqualFold: String
	tokenURLContainsFold: String
	"""
	auth_style field predicates
	"""
	authStyle: Int
	authStyleNEQ: Int
	authStyleIn: [Int!]
	authStyleNotIn: [Int!]
	authStyleGT: Int
	authStyleGTE: Int
	authStyleLT: Int
	authStyleLTE: Int
	"""
	info_url field predicates
	"""
	infoURL: String
	infoURLNEQ: String
	infoURLIn: [String!]
	infoURLNotIn: [String!]
	infoURLGT: String
	infoURLGTE: String
	infoURLLT: String
	infoURLLTE: String
	infoURLContains: String
	infoURLHasPrefix: String
	infoURLHasSuffix: String
	infoURLEqualFold: String
	infoURLContainsFold: String
	"""
	owner edge predicates
	"""
	hasOwner: Boolean
	hasOwnerWith: [OrganizationWhereInput!]
}
type OhAuthTooToken implements Node {
	id: ID!
	clientID: String!
	scopes: [String!]
	nonce: String!
	claimsUserID: String!
	claimsUsername: String!
	claimsEmail: String!
	claimsEmailVerified: Boolean!
	claimsGroups: [String!]
	claimsPreferredUsername: String!
	connectorID: String!
	connectorData: [String!]
	lastUsed: Time!
}
"""
A connection to a list of items.
"""
type OhAuthTooTokenConnection {
	"""
	A list of edges.
	"""
	edges: [OhAuthTooTokenEdge]
	"""
	Information to aid in pagination.
	"""
	pageInfo: PageInfo!
	"""
	Identifies the total count of items in the connection.
	"""
	totalCount: Int!
}
"""
Return response for createOhAuthTooToken mutation
"""
type OhAuthTooTokenCreatePayload {
	"""
	Created ohAuthTooToken
	"""
	ohAuthTooToken: OhAuthTooToken!
}
"""
Return response for deleteOhAuthTooToken mutation
"""
type OhAuthTooTokenDeletePayload {
	"""
	Deleted ohAuthTooToken ID
	"""
	deletedID: ID!
}
"""
An edge in a connection.
"""
type OhAuthTooTokenEdge {
	"""
	The item at the end of the edge.
	"""
	node: OhAuthTooToken
	"""
	A cursor for use in pagination.
	"""
	cursor: Cursor!
}
"""
Return response for updateOhAuthTooToken mutation
"""
type OhAuthTooTokenUpdatePayload {
	"""
	Updated ohAuthTooToken
	"""
	ohAuthTooToken: OhAuthTooToken!
}
"""
OhAuthTooTokenWhereInput is used for filtering OhAuthTooToken objects.
Input was generated by ent.
"""
input OhAuthTooTokenWhereInput {
	not: OhAuthTooTokenWhereInput
	and: [OhAuthTooTokenWhereInput!]
	or: [OhAuthTooTokenWhereInput!]
	"""
	id field predicates
	"""
	id: ID
	idNEQ: ID
	idIn: [ID!]
	idNotIn: [ID!]
	idGT: ID
	idGTE: ID
	idLT: ID
	idLTE: ID
	idEqualFold: ID
	idContainsFold: ID
	"""
	client_id field predicates
	"""
	clientID: String
	clientIDNEQ: String
	clientIDIn: [String!]
	clientIDNotIn: [String!]
	clientIDGT: String
	clientIDGTE: String
	clientIDLT: String
	clientIDLTE: String
	clientIDContains: String
	clientIDHasPrefix: String
	clientIDHasSuffix: String
	clientIDEqualFold: String
	clientIDContainsFold: String
	"""
	nonce field predicates
	"""
	nonce: String
	nonceNEQ: String
	nonceIn: [String!]
	nonceNotIn: [String!]
	nonceGT: String
	nonceGTE: String
	nonceLT: String
	nonceLTE: String
	nonceContains: String
	nonceHasPrefix: String
	nonceHasSuffix: String
	nonceEqualFold: String
	nonceContainsFold: String
	"""
	claims_user_id field predicates
	"""
	claimsUserID: String
	claimsUserIDNEQ: String
	claimsUserIDIn: [String!]
	claimsUserIDNotIn: [String!]
	claimsUserIDGT: String
	claimsUserIDGTE: String
	claimsUserIDLT: String
	claimsUserIDLTE: String
	claimsUserIDContains: String
	claimsUserIDHasPrefix: String
	claimsUserIDHasSuffix: String
	claimsUserIDEqualFold: String
	claimsUserIDContainsFold: String
	"""
	claims_username field predicates
	"""
	claimsUsername: String
	claimsUsernameNEQ: String
	claimsUsernameIn: [String!]
	claimsUsernameNotIn: [String!]
	claimsUsernameGT: String
	claimsUsernameGTE: String
	claimsUsernameLT: String
	claimsUsernameLTE: String
	claimsUsernameContains: String
	claimsUsernameHasPrefix: String
	claimsUsernameHasSuffix: String
	claimsUsernameEqualFold: String
	claimsUsernameContainsFold: String
	"""
	claims_email field predicates
	"""
	claimsEmail: String
	claimsEmailNEQ: String
	claimsEmailIn: [String!]
	claimsEmailNotIn: [String!]
	claimsEmailGT: String
	claimsEmailGTE: String
	claimsEmailLT: String
	claimsEmailLTE: String
	claimsEmailContains: String
	claimsEmailHasPrefix: String
	claimsEmailHasSuffix: String
	claimsEmailEqualFold: String
	claimsEmailContainsFold: String
	"""
	claims_email_verified field predicates
	"""
	claimsEmailVerified: Boolean
	claimsEmailVerifiedNEQ: Boolean
	"""
	claims_preferred_username field predicates
	"""
	claimsPreferredUsername: String
	claimsPreferredUsernameNEQ: String
	claimsPreferredUsernameIn: [String!]
	claimsPreferredUsernameNotIn: [String!]
	claimsPreferredUsernameGT: String
	claimsPreferredUsernameGTE: String
	claimsPreferredUsernameLT: String
	claimsPreferredUsernameLTE: String
	claimsPreferredUsernameContains: String
	claimsPreferredUsernameHasPrefix: String
	claimsPreferredUsernameHasSuffix: String
	claimsPreferredUsernameEqualFold: String
	claimsPreferredUsernameContainsFold: String
	"""
	connector_id field predicates
	"""
	connectorID: String
	connectorIDNEQ: String
	connectorIDIn: [String!]
	connectorIDNotIn: [String!]
	connectorIDGT: String
	connectorIDGTE: String
	connectorIDLT: String
	connectorIDLTE: String
	connectorIDContains: String
	connectorIDHasPrefix: String
	connectorIDHasSuffix: String
	connectorIDEqualFold: String
	connectorIDContainsFold: String
	"""
	last_used field predicates
	"""
	lastUsed: Time
	lastUsedNEQ: Time
	lastUsedIn: [Time!]
	lastUsedNotIn: [Time!]
	lastUsedGT: Time
	lastUsedGTE: Time
	lastUsedLT: Time
	lastUsedLTE: Time
}
"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
	"""
	Specifies an ascending order for a given `orderBy` argument.
	"""
	ASC
	"""
	Specifies a descending order for a given `orderBy` argument.
	"""
	DESC
}
type OrgMembership implements Node {
	id: ID!
	createdAt: Time
	updatedAt: Time
	createdBy: String
	updatedBy: String
	deletedAt: Time
	deletedBy: String
	role: OrgMembershipRole!
	organizationID: ID!
	userID: ID!
	organization: Organization!
	user: User!
}
"""
A connection to a list of items.
"""
type OrgMembershipConnection {
	"""
	A list of edges.
	"""
	edges: [OrgMembershipEdge]
	"""
	Information to aid in pagination.
	"""
	pageInfo: PageInfo!
	"""
	Identifies the total count of items in the connection.
	"""
	totalCount: Int!
}
"""
Return response for createOrgMembership mutation
"""
type OrgMembershipCreatePayload {
	"""
	Created orgMembership
	"""
	orgMembership: OrgMembership!
}
"""
Return response for deleteOrgMembership mutation
"""
type OrgMembershipDeletePayload {
	"""
	Deleted orgMembership ID
	"""
	deletedID: ID!
}
"""
An edge in a connection.
"""
type OrgMembershipEdge {
	"""
	The item at the end of the edge.
	"""
	node: OrgMembership
	"""
	A cursor for use in pagination.
	"""
	cursor: Cursor!
}
"""
OrgMembershipRole is enum for the field role
"""
enum OrgMembershipRole @goModel(model: "github.com/datumforge/datum/internal/ent/enums.Role") {
	ADMIN
	MEMBER
	OWNER
}
"""
Return response for updateOrgMembership mutation
"""
type OrgMembershipUpdatePayload {
	"""
	Updated orgMembership
	"""
	orgMembership: OrgMembership!
}
"""
OrgMembershipWhereInput is used for filtering OrgMembership objects.
Input was generated by ent.
"""
input OrgMembershipWhereInput {
	not: OrgMembershipWhereInput
	and: [OrgMembershipWhereInput!]
	or: [OrgMembershipWhereInput!]
	"""
	id field predicates
	"""
	id: ID
	idNEQ: ID
	idIn: [ID!]
	idNotIn: [ID!]
	idGT: ID
	idGTE: ID
	idLT: ID
	idLTE: ID
	idEqualFold: ID
	idContainsFold: ID
	"""
	created_at field predicates
	"""
	createdAt: Time
	createdAtNEQ: Time
	createdAtIn: [Time!]
	createdAtNotIn: [Time!]
	createdAtGT: Time
	createdAtGTE: Time
	createdAtLT: Time
	createdAtLTE: Time
	createdAtIsNil: Boolean
	createdAtNotNil: Boolean
	"""
	updated_at field predicates
	"""
	updatedAt: Time
	updatedAtNEQ: Time
	updatedAtIn: [Time!]
	updatedAtNotIn: [Time!]
	updatedAtGT: Time
	updatedAtGTE: Time
	updatedAtLT: Time
	updatedAtLTE: Time
	updatedAtIsNil: Boolean
	updatedAtNotNil: Boolean
	"""
	created_by field predicates
	"""
	createdBy: String
	createdByNEQ: String
	createdByIn: [String!]
	createdByNotIn: [String!]
	createdByGT: String
	createdByGTE: String
	createdByLT: String
	createdByLTE: String
	createdByContains: String
	createdByHasPrefix: String
	createdByHasSuffix: String
	createdByIsNil: Boolean
	createdByNotNil: Boolean
	createdByEqualFold: String
	createdByContainsFold: String
	"""
	updated_by field predicates
	"""
	updatedBy: String
	updatedByNEQ: String
	updatedByIn: [String!]
	updatedByNotIn: [String!]
	updatedByGT: String
	updatedByGTE: String
	updatedByLT: String
	updatedByLTE: String
	updatedByContains: String
	updatedByHasPrefix: String
	updatedByHasSuffix: String
	updatedByIsNil: Boolean
	updatedByNotNil: Boolean
	updatedByEqualFold: String
	updatedByContainsFold: String
	"""
	deleted_at field predicates
	"""
	deletedAt: Time
	deletedAtNEQ: Time
	deletedAtIn: [Time!]
	deletedAtNotIn: [Time!]
	deletedAtGT: Time
	deletedAtGTE: Time
	deletedAtLT: Time
	deletedAtLTE: Time
	deletedAtIsNil: Boolean
	deletedAtNotNil: Boolean
	"""
	deleted_by field predicates
	"""
	deletedBy: String
	deletedByNEQ: String
	deletedByIn: [String!]
	deletedByNotIn: [String!]
	deletedByGT: String
	deletedByGTE: String
	deletedByLT: String
	deletedByLTE: String
	deletedByContains: String
	deletedByHasPrefix: String
	deletedByHasSuffix: String
	deletedByIsNil: Boolean
	deletedByNotNil: Boolean
	deletedByEqualFold: String
	deletedByContainsFold: String
	"""
	role field predicates
	"""
	role: OrgMembershipRole
	roleNEQ: OrgMembershipRole
	roleIn: [OrgMembershipRole!]
	roleNotIn: [OrgMembershipRole!]
	organizationID: String
	userID: String
}
type Organization implements Node {
	id: ID!
	createdAt: Time
	updatedAt: Time
	createdBy: String
	updatedBy: String
	deletedAt: Time
	deletedBy: String
	"""
	the name of the organization
	"""
	name: String!
	"""
	The organization's displayed 'friendly' name
	"""
	displayName: String!
	"""
	An optional description of the organization
	"""
	description: String
	"""
	orgs directly associated with a user
	"""
	personalOrg: Boolean
	"""
	URL of the user's remote avatar
	"""
	avatarRemoteURL: String
	"""
	Whether the organization has a dedicated database
	"""
	dedicatedDb: Boolean!
	parent: Organization
	children(
		"""
		Returns the elements in the list that come after the specified cursor.
		"""
		after: Cursor

		"""
		Returns the first _n_ elements from the list.
		"""
		first: Int

		"""
		Returns the elements in the list that come before the specified cursor.
		"""
		before: Cursor

		"""
		Returns the last _n_ elements from the list.
		"""
		last: Int

		"""
		Ordering options for Organizations returned from the connection.
		"""
		orderBy: OrganizationOrder

		"""
		Filtering options for Organizations returned from the connection.
		"""
		where: OrganizationWhereInput
	): OrganizationConnection!
	groups: [Group!]
	templates: [Template!]
	integrations: [Integration!]
	setting: OrganizationSetting
	entitlements: [Entitlement!]
	personalAccessTokens: [PersonalAccessToken!]
	oauthprovider: [OauthProvider!]
	users: [User!]
	invites: [Invite!]
	subscribers: [Subscriber!]
	members: [OrgMembership!]
}
"""
A connection to a list of items.
"""
type OrganizationConnection {
	"""
	A list of edges.
	"""
	edges: [OrganizationEdge]
	"""
	Information to aid in pagination.
	"""
	pageInfo: PageInfo!
	"""
	Identifies the total count of items in the connection.
	"""
	totalCount: Int!
}
"""
Return response for createOrganization mutation
"""
type OrganizationCreatePayload {
	"""
	Created organization
	"""
	organization: Organization!
}
"""
Return response for deleteOrganization mutation
"""
type OrganizationDeletePayload {
	"""
	Deleted organization ID
	"""
	deletedID: ID!
}
"""
An edge in a connection.
"""
type OrganizationEdge {
	"""
	The item at the end of the edge.
	"""
	node: Organization
	"""
	A cursor for use in pagination.
	"""
	cursor: Cursor!
}
type OrganizationHistory implements Node {
	id: ID!
	historyTime: Time!
	ref: String
	operation: OrganizationHistoryOpType!
	createdAt: Time
	updatedAt: Time
	createdBy: String
	updatedBy: String
	deletedAt: Time
	deletedBy: String
	"""
	the name of the organization
	"""
	name: String!
	"""
	The organization's displayed 'friendly' name
	"""
	displayName: String!
	"""
	An optional description of the organization
	"""
	description: String
	"""
	orgs directly associated with a user
	"""
	personalOrg: Boolean
	"""
	URL of the user's remote avatar
	"""
	avatarRemoteURL: String
	"""
	Whether the organization has a dedicated database
	"""
	dedicatedDb: Boolean!
}
"""
OrganizationHistoryOpType is enum for the field operation
"""
enum OrganizationHistoryOpType @goModel(model: "github.com/datumforge/enthistory.OpType") {
	INSERT
	UPDATE
	DELETE
}
"""
Ordering options for OrganizationHistory connections
"""
input OrganizationHistoryOrder {
	"""
	The ordering direction.
	"""
	direction: OrderDirection! = ASC
	"""
	The field by which to order OrganizationHistories.
	"""
	field: OrganizationHistoryOrderField!
}
"""
Properties by which OrganizationHistory connections can be ordered.
"""
enum OrganizationHistoryOrderField {
	name
	display_name
}
"""
OrganizationHistoryWhereInput is used for filtering OrganizationHistory objects.
Input was generated by ent.
"""
input OrganizationHistoryWhereInput {
	not: OrganizationHistoryWhereInput
	and: [OrganizationHistoryWhereInput!]
	or: [OrganizationHistoryWhereInput!]
	"""
	id field predicates
	"""
	id: ID
	idNEQ: ID
	idIn: [ID!]
	idNotIn: [ID!]
	idGT: ID
	idGTE: ID
	idLT: ID
	idLTE: ID
	idEqualFold: ID
	idContainsFold: ID
	"""
	history_time field predicates
	"""
	historyTime: Time
	historyTimeNEQ: Time
	historyTimeIn: [Time!]
	historyTimeNotIn: [Time!]
	historyTimeGT: Time
	historyTimeGTE: Time
	historyTimeLT: Time
	historyTimeLTE: Time
	"""
	ref field predicates
	"""
	ref: String
	refNEQ: String
	refIn: [String!]
	refNotIn: [String!]
	refGT: String
	refGTE: String
	refLT: String
	refLTE: String
	refContains: String
	refHasPrefix: String
	refHasSuffix: String
	refIsNil: Boolean
	refNotNil: Boolean
	refEqualFold: String
	refContainsFold: String
	"""
	operation field predicates
	"""
	operation: OrganizationHistoryOpType
	operationNEQ: OrganizationHistoryOpType
	operationIn: [OrganizationHistoryOpType!]
	operationNotIn: [OrganizationHistoryOpType!]
	"""
	created_at field predicates
	"""
	createdAt: Time
	createdAtNEQ: Time
	createdAtIn: [Time!]
	createdAtNotIn: [Time!]
	createdAtGT: Time
	createdAtGTE: Time
	createdAtLT: Time
	createdAtLTE: Time
	createdAtIsNil: Boolean
	createdAtNotNil: Boolean
	"""
	updated_at field predicates
	"""
	updatedAt: Time
	updatedAtNEQ: Time
	updatedAtIn: [Time!]
	updatedAtNotIn: [Time!]
	updatedAtGT: Time
	updatedAtGTE: Time
	updatedAtLT: Time
	updatedAtLTE: Time
	updatedAtIsNil: Boolean
	updatedAtNotNil: Boolean
	"""
	created_by field predicates
	"""
	createdBy: String
	createdByNEQ: String
	createdByIn: [String!]
	createdByNotIn: [String!]
	createdByGT: String
	createdByGTE: String
	createdByLT: String
	createdByLTE: String
	createdByContains: String
	createdByHasPrefix: String
	createdByHasSuffix: String
	createdByIsNil: Boolean
	createdByNotNil: Boolean
	createdByEqualFold: String
	createdByContainsFold: String
	"""
	updated_by field predicates
	"""
	updatedBy: String
	updatedByNEQ: String
	updatedByIn: [String!]
	updatedByNotIn: [String!]
	updatedByGT: String
	updatedByGTE: String
	updatedByLT: String
	updatedByLTE: String
	updatedByContains: String
	updatedByHasPrefix: String
	updatedByHasSuffix: String
	updatedByIsNil: Boolean
	updatedByNotNil: Boolean
	updatedByEqualFold: String
	updatedByContainsFold: String
	"""
	deleted_at field predicates
	"""
	deletedAt: Time
	deletedAtNEQ: Time
	deletedAtIn: [Time!]
	deletedAtNotIn: [Time!]
	deletedAtGT: Time
	deletedAtGTE: Time
	deletedAtLT: Time
	deletedAtLTE: Time
	deletedAtIsNil: Boolean
	deletedAtNotNil: Boolean
	"""
	deleted_by field predicates
	"""
	deletedBy: String
	deletedByNEQ: String
	deletedByIn: [String!]
	deletedByNotIn: [String!]
	deletedByGT: String
	deletedByGTE: String
	deletedByLT: String
	deletedByLTE: String
	deletedByContains: String
	deletedByHasPrefix: String
	deletedByHasSuffix: String
	deletedByIsNil: Boolean
	deletedByNotNil: Boolean
	deletedByEqualFold: String
	deletedByContainsFold: String
	"""
	display_name field predicates
	"""
	displayName: String
	displayNameNEQ: String
	displayNameIn: [String!]
	displayNameNotIn: [String!]
	displayNameGT: String
	displayNameGTE: String
	displayNameLT: String
	displayNameLTE: String
	displayNameContains: String
	displayNameHasPrefix: String
	displayNameHasSuffix: String
	displayNameEqualFold: String
	displayNameContainsFold: String
	"""
	parent_organization_id field predicates
	"""
	parentOrganizationID: ID
	parentOrganizationIDNEQ: ID
	parentOrganizationIDIn: [ID!]
	parentOrganizationIDNotIn: [ID!]
	parentOrganizationIDGT: ID
	parentOrganizationIDGTE: ID
	parentOrganizationIDLT: ID
	parentOrganizationIDLTE: ID
	parentOrganizationIDContains: ID
	parentOrganizationIDHasPrefix: ID
	parentOrganizationIDHasSuffix: ID
	parentOrganizationIDIsNil: Boolean
	parentOrganizationIDNotNil: Boolean
	parentOrganizationIDEqualFold: ID
	parentOrganizationIDContainsFold: ID
	"""
	personal_org field predicates
	"""
	personalOrg: Boolean
	personalOrgNEQ: Boolean
	personalOrgIsNil: Boolean
	personalOrgNotNil: Boolean
	"""
	avatar_remote_url field predicates
	"""
	avatarRemoteURL: String
	avatarRemoteURLNEQ: String
	avatarRemoteURLIn: [String!]
	avatarRemoteURLNotIn: [String!]
	avatarRemoteURLGT: String
	avatarRemoteURLGTE: String
	avatarRemoteURLLT: String
	avatarRemoteURLLTE: String
	avatarRemoteURLContains: String
	avatarRemoteURLHasPrefix: String
	avatarRemoteURLHasSuffix: String
	avatarRemoteURLIsNil: Boolean
	avatarRemoteURLNotNil: Boolean
	avatarRemoteURLEqualFold: String
	avatarRemoteURLContainsFold: String
}
"""
Ordering options for Organization connections
"""
input OrganizationOrder {
	"""
	The ordering direction.
	"""
	direction: OrderDirection! = ASC
	"""
	The field by which to order Organizations.
	"""
	field: OrganizationOrderField!
}
"""
Properties by which Organization connections can be ordered.
"""
enum OrganizationOrderField {
	name
	display_name
}
type OrganizationSetting implements Node {
	id: ID!
	createdAt: Time
	updatedAt: Time
	createdBy: String
	updatedBy: String
	deletedAt: Time
	deletedBy: String
	"""
	domains associated with the organization
	"""
	domains: [String!]
	"""
	Name of the person to contact for billing
	"""
	billingContact: String
	"""
	Email address of the person to contact for billing
	"""
	billingEmail: String
	"""
	Phone number to contact for billing
	"""
	billingPhone: String
	"""
	Address to send billing information to
	"""
	billingAddress: String
	"""
	Usually government-issued tax ID or business ID such as ABN in Australia
	"""
	taxIdentifier: String
	"""
	tags associated with the object
	"""
	tags: [String!]
	"""
	geographical location of the organization
	"""
	geoLocation: OrganizationSettingRegion
	"""
	the ID of the organization the settings belong to
	"""
	organizationID: ID
	organization: Organization
}
"""
A connection to a list of items.
"""
type OrganizationSettingConnection {
	"""
	A list of edges.
	"""
	edges: [OrganizationSettingEdge]
	"""
	Information to aid in pagination.
	"""
	pageInfo: PageInfo!
	"""
	Identifies the total count of items in the connection.
	"""
	totalCount: Int!
}
"""
Return response for createOrganizationSetting mutation
"""
type OrganizationSettingCreatePayload {
	"""
	Created organizationSetting
	"""
	organizationSetting: OrganizationSetting!
}
"""
Return response for deleteOrganizationSetting mutation
"""
type OrganizationSettingDeletePayload {
	"""
	Deleted organizationSetting ID
	"""
	deletedID: ID!
}
"""
An edge in a connection.
"""
type OrganizationSettingEdge {
	"""
	The item at the end of the edge.
	"""
	node: OrganizationSetting
	"""
	A cursor for use in pagination.
	"""
	cursor: Cursor!
}
type OrganizationSettingHistory implements Node {
	id: ID!
	historyTime: Time!
	ref: String
	operation: OrganizationSettingHistoryOpType!
	createdAt: Time
	updatedAt: Time
	createdBy: String
	updatedBy: String
	deletedAt: Time
	deletedBy: String
	"""
	domains associated with the organization
	"""
	domains: [String!]
	"""
	Name of the person to contact for billing
	"""
	billingContact: String
	"""
	Email address of the person to contact for billing
	"""
	billingEmail: String
	"""
	Phone number to contact for billing
	"""
	billingPhone: String
	"""
	Address to send billing information to
	"""
	billingAddress: String
	"""
	Usually government-issued tax ID or business ID such as ABN in Australia
	"""
	taxIdentifier: String
	"""
	tags associated with the object
	"""
	tags: [String!]
	"""
	geographical location of the organization
	"""
	geoLocation: OrganizationSettingHistoryRegion
	"""
	the ID of the organization the settings belong to
	"""
	organizationID: String
}
"""
OrganizationSettingHistoryOpType is enum for the field operation
"""
enum OrganizationSettingHistoryOpType @goModel(model: "github.com/datumforge/enthistory.OpType") {
	INSERT
	UPDATE
	DELETE
}
"""
OrganizationSettingHistoryRegion is enum for the field geo_location
"""
enum OrganizationSettingHistoryRegion @goModel(model: "github.com/datumforge/datum/internal/ent/enums.Region") {
	AMER
	EMEA
	APAC
}
"""
OrganizationSettingHistoryWhereInput is used for filtering OrganizationSettingHistory objects.
Input was generated by ent.
"""
input OrganizationSettingHistoryWhereInput {
	not: OrganizationSettingHistoryWhereInput
	and: [OrganizationSettingHistoryWhereInput!]
	or: [OrganizationSettingHistoryWhereInput!]
	"""
	id field predicates
	"""
	id: ID
	idNEQ: ID
	idIn: [ID!]
	idNotIn: [ID!]
	idGT: ID
	idGTE: ID
	idLT: ID
	idLTE: ID
	idEqualFold: ID
	idContainsFold: ID
	"""
	history_time field predicates
	"""
	historyTime: Time
	historyTimeNEQ: Time
	historyTimeIn: [Time!]
	historyTimeNotIn: [Time!]
	historyTimeGT: Time
	historyTimeGTE: Time
	historyTimeLT: Time
	historyTimeLTE: Time
	"""
	ref field predicates
	"""
	ref: String
	refNEQ: String
	refIn: [String!]
	refNotIn: [String!]
	refGT: String
	refGTE: String
	refLT: String
	refLTE: String
	refContains: String
	refHasPrefix: String
	refHasSuffix: String
	refIsNil: Boolean
	refNotNil: Boolean
	refEqualFold: String
	refContainsFold: String
	"""
	operation field predicates
	"""
	operation: OrganizationSettingHistoryOpType
	operationNEQ: OrganizationSettingHistoryOpType
	operationIn: [OrganizationSettingHistoryOpType!]
	operationNotIn: [OrganizationSettingHistoryOpType!]
	"""
	created_at field predicates
	"""
	createdAt: Time
	createdAtNEQ: Time
	createdAtIn: [Time!]
	createdAtNotIn: [Time!]
	createdAtGT: Time
	createdAtGTE: Time
	createdAtLT: Time
	createdAtLTE: Time
	createdAtIsNil: Boolean
	createdAtNotNil: Boolean
	"""
	updated_at field predicates
	"""
	updatedAt: Time
	updatedAtNEQ: Time
	updatedAtIn: [Time!]
	updatedAtNotIn: [Time!]
	updatedAtGT: Time
	updatedAtGTE: Time
	updatedAtLT: Time
	updatedAtLTE: Time
	updatedAtIsNil: Boolean
	updatedAtNotNil: Boolean
	"""
	created_by field predicates
	"""
	createdBy: String
	createdByNEQ: String
	createdByIn: [String!]
	createdByNotIn: [String!]
	createdByGT: String
	createdByGTE: String
	createdByLT: String
	createdByLTE: String
	createdByContains: String
	createdByHasPrefix: String
	createdByHasSuffix: String
	createdByIsNil: Boolean
	createdByNotNil: Boolean
	createdByEqualFold: String
	createdByContainsFold: String
	"""
	updated_by field predicates
	"""
	updatedBy: String
	updatedByNEQ: String
	updatedByIn: [String!]
	updatedByNotIn: [String!]
	updatedByGT: String
	updatedByGTE: String
	updatedByLT: String
	updatedByLTE: String
	updatedByContains: String
	updatedByHasPrefix: String
	updatedByHasSuffix: String
	updatedByIsNil: Boolean
	updatedByNotNil: Boolean
	updatedByEqualFold: String
	updatedByContainsFold: String
	"""
	deleted_at field predicates
	"""
	deletedAt: Time
	deletedAtNEQ: Time
	deletedAtIn: [Time!]
	deletedAtNotIn: [Time!]
	deletedAtGT: Time
	deletedAtGTE: Time
	deletedAtLT: Time
	deletedAtLTE: Time
	deletedAtIsNil: Boolean
	deletedAtNotNil: Boolean
	"""
	deleted_by field predicates
	"""
	deletedBy: String
	deletedByNEQ: String
	deletedByIn: [String!]
	deletedByNotIn: [String!]
	deletedByGT: String
	deletedByGTE: String
	deletedByLT: String
	deletedByLTE: String
	deletedByContains: String
	deletedByHasPrefix: String
	deletedByHasSuffix: String
	deletedByIsNil: Boolean
	deletedByNotNil: Boolean
	deletedByEqualFold: String
	deletedByContainsFold: String
	"""
	billing_contact field predicates
	"""
	billingContact: String
	billingContactNEQ: String
	billingContactIn: [String!]
	billingContactNotIn: [String!]
	billingContactGT: String
	billingContactGTE: String
	billingContactLT: String
	billingContactLTE: String
	billingContactContains: String
	billingContactHasPrefix: String
	billingContactHasSuffix: String
	billingContactIsNil: Boolean
	billingContactNotNil: Boolean
	billingContactEqualFold: String
	billingContactContainsFold: String
	"""
	billing_email field predicates
	"""
	billingEmail: String
	billingEmailNEQ: String
	billingEmailIn: [String!]
	billingEmailNotIn: [String!]
	billingEmailGT: String
	billingEmailGTE: String
	billingEmailLT: String
	billingEmailLTE: String
	billingEmailContains: String
	billingEmailHasPrefix: String
	billingEmailHasSuffix: String
	billingEmailIsNil: Boolean
	billingEmailNotNil: Boolean
	billingEmailEqualFold: String
	billingEmailContainsFold: String
	"""
	billing_phone field predicates
	"""
	billingPhone: String
	billingPhoneNEQ: String
	billingPhoneIn: [String!]
	billingPhoneNotIn: [String!]
	billingPhoneGT: String
	billingPhoneGTE: String
	billingPhoneLT: String
	billingPhoneLTE: String
	billingPhoneContains: String
	billingPhoneHasPrefix: String
	billingPhoneHasSuffix: String
	billingPhoneIsNil: Boolean
	billingPhoneNotNil: Boolean
	billingPhoneEqualFold: String
	billingPhoneContainsFold: String
	"""
	billing_address field predicates
	"""
	billingAddress: String
	billingAddressNEQ: String
	billingAddressIn: [String!]
	billingAddressNotIn: [String!]
	billingAddressGT: String
	billingAddressGTE: String
	billingAddressLT: String
	billingAddressLTE: String
	billingAddressContains: String
	billingAddressHasPrefix: String
	billingAddressHasSuffix: String
	billingAddressIsNil: Boolean
	billingAddressNotNil: Boolean
	billingAddressEqualFold: String
	billingAddressContainsFold: String
	"""
	tax_identifier field predicates
	"""
	taxIdentifier: String
	taxIdentifierNEQ: String
	taxIdentifierIn: [String!]
	taxIdentifierNotIn: [String!]
	taxIdentifierGT: String
	taxIdentifierGTE: String
	taxIdentifierLT: String
	taxIdentifierLTE: String
	taxIdentifierContains: String
	taxIdentifierHasPrefix: String
	taxIdentifierHasSuffix: String
	taxIdentifierIsNil: Boolean
	taxIdentifierNotNil: Boolean
	taxIdentifierEqualFold: String
	taxIdentifierContainsFold: String
	"""
	geo_location field predicates
	"""
	geoLocation: OrganizationSettingHistoryRegion
	geoLocationNEQ: OrganizationSettingHistoryRegion
	geoLocationIn: [OrganizationSettingHistoryRegion!]
	geoLocationNotIn: [OrganizationSettingHistoryRegion!]
	geoLocationIsNil: Boolean
	geoLocationNotNil: Boolean
	"""
	organization_id field predicates
	"""
	organizationID: String
	organizationIDNEQ: String
	organizationIDIn: [String!]
	organizationIDNotIn: [String!]
	organizationIDGT: String
	organizationIDGTE: String
	organizationIDLT: String
	organizationIDLTE: String
	organizationIDContains: String
	organizationIDHasPrefix: String
	organizationIDHasSuffix: String
	organizationIDIsNil: Boolean
	organizationIDNotNil: Boolean
	organizationIDEqualFold: String
	organizationIDContainsFold: String
}
"""
OrganizationSettingRegion is enum for the field geo_location
"""
enum OrganizationSettingRegion @goModel(model: "github.com/datumforge/datum/internal/ent/enums.Region") {
	AMER
	EMEA
	APAC
}
"""
Return response for updateOrganizationSetting mutation
"""
type OrganizationSettingUpdatePayload {
	"""
	Updated organizationSetting
	"""
	organizationSetting: OrganizationSetting!
}
"""
OrganizationSettingWhereInput is used for filtering OrganizationSetting objects.
Input was generated by ent.
"""
input OrganizationSettingWhereInput {
	not: OrganizationSettingWhereInput
	and: [OrganizationSettingWhereInput!]
	or: [OrganizationSettingWhereInput!]
	"""
	id field predicates
	"""
	id: ID
	idNEQ: ID
	idIn: [ID!]
	idNotIn: [ID!]
	idGT: ID
	idGTE: ID
	idLT: ID
	idLTE: ID
	idEqualFold: ID
	idContainsFold: ID
	"""
	created_at field predicates
	"""
	createdAt: Time
	createdAtNEQ: Time
	createdAtIn: [Time!]
	createdAtNotIn: [Time!]
	createdAtGT: Time
	createdAtGTE: Time
	createdAtLT: Time
	createdAtLTE: Time
	createdAtIsNil: Boolean
	createdAtNotNil: Boolean
	"""
	updated_at field predicates
	"""
	updatedAt: Time
	updatedAtNEQ: Time
	updatedAtIn: [Time!]
	updatedAtNotIn: [Time!]
	updatedAtGT: Time
	updatedAtGTE: Time
	updatedAtLT: Time
	updatedAtLTE: Time
	updatedAtIsNil: Boolean
	updatedAtNotNil: Boolean
	"""
	created_by field predicates
	"""
	createdBy: String
	createdByNEQ: String
	createdByIn: [String!]
	createdByNotIn: [String!]
	createdByGT: String
	createdByGTE: String
	createdByLT: String
	createdByLTE: String
	createdByContains: String
	createdByHasPrefix: String
	createdByHasSuffix: String
	createdByIsNil: Boolean
	createdByNotNil: Boolean
	createdByEqualFold: String
	createdByContainsFold: String
	"""
	updated_by field predicates
	"""
	updatedBy: String
	updatedByNEQ: String
	updatedByIn: [String!]
	updatedByNotIn: [String!]
	updatedByGT: String
	updatedByGTE: String
	updatedByLT: String
	updatedByLTE: String
	updatedByContains: String
	updatedByHasPrefix: String
	updatedByHasSuffix: String
	updatedByIsNil: Boolean
	updatedByNotNil: Boolean
	updatedByEqualFold: String
	updatedByContainsFold: String
	"""
	deleted_at field predicates
	"""
	deletedAt: Time
	deletedAtNEQ: Time
	deletedAtIn: [Time!]
	deletedAtNotIn: [Time!]
	deletedAtGT: Time
	deletedAtGTE: Time
	deletedAtLT: Time
	deletedAtLTE: Time
	deletedAtIsNil: Boolean
	deletedAtNotNil: Boolean
	"""
	deleted_by field predicates
	"""
	deletedBy: String
	deletedByNEQ: String
	deletedByIn: [String!]
	deletedByNotIn: [String!]
	deletedByGT: String
	deletedByGTE: String
	deletedByLT: String
	deletedByLTE: String
	deletedByContains: String
	deletedByHasPrefix: String
	deletedByHasSuffix: String
	deletedByIsNil: Boolean
	deletedByNotNil: Boolean
	deletedByEqualFold: String
	deletedByContainsFold: String
	"""
	billing_contact field predicates
	"""
	billingContact: String
	billingContactNEQ: String
	billingContactIn: [String!]
	billingContactNotIn: [String!]
	billingContactGT: String
	billingContactGTE: String
	billingContactLT: String
	billingContactLTE: String
	billingContactContains: String
	billingContactHasPrefix: String
	billingContactHasSuffix: String
	billingContactIsNil: Boolean
	billingContactNotNil: Boolean
	billingContactEqualFold: String
	billingContactContainsFold: String
	"""
	billing_email field predicates
	"""
	billingEmail: String
	billingEmailNEQ: String
	billingEmailIn: [String!]
	billingEmailNotIn: [String!]
	billingEmailGT: String
	billingEmailGTE: String
	billingEmailLT: String
	billingEmailLTE: String
	billingEmailContains: String
	billingEmailHasPrefix: String
	billingEmailHasSuffix: String
	billingEmailIsNil: Boolean
	billingEmailNotNil: Boolean
	billingEmailEqualFold: String
	billingEmailContainsFold: String
	"""
	billing_phone field predicates
	"""
	billingPhone: String
	billingPhoneNEQ: String
	billingPhoneIn: [String!]
	billingPhoneNotIn: [String!]
	billingPhoneGT: String
	billingPhoneGTE: String
	billingPhoneLT: String
	billingPhoneLTE: String
	billingPhoneContains: String
	billingPhoneHasPrefix: String
	billingPhoneHasSuffix: String
	billingPhoneIsNil: Boolean
	billingPhoneNotNil: Boolean
	billingPhoneEqualFold: String
	billingPhoneContainsFold: String
	"""
	billing_address field predicates
	"""
	billingAddress: String
	billingAddressNEQ: String
	billingAddressIn: [String!]
	billingAddressNotIn: [String!]
	billingAddressGT: String
	billingAddressGTE: String
	billingAddressLT: String
	billingAddressLTE: String
	billingAddressContains: String
	billingAddressHasPrefix: String
	billingAddressHasSuffix: String
	billingAddressIsNil: Boolean
	billingAddressNotNil: Boolean
	billingAddressEqualFold: String
	billingAddressContainsFold: String
	"""
	tax_identifier field predicates
	"""
	taxIdentifier: String
	taxIdentifierNEQ: String
	taxIdentifierIn: [String!]
	taxIdentifierNotIn: [String!]
	taxIdentifierGT: String
	taxIdentifierGTE: String
	taxIdentifierLT: String
	taxIdentifierLTE: String
	taxIdentifierContains: String
	taxIdentifierHasPrefix: String
	taxIdentifierHasSuffix: String
	taxIdentifierIsNil: Boolean
	taxIdentifierNotNil: Boolean
	taxIdentifierEqualFold: String
	taxIdentifierContainsFold: String
	"""
	geo_location field predicates
	"""
	geoLocation: OrganizationSettingRegion
	geoLocationNEQ: OrganizationSettingRegion
	geoLocationIn: [OrganizationSettingRegion!]
	geoLocationNotIn: [OrganizationSettingRegion!]
	geoLocationIsNil: Boolean
	geoLocationNotNil: Boolean
	"""
	organization_id field predicates
	"""
	organizationID: ID
	organizationIDNEQ: ID
	organizationIDIn: [ID!]
	organizationIDNotIn: [ID!]
	organizationIDGT: ID
	organizationIDGTE: ID
	organizationIDLT: ID
	organizationIDLTE: ID
	organizationIDContains: ID
	organizationIDHasPrefix: ID
	organizationIDHasSuffix: ID
	organizationIDIsNil: Boolean
	organizationIDNotNil: Boolean
	organizationIDEqualFold: ID
	organizationIDContainsFold: ID
	"""
	organization edge predicates
	"""
	hasOrganization: Boolean
	hasOrganizationWith: [OrganizationWhereInput!]
}
"""
Return response for updateOrganization mutation
"""
type OrganizationUpdatePayload {
	"""
	Updated organization
	"""
	organization: Organization!
}
"""
OrganizationWhereInput is used for filtering Organization objects.
Input was generated by ent.
"""
input OrganizationWhereInput {
	not: OrganizationWhereInput
	and: [OrganizationWhereInput!]
	or: [OrganizationWhereInput!]
	"""
	id field predicates
	"""
	id: ID
	idNEQ: ID
	idIn: [ID!]
	idNotIn: [ID!]
	idGT: ID
	idGTE: ID
	idLT: ID
	idLTE: ID
	idEqualFold: ID
	idContainsFold: ID
	"""
	created_at field predicates
	"""
	createdAt: Time
	createdAtNEQ: Time
	createdAtIn: [Time!]
	createdAtNotIn: [Time!]
	createdAtGT: Time
	createdAtGTE: Time
	createdAtLT: Time
	createdAtLTE: Time
	createdAtIsNil: Boolean
	createdAtNotNil: Boolean
	"""
	updated_at field predicates
	"""
	updatedAt: Time
	updatedAtNEQ: Time
	updatedAtIn: [Time!]
	updatedAtNotIn: [Time!]
	updatedAtGT: Time
	updatedAtGTE: Time
	updatedAtLT: Time
	updatedAtLTE: Time
	updatedAtIsNil: Boolean
	updatedAtNotNil: Boolean
	"""
	created_by field predicates
	"""
	createdBy: String
	createdByNEQ: String
	createdByIn: [String!]
	createdByNotIn: [String!]
	createdByGT: String
	createdByGTE: String
	createdByLT: String
	createdByLTE: String
	createdByContains: String
	createdByHasPrefix: String
	createdByHasSuffix: String
	createdByIsNil: Boolean
	createdByNotNil: Boolean
	createdByEqualFold: String
	createdByContainsFold: String
	"""
	updated_by field predicates
	"""
	updatedBy: String
	updatedByNEQ: String
	updatedByIn: [String!]
	updatedByNotIn: [String!]
	updatedByGT: String
	updatedByGTE: String
	updatedByLT: String
	updatedByLTE: String
	updatedByContains: String
	updatedByHasPrefix: String
	updatedByHasSuffix: String
	updatedByIsNil: Boolean
	updatedByNotNil: Boolean
	updatedByEqualFold: String
	updatedByContainsFold: String
	"""
	deleted_at field predicates
	"""
	deletedAt: Time
	deletedAtNEQ: Time
	deletedAtIn: [Time!]
	deletedAtNotIn: [Time!]
	deletedAtGT: Time
	deletedAtGTE: Time
	deletedAtLT: Time
	deletedAtLTE: Time
	deletedAtIsNil: Boolean
	deletedAtNotNil: Boolean
	"""
	deleted_by field predicates
	"""
	deletedBy: String
	deletedByNEQ: String
	deletedByIn: [String!]
	deletedByNotIn: [String!]
	deletedByGT: String
	deletedByGTE: String
	deletedByLT: String
	deletedByLTE: String
	deletedByContains: String
	deletedByHasPrefix: String
	deletedByHasSuffix: String
	deletedByIsNil: Boolean
	deletedByNotNil: Boolean
	deletedByEqualFold: String
	deletedByContainsFold: String
	"""
	display_name field predicates
	"""
	displayName: String
	displayNameNEQ: String
	displayNameIn: [String!]
	displayNameNotIn: [String!]
	displayNameGT: String
	displayNameGTE: String
	displayNameLT: String
	displayNameLTE: String
	displayNameContains: String
	displayNameHasPrefix: String
	displayNameHasSuffix: String
	displayNameEqualFold: String
	displayNameContainsFold: String
	"""
	parent_organization_id field predicates
	"""
	parentOrganizationID: ID
	parentOrganizationIDNEQ: ID
	parentOrganizationIDIn: [ID!]
	parentOrganizationIDNotIn: [ID!]
	parentOrganizationIDGT: ID
	parentOrganizationIDGTE: ID
	parentOrganizationIDLT: ID
	parentOrganizationIDLTE: ID
	parentOrganizationIDContains: ID
	parentOrganizationIDHasPrefix: ID
	parentOrganizationIDHasSuffix: ID
	parentOrganizationIDIsNil: Boolean
	parentOrganizationIDNotNil: Boolean
	parentOrganizationIDEqualFold: ID
	parentOrganizationIDContainsFold: ID
	"""
	personal_org field predicates
	"""
	personalOrg: Boolean
	personalOrgNEQ: Boolean
	personalOrgIsNil: Boolean
	personalOrgNotNil: Boolean
	"""
	avatar_remote_url field predicates
	"""
	avatarRemoteURL: String
	avatarRemoteURLNEQ: String
	avatarRemoteURLIn: [String!]
	avatarRemoteURLNotIn: [String!]
	avatarRemoteURLGT: String
	avatarRemoteURLGTE: String
	avatarRemoteURLLT: String
	avatarRemoteURLLTE: String
	avatarRemoteURLContains: String
	avatarRemoteURLHasPrefix: String
	avatarRemoteURLHasSuffix: String
	avatarRemoteURLIsNil: Boolean
	avatarRemoteURLNotNil: Boolean
	avatarRemoteURLEqualFold: String
	avatarRemoteURLContainsFold: String
	"""
	parent edge predicates
	"""
	hasParent: Boolean
	hasParentWith: [OrganizationWhereInput!]
	"""
	children edge predicates
	"""
	hasChildren: Boolean
	hasChildrenWith: [OrganizationWhereInput!]
	"""
	groups edge predicates
	"""
	hasGroups: Boolean
	hasGroupsWith: [GroupWhereInput!]
	"""
	templates edge predicates
	"""
	hasTemplates: Boolean
	hasTemplatesWith: [TemplateWhereInput!]
	"""
	integrations edge predicates
	"""
	hasIntegrations: Boolean
	hasIntegrationsWith: [IntegrationWhereInput!]
	"""
	setting edge predicates
	"""
	hasSetting: Boolean
	hasSettingWith: [OrganizationSettingWhereInput!]
	"""
	entitlements edge predicates
	"""
	hasEntitlements: Boolean
	hasEntitlementsWith: [EntitlementWhereInput!]
	"""
	personal_access_tokens edge predicates
	"""
	hasPersonalAccessTokens: Boolean
	hasPersonalAccessTokensWith: [PersonalAccessTokenWhereInput!]
	"""
	oauthprovider edge predicates
	"""
	hasOauthprovider: Boolean
	hasOauthproviderWith: [OauthProviderWhereInput!]
	"""
	users edge predicates
	"""
	hasUsers: Boolean
	hasUsersWith: [UserWhereInput!]
	"""
	invites edge predicates
	"""
	hasInvites: Boolean
	hasInvitesWith: [InviteWhereInput!]
	"""
	subscribers edge predicates
	"""
	hasSubscribers: Boolean
	hasSubscribersWith: [SubscriberWhereInput!]
	"""
	members edge predicates
	"""
	hasMembers: Boolean
	hasMembersWith: [OrgMembershipWhereInput!]
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
	"""
	When paginating forwards, are there more items?
	"""
	hasNextPage: Boolean!
	"""
	When paginating backwards, are there more items?
	"""
	hasPreviousPage: Boolean!
	"""
	When paginating backwards, the cursor to continue.
	"""
	startCursor: Cursor
	"""
	When paginating forwards, the cursor to continue.
	"""
	endCursor: Cursor
}
type PersonalAccessToken implements Node {
	id: ID!
	createdAt: Time
	updatedAt: Time
	createdBy: String
	updatedBy: String
	deletedAt: Time
	deletedBy: String
	"""
	the name associated with the token
	"""
	name: String!
	token: String!
	"""
	when the token expires
	"""
	expiresAt: Time!
	"""
	a description of the token's purpose
	"""
	description: String
	scopes: [String!]
	lastUsedAt: Time
	owner: User!
	"""
	the organization(s) the token is associated with
	"""
	organizations: [Organization!]
}
"""
A connection to a list of items.
"""
type PersonalAccessTokenConnection {
	"""
	A list of edges.
	"""
	edges: [PersonalAccessTokenEdge]
	"""
	Information to aid in pagination.
	"""
	pageInfo: PageInfo!
	"""
	Identifies the total count of items in the connection.
	"""
	totalCount: Int!
}
"""
Return response for createPersonalAccessToken mutation
"""
type PersonalAccessTokenCreatePayload {
	"""
	Created personalAccessToken
	"""
	personalAccessToken: PersonalAccessToken!
}
"""
Return response for deletePersonalAccessToken mutation
"""
type PersonalAccessTokenDeletePayload {
	"""
	Deleted personalAccessToken ID
	"""
	deletedID: ID!
}
"""
An edge in a connection.
"""
type PersonalAccessTokenEdge {
	"""
	The item at the end of the edge.
	"""
	node: PersonalAccessToken
	"""
	A cursor for use in pagination.
	"""
	cursor: Cursor!
}
"""
Return response for updatePersonalAccessToken mutation
"""
type PersonalAccessTokenUpdatePayload {
	"""
	Updated personalAccessToken
	"""
	personalAccessToken: PersonalAccessToken!
}
"""
PersonalAccessTokenWhereInput is used for filtering PersonalAccessToken objects.
Input was generated by ent.
"""
input PersonalAccessTokenWhereInput {
	not: PersonalAccessTokenWhereInput
	and: [PersonalAccessTokenWhereInput!]
	or: [PersonalAccessTokenWhereInput!]
	"""
	id field predicates
	"""
	id: ID
	idNEQ: ID
	idIn: [ID!]
	idNotIn: [ID!]
	idGT: ID
	idGTE: ID
	idLT: ID
	idLTE: ID
	idEqualFold: ID
	idContainsFold: ID
	"""
	created_at field predicates
	"""
	createdAt: Time
	createdAtNEQ: Time
	createdAtIn: [Time!]
	createdAtNotIn: [Time!]
	createdAtGT: Time
	createdAtGTE: Time
	createdAtLT: Time
	createdAtLTE: Time
	createdAtIsNil: Boolean
	createdAtNotNil: Boolean
	"""
	updated_at field predicates
	"""
	updatedAt: Time
	updatedAtNEQ: Time
	updatedAtIn: [Time!]
	updatedAtNotIn: [Time!]
	updatedAtGT: Time
	updatedAtGTE: Time
	updatedAtLT: Time
	updatedAtLTE: Time
	updatedAtIsNil: Boolean
	updatedAtNotNil: Boolean
	"""
	created_by field predicates
	"""
	createdBy: String
	createdByNEQ: String
	createdByIn: [String!]
	createdByNotIn: [String!]
	createdByGT: String
	createdByGTE: String
	createdByLT: String
	createdByLTE: String
	createdByContains: String
	createdByHasPrefix: String
	createdByHasSuffix: String
	createdByIsNil: Boolean
	createdByNotNil: Boolean
	createdByEqualFold: String
	createdByContainsFold: String
	"""
	updated_by field predicates
	"""
	updatedBy: String
	updatedByNEQ: String
	updatedByIn: [String!]
	updatedByNotIn: [String!]
	updatedByGT: String
	updatedByGTE: String
	updatedByLT: String
	updatedByLTE: String
	updatedByContains: String
	updatedByHasPrefix: String
	updatedByHasSuffix: String
	updatedByIsNil: Boolean
	updatedByNotNil: Boolean
	updatedByEqualFold: String
	updatedByContainsFold: String
	"""
	deleted_at field predicates
	"""
	deletedAt: Time
	deletedAtNEQ: Time
	deletedAtIn: [Time!]
	deletedAtNotIn: [Time!]
	deletedAtGT: Time
	deletedAtGTE: Time
	deletedAtLT: Time
	deletedAtLTE: Time
	deletedAtIsNil: Boolean
	deletedAtNotNil: Boolean
	"""
	deleted_by field predicates
	"""
	deletedBy: String
	deletedByNEQ: String
	deletedByIn: [String!]
	deletedByNotIn: [String!]
	deletedByGT: String
	deletedByGTE: String
	deletedByLT: String
	deletedByLTE: String
	deletedByContains: String
	deletedByHasPrefix: String
	deletedByHasSuffix: String
	deletedByIsNil: Boolean
	deletedByNotNil: Boolean
	deletedByEqualFold: String
	deletedByContainsFold: String
	"""
	name field predicates
	"""
	name: String
	nameNEQ: String
	nameIn: [String!]
	nameNotIn: [String!]
	nameGT: String
	nameGTE: String
	nameLT: String
	nameLTE: String
	nameContains: String
	nameHasPrefix: String
	nameHasSuffix: String
	nameEqualFold: String
	nameContainsFold: String
	"""
	expires_at field predicates
	"""
	expiresAt: Time
	expiresAtNEQ: Time
	expiresAtIn: [Time!]
	expiresAtNotIn: [Time!]
	expiresAtGT: Time
	expiresAtGTE: Time
	expiresAtLT: Time
	expiresAtLTE: Time
	"""
	last_used_at field predicates
	"""
	lastUsedAt: Time
	lastUsedAtNEQ: Time
	lastUsedAtIn: [Time!]
	lastUsedAtNotIn: [Time!]
	lastUsedAtGT: Time
	lastUsedAtGTE: Time
	lastUsedAtLT: Time
	lastUsedAtLTE: Time
	lastUsedAtIsNil: Boolean
	lastUsedAtNotNil: Boolean
	"""
	owner edge predicates
	"""
	hasOwner: Boolean
	hasOwnerWith: [UserWhereInput!]
	"""
	organizations edge predicates
	"""
	hasOrganizations: Boolean
	hasOrganizationsWith: [OrganizationWhereInput!]
}
type Query {
	"""
	Fetches an object given its ID.
	"""
	node(
		"""
		ID of the object.
		"""
		id: ID!
	): Node
	"""
	Lookup nodes by a list of IDs.
	"""
	nodes(
		"""
		The list of node IDs.
		"""
		ids: [ID!]!
	): [Node]!
	entitlements(
		"""
		Returns the elements in the list that come after the specified cursor.
		"""
		after: Cursor

		"""
		Returns the first _n_ elements from the list.
		"""
		first: Int

		"""
		Returns the elements in the list that come before the specified cursor.
		"""
		before: Cursor

		"""
		Returns the last _n_ elements from the list.
		"""
		last: Int

		"""
		Filtering options for Entitlements returned from the connection.
		"""
		where: EntitlementWhereInput
	): EntitlementConnection!
	groups(
		"""
		Returns the elements in the list that come after the specified cursor.
		"""
		after: Cursor

		"""
		Returns the first _n_ elements from the list.
		"""
		first: Int

		"""
		Returns the elements in the list that come before the specified cursor.
		"""
		before: Cursor

		"""
		Returns the last _n_ elements from the list.
		"""
		last: Int

		"""
		Ordering options for Groups returned from the connection.
		"""
		orderBy: GroupOrder

		"""
		Filtering options for Groups returned from the connection.
		"""
		where: GroupWhereInput
	): GroupConnection!
	groupMemberships(
		"""
		Returns the elements in the list that come after the specified cursor.
		"""
		after: Cursor

		"""
		Returns the first _n_ elements from the list.
		"""
		first: Int

		"""
		Returns the elements in the list that come before the specified cursor.
		"""
		before: Cursor

		"""
		Returns the last _n_ elements from the list.
		"""
		last: Int

		"""
		Filtering options for GroupMemberships returned from the connection.
		"""
		where: GroupMembershipWhereInput
	): GroupMembershipConnection!
	groupSettings(
		"""
		Returns the elements in the list that come after the specified cursor.
		"""
		after: Cursor

		"""
		Returns the first _n_ elements from the list.
		"""
		first: Int

		"""
		Returns the elements in the list that come before the specified cursor.
		"""
		before: Cursor

		"""
		Returns the last _n_ elements from the list.
		"""
		last: Int

		"""
		Filtering options for GroupSettings returned from the connection.
		"""
		where: GroupSettingWhereInput
	): GroupSettingConnection!
	integrations(
		"""
		Returns the elements in the list that come after the specified cursor.
		"""
		after: Cursor

		"""
		Returns the first _n_ elements from the list.
		"""
		first: Int

		"""
		Returns the elements in the list that come before the specified cursor.
		"""
		before: Cursor

		"""
		Returns the last _n_ elements from the list.
		"""
		last: Int

		"""
		Ordering options for Integrations returned from the connection.
		"""
		orderBy: IntegrationOrder

		"""
		Filtering options for Integrations returned from the connection.
		"""
		where: IntegrationWhereInput
	): IntegrationConnection!
	invites(
		"""
		Returns the elements in the list that come after the specified cursor.
		"""
		after: Cursor

		"""
		Returns the first _n_ elements from the list.
		"""
		first: Int

		"""
		Returns the elements in the list that come before the specified cursor.
		"""
		before: Cursor

		"""
		Returns the last _n_ elements from the list.
		"""
		last: Int

		"""
		Filtering options for Invites returned from the connection.
		"""
		where: InviteWhereInput
	): InviteConnection!
	oauthProviders(
		"""
		Returns the elements in the list that come after the specified cursor.
		"""
		after: Cursor

		"""
		Returns the first _n_ elements from the list.
		"""
		first: Int

		"""
		Returns the elements in the list that come before the specified cursor.
		"""
		before: Cursor

		"""
		Returns the last _n_ elements from the list.
		"""
		last: Int

		"""
		Filtering options for OauthProviders returned from the connection.
		"""
		where: OauthProviderWhereInput
	): OauthProviderConnection!
	ohAuthTooTokens(
		"""
		Returns the elements in the list that come after the specified cursor.
		"""
		after: Cursor

		"""
		Returns the first _n_ elements from the list.
		"""
		first: Int

		"""
		Returns the elements in the list that come before the specified cursor.
		"""
		before: Cursor

		"""
		Returns the last _n_ elements from the list.
		"""
		last: Int

		"""
		Filtering options for OhAuthTooTokens returned from the connection.
		"""
		where: OhAuthTooTokenWhereInput
	): OhAuthTooTokenConnection!
	orgMemberships(
		"""
		Returns the elements in the list that come after the specified cursor.
		"""
		after: Cursor

		"""
		Returns the first _n_ elements from the list.
		"""
		first: Int

		"""
		Returns the elements in the list that come before the specified cursor.
		"""
		before: Cursor

		"""
		Returns the last _n_ elements from the list.
		"""
		last: Int

		"""
		Filtering options for OrgMemberships returned from the connection.
		"""
		where: OrgMembershipWhereInput
	): OrgMembershipConnection!
	organizations(
		"""
		Returns the elements in the list that come after the specified cursor.
		"""
		after: Cursor

		"""
		Returns the first _n_ elements from the list.
		"""
		first: Int

		"""
		Returns the elements in the list that come before the specified cursor.
		"""
		before: Cursor

		"""
		Returns the last _n_ elements from the list.
		"""
		last: Int

		"""
		Ordering options for Organizations returned from the connection.
		"""
		orderBy: OrganizationOrder

		"""
		Filtering options for Organizations returned from the connection.
		"""
		where: OrganizationWhereInput
	): OrganizationConnection!
	organizationSettings(
		"""
		Returns the elements in the list that come after the specified cursor.
		"""
		after: Cursor

		"""
		Returns the first _n_ elements from the list.
		"""
		first: Int

		"""
		Returns the elements in the list that come before the specified cursor.
		"""
		before: Cursor

		"""
		Returns the last _n_ elements from the list.
		"""
		last: Int

		"""
		Filtering options for OrganizationSettings returned from the connection.
		"""
		where: OrganizationSettingWhereInput
	): OrganizationSettingConnection!
	personalAccessTokens(
		"""
		Returns the elements in the list that come after the specified cursor.
		"""
		after: Cursor

		"""
		Returns the first _n_ elements from the list.
		"""
		first: Int

		"""
		Returns the elements in the list that come before the specified cursor.
		"""
		before: Cursor

		"""
		Returns the last _n_ elements from the list.
		"""
		last: Int

		"""
		Filtering options for PersonalAccessTokens returned from the connection.
		"""
		where: PersonalAccessTokenWhereInput
	): PersonalAccessTokenConnection!
	subscribers(
		"""
		Returns the elements in the list that come after the specified cursor.
		"""
		after: Cursor

		"""
		Returns the first _n_ elements from the list.
		"""
		first: Int

		"""
		Returns the elements in the list that come before the specified cursor.
		"""
		before: Cursor

		"""
		Returns the last _n_ elements from the list.
		"""
		last: Int

		"""
		Filtering options for Subscribers returned from the connection.
		"""
		where: SubscriberWhereInput
	): SubscriberConnection!
	tfaSettingsSlice(
		"""
		Returns the elements in the list that come after the specified cursor.
		"""
		after: Cursor

		"""
		Returns the first _n_ elements from the list.
		"""
		first: Int

		"""
		Returns the elements in the list that come before the specified cursor.
		"""
		before: Cursor

		"""
		Returns the last _n_ elements from the list.
		"""
		last: Int

		"""
		Filtering options for TFASettingsSlice returned from the connection.
		"""
		where: TFASettingsWhereInput
	): TFASettingsConnection!
	templates(
		"""
		Returns the elements in the list that come after the specified cursor.
		"""
		after: Cursor

		"""
		Returns the first _n_ elements from the list.
		"""
		first: Int

		"""
		Returns the elements in the list that come before the specified cursor.
		"""
		before: Cursor

		"""
		Returns the last _n_ elements from the list.
		"""
		last: Int

		"""
		Ordering options for Templates returned from the connection.
		"""
		orderBy: TemplateOrder

		"""
		Filtering options for Templates returned from the connection.
		"""
		where: TemplateWhereInput
	): TemplateConnection!
	users(
		"""
		Returns the elements in the list that come after the specified cursor.
		"""
		after: Cursor

		"""
		Returns the first _n_ elements from the list.
		"""
		first: Int

		"""
		Returns the elements in the list that come before the specified cursor.
		"""
		before: Cursor

		"""
		Returns the last _n_ elements from the list.
		"""
		last: Int

		"""
		Ordering options for Users returned from the connection.
		"""
		orderBy: UserOrder

		"""
		Filtering options for Users returned from the connection.
		"""
		where: UserWhereInput
	): UserConnection!
	userSettings(
		"""
		Returns the elements in the list that come after the specified cursor.
		"""
		after: Cursor

		"""
		Returns the first _n_ elements from the list.
		"""
		first: Int

		"""
		Returns the elements in the list that come before the specified cursor.
		"""
		before: Cursor

		"""
		Returns the last _n_ elements from the list.
		"""
		last: Int

		"""
		Filtering options for UserSettings returned from the connection.
		"""
		where: UserSettingWhereInput
	): UserSettingConnection!
	"""
	Look up entitlement by ID
	"""
	entitlement(
		"""
		ID of the entitlement
		"""
		id: ID!
	): Entitlement!
	"""
	Look up group by ID
	"""
	group(
		"""
		ID of the group
		"""
		id: ID!
	): Group!
	"""
	Look up groupMembership by ID
	"""
	groupMembership(
		"""
		ID of the groupMembership
		"""
		id: ID!
	): GroupMembership!
	"""
	Look up groupSetting by ID
	"""
	groupSetting(
		"""
		ID of the groupSetting
		"""
		id: ID!
	): GroupSetting!
	"""
	Look up integration by ID
	"""
	integration(
		"""
		ID of the integration
		"""
		id: ID!
	): Integration!
	"""
	Look up invite by ID
	"""
	invite(
		"""
		ID of the invite
		"""
		id: ID!
	): Invite!
	"""
	Look up oauthProvider by ID
	"""
	oauthProvider(
		"""
		ID of the oauthProvider
		"""
		id: ID!
	): OauthProvider!
	"""
	Look up ohAuthTooToken by ID
	"""
	ohAuthTooToken(
		"""
		ID of the ohAuthTooToken
		"""
		id: ID!
	): OhAuthTooToken!
	"""
	Look up organization by ID
	"""
	organization(
		"""
		ID of the organization
		"""
		id: ID!
	): Organization!
	"""
	Look up organizationSetting by ID
	"""
	organizationSetting(
		"""
		ID of the organizationSetting
		"""
		id: ID!
	): OrganizationSetting!
	"""
	Look up orgMembership by ID
	"""
	orgMembership(
		"""
		ID of the orgMembership
		"""
		id: ID!
	): OrgMembership!
	"""
	Look up personalAccessToken by ID
	"""
	personalAccessToken(
		"""
		ID of the personalAccessToken
		"""
		id: ID!
	): PersonalAccessToken!
	"""
	Look up subscriber by ID
	"""
	subscriber(
		"""
		ID of the subscriber
		"""
		id: ID!
	): Subscriber!
	"""
	Look up template by ID
	"""
	template(
		"""
		ID of the template
		"""
		id: ID!
	): Template!
	"""
	Look up tfaSettings for the current user
	"""
	tfaSettings(
		"""
		ID of the tfaSettings
		"""
		id: ID
	): TFASettings!
	"""
	Look up user by ID
	"""
	user(
		"""
		ID of the user
		"""
		id: ID!
	): User!
	"""
	Look up userSetting by ID
	"""
	userSetting(
		"""
		ID of the userSetting
		"""
		id: ID!
	): UserSetting!
}
type Subscriber implements Node {
	id: ID!
	createdAt: Time
	updatedAt: Time
	createdBy: String
	updatedBy: String
	deletedAt: Time
	deletedBy: String
	ownerID: ID
	"""
	email address of the subscriber
	"""
	email: String!
	"""
	phone number of the subscriber
	"""
	phoneNumber: String
	"""
	indicates if the email address has been verified
	"""
	verifiedEmail: Boolean!
	"""
	indicates if the phone number has been verified
	"""
	verifiedPhone: Boolean!
	"""
	indicates if the subscriber is active or not, active users will have at least one verified contact method
	"""
	active: Boolean!
	owner: Organization
}
"""
A connection to a list of items.
"""
type SubscriberConnection {
	"""
	A list of edges.
	"""
	edges: [SubscriberEdge]
	"""
	Information to aid in pagination.
	"""
	pageInfo: PageInfo!
	"""
	Identifies the total count of items in the connection.
	"""
	totalCount: Int!
}
"""
Return response for createSubscriber mutation
"""
type SubscriberCreatePayload {
	"""
	Created subscriber
	"""
	subscriber: Subscriber!
}
"""
Return response for deleteSubscriber mutation
"""
type SubscriberDeletePayload {
	"""
	Deleted subscriber ID
	"""
	deletedID: ID!
}
"""
An edge in a connection.
"""
type SubscriberEdge {
	"""
	The item at the end of the edge.
	"""
	node: Subscriber
	"""
	A cursor for use in pagination.
	"""
	cursor: Cursor!
}
"""
Return response for updateSubscriber mutation
"""
type SubscriberUpdatePayload {
	"""
	Updated subscriber
	"""
	subscriber: Subscriber!
}
"""
SubscriberWhereInput is used for filtering Subscriber objects.
Input was generated by ent.
"""
input SubscriberWhereInput {
	not: SubscriberWhereInput
	and: [SubscriberWhereInput!]
	or: [SubscriberWhereInput!]
	"""
	id field predicates
	"""
	id: ID
	idNEQ: ID
	idIn: [ID!]
	idNotIn: [ID!]
	idGT: ID
	idGTE: ID
	idLT: ID
	idLTE: ID
	idEqualFold: ID
	idContainsFold: ID
	"""
	created_at field predicates
	"""
	createdAt: Time
	createdAtNEQ: Time
	createdAtIn: [Time!]
	createdAtNotIn: [Time!]
	createdAtGT: Time
	createdAtGTE: Time
	createdAtLT: Time
	createdAtLTE: Time
	createdAtIsNil: Boolean
	createdAtNotNil: Boolean
	"""
	updated_at field predicates
	"""
	updatedAt: Time
	updatedAtNEQ: Time
	updatedAtIn: [Time!]
	updatedAtNotIn: [Time!]
	updatedAtGT: Time
	updatedAtGTE: Time
	updatedAtLT: Time
	updatedAtLTE: Time
	updatedAtIsNil: Boolean
	updatedAtNotNil: Boolean
	"""
	created_by field predicates
	"""
	createdBy: String
	createdByNEQ: String
	createdByIn: [String!]
	createdByNotIn: [String!]
	createdByGT: String
	createdByGTE: String
	createdByLT: String
	createdByLTE: String
	createdByContains: String
	createdByHasPrefix: String
	createdByHasSuffix: String
	createdByIsNil: Boolean
	createdByNotNil: Boolean
	createdByEqualFold: String
	createdByContainsFold: String
	"""
	updated_by field predicates
	"""
	updatedBy: String
	updatedByNEQ: String
	updatedByIn: [String!]
	updatedByNotIn: [String!]
	updatedByGT: String
	updatedByGTE: String
	updatedByLT: String
	updatedByLTE: String
	updatedByContains: String
	updatedByHasPrefix: String
	updatedByHasSuffix: String
	updatedByIsNil: Boolean
	updatedByNotNil: Boolean
	updatedByEqualFold: String
	updatedByContainsFold: String
	"""
	deleted_at field predicates
	"""
	deletedAt: Time
	deletedAtNEQ: Time
	deletedAtIn: [Time!]
	deletedAtNotIn: [Time!]
	deletedAtGT: Time
	deletedAtGTE: Time
	deletedAtLT: Time
	deletedAtLTE: Time
	deletedAtIsNil: Boolean
	deletedAtNotNil: Boolean
	"""
	deleted_by field predicates
	"""
	deletedBy: String
	deletedByNEQ: String
	deletedByIn: [String!]
	deletedByNotIn: [String!]
	deletedByGT: String
	deletedByGTE: String
	deletedByLT: String
	deletedByLTE: String
	deletedByContains: String
	deletedByHasPrefix: String
	deletedByHasSuffix: String
	deletedByIsNil: Boolean
	deletedByNotNil: Boolean
	deletedByEqualFold: String
	deletedByContainsFold: String
	"""
	owner_id field predicates
	"""
	ownerID: ID
	ownerIDNEQ: ID
	ownerIDIn: [ID!]
	ownerIDNotIn: [ID!]
	ownerIDGT: ID
	ownerIDGTE: ID
	ownerIDLT: ID
	ownerIDLTE: ID
	ownerIDContains: ID
	ownerIDHasPrefix: ID
	ownerIDHasSuffix: ID
	ownerIDIsNil: Boolean
	ownerIDNotNil: Boolean
	ownerIDEqualFold: ID
	ownerIDContainsFold: ID
	"""
	email field predicates
	"""
	email: String
	emailNEQ: String
	emailIn: [String!]
	emailNotIn: [String!]
	emailGT: String
	emailGTE: String
	emailLT: String
	emailLTE: String
	emailContains: String
	emailHasPrefix: String
	emailHasSuffix: String
	emailEqualFold: String
	emailContainsFold: String
	"""
	phone_number field predicates
	"""
	phoneNumber: String
	phoneNumberNEQ: String
	phoneNumberIn: [String!]
	phoneNumberNotIn: [String!]
	phoneNumberGT: String
	phoneNumberGTE: String
	phoneNumberLT: String
	phoneNumberLTE: String
	phoneNumberContains: String
	phoneNumberHasPrefix: String
	phoneNumberHasSuffix: String
	phoneNumberIsNil: Boolean
	phoneNumberNotNil: Boolean
	phoneNumberEqualFold: String
	phoneNumberContainsFold: String
	"""
	verified_email field predicates
	"""
	verifiedEmail: Boolean
	verifiedEmailNEQ: Boolean
	"""
	verified_phone field predicates
	"""
	verifiedPhone: Boolean
	verifiedPhoneNEQ: Boolean
	"""
	active field predicates
	"""
	active: Boolean
	activeNEQ: Boolean
	"""
	owner edge predicates
	"""
	hasOwner: Boolean
	hasOwnerWith: [OrganizationWhereInput!]
}
type Subscription {
	subscribe(subscriber: String!): String!
}
type TFASettings implements Node {
	id: ID!
	createdAt: Time
	updatedAt: Time
	createdBy: String
	updatedBy: String
	deletedAt: Time
	deletedBy: String
	"""
	TFA secret for the user
	"""
	tfaSecret: String
	"""
	specifies if the TFA device has been verified
	"""
	verified: Boolean!
	"""
	recovery codes for 2fa
	"""
	recoveryCodes: [String!]
	"""
	specifies a user may complete authentication by verifying a TOTP code delivered through an authenticator app
	"""
	totpAllowed: Boolean
	owner: User
}
"""
A connection to a list of items.
"""
type TFASettingsConnection {
	"""
	A list of edges.
	"""
	edges: [TFASettingsEdge]
	"""
	Information to aid in pagination.
	"""
	pageInfo: PageInfo!
	"""
	Identifies the total count of items in the connection.
	"""
	totalCount: Int!
}
"""
Return response for createTFASettings mutation
"""
type TFASettingsCreatePayload {
	"""
	Created tfaSettings
	"""
	tfaSettings: TFASettings!
}
"""
An edge in a connection.
"""
type TFASettingsEdge {
	"""
	The item at the end of the edge.
	"""
	node: TFASettings
	"""
	A cursor for use in pagination.
	"""
	cursor: Cursor!
}
"""
Return response for updateTFASettings mutation
"""
type TFASettingsUpdatePayload {
	"""
	Updated tfaSettings
	"""
	tfaSettings: TFASettings!
}
"""
TFASettingsWhereInput is used for filtering TFASettings objects.
Input was generated by ent.
"""
input TFASettingsWhereInput {
	not: TFASettingsWhereInput
	and: [TFASettingsWhereInput!]
	or: [TFASettingsWhereInput!]
	"""
	id field predicates
	"""
	id: ID
	idNEQ: ID
	idIn: [ID!]
	idNotIn: [ID!]
	idGT: ID
	idGTE: ID
	idLT: ID
	idLTE: ID
	idEqualFold: ID
	idContainsFold: ID
	"""
	created_at field predicates
	"""
	createdAt: Time
	createdAtNEQ: Time
	createdAtIn: [Time!]
	createdAtNotIn: [Time!]
	createdAtGT: Time
	createdAtGTE: Time
	createdAtLT: Time
	createdAtLTE: Time
	createdAtIsNil: Boolean
	createdAtNotNil: Boolean
	"""
	updated_at field predicates
	"""
	updatedAt: Time
	updatedAtNEQ: Time
	updatedAtIn: [Time!]
	updatedAtNotIn: [Time!]
	updatedAtGT: Time
	updatedAtGTE: Time
	updatedAtLT: Time
	updatedAtLTE: Time
	updatedAtIsNil: Boolean
	updatedAtNotNil: Boolean
	"""
	created_by field predicates
	"""
	createdBy: String
	createdByNEQ: String
	createdByIn: [String!]
	createdByNotIn: [String!]
	createdByGT: String
	createdByGTE: String
	createdByLT: String
	createdByLTE: String
	createdByContains: String
	createdByHasPrefix: String
	createdByHasSuffix: String
	createdByIsNil: Boolean
	createdByNotNil: Boolean
	createdByEqualFold: String
	createdByContainsFold: String
	"""
	updated_by field predicates
	"""
	updatedBy: String
	updatedByNEQ: String
	updatedByIn: [String!]
	updatedByNotIn: [String!]
	updatedByGT: String
	updatedByGTE: String
	updatedByLT: String
	updatedByLTE: String
	updatedByContains: String
	updatedByHasPrefix: String
	updatedByHasSuffix: String
	updatedByIsNil: Boolean
	updatedByNotNil: Boolean
	updatedByEqualFold: String
	updatedByContainsFold: String
	"""
	deleted_at field predicates
	"""
	deletedAt: Time
	deletedAtNEQ: Time
	deletedAtIn: [Time!]
	deletedAtNotIn: [Time!]
	deletedAtGT: Time
	deletedAtGTE: Time
	deletedAtLT: Time
	deletedAtLTE: Time
	deletedAtIsNil: Boolean
	deletedAtNotNil: Boolean
	"""
	deleted_by field predicates
	"""
	deletedBy: String
	deletedByNEQ: String
	deletedByIn: [String!]
	deletedByNotIn: [String!]
	deletedByGT: String
	deletedByGTE: String
	deletedByLT: String
	deletedByLTE: String
	deletedByContains: String
	deletedByHasPrefix: String
	deletedByHasSuffix: String
	deletedByIsNil: Boolean
	deletedByNotNil: Boolean
	deletedByEqualFold: String
	deletedByContainsFold: String
	"""
	tfa_secret field predicates
	"""
	tfaSecret: String
	tfaSecretNEQ: String
	tfaSecretIn: [String!]
	tfaSecretNotIn: [String!]
	tfaSecretGT: String
	tfaSecretGTE: String
	tfaSecretLT: String
	tfaSecretLTE: String
	tfaSecretContains: String
	tfaSecretHasPrefix: String
	tfaSecretHasSuffix: String
	tfaSecretIsNil: Boolean
	tfaSecretNotNil: Boolean
	tfaSecretEqualFold: String
	tfaSecretContainsFold: String
	"""
	verified field predicates
	"""
	verified: Boolean
	verifiedNEQ: Boolean
	"""
	totp_allowed field predicates
	"""
	totpAllowed: Boolean
	totpAllowedNEQ: Boolean
	totpAllowedIsNil: Boolean
	totpAllowedNotNil: Boolean
	"""
	owner edge predicates
	"""
	hasOwner: Boolean
	hasOwnerWith: [UserWhereInput!]
}
type Template implements Node {
	id: ID!
	createdAt: Time
	updatedAt: Time
	createdBy: String
	updatedBy: String
	deletedAt: Time
	deletedBy: String
	"""
	the name of the template
	"""
	name: String!
	"""
	the description of the template
	"""
	description: String
	"""
	the jsonschema object of the template
	"""
	jsonconfig: JSON
	owner: Organization!
}
"""
A connection to a list of items.
"""
type TemplateConnection {
	"""
	A list of edges.
	"""
	edges: [TemplateEdge]
	"""
	Information to aid in pagination.
	"""
	pageInfo: PageInfo!
	"""
	Identifies the total count of items in the connection.
	"""
	totalCount: Int!
}
"""
Return response for createTemplate mutation
"""
type TemplateCreatePayload {
	"""
	Created template
	"""
	template: Template!
}
"""
Return response for deleteTemplate mutation
"""
type TemplateDeletePayload {
	"""
	Deleted template ID
	"""
	deletedID: ID!
}
"""
An edge in a connection.
"""
type TemplateEdge {
	"""
	The item at the end of the edge.
	"""
	node: Template
	"""
	A cursor for use in pagination.
	"""
	cursor: Cursor!
}
"""
Ordering options for Template connections
"""
input TemplateOrder {
	"""
	The ordering direction.
	"""
	direction: OrderDirection! = ASC
	"""
	The field by which to order Templates.
	"""
	field: TemplateOrderField!
}
"""
Properties by which Template connections can be ordered.
"""
enum TemplateOrderField {
	name
}
"""
Return response for updateTemplate mutation
"""
type TemplateUpdatePayload {
	"""
	Updated template
	"""
	template: Template!
}
"""
TemplateWhereInput is used for filtering Template objects.
Input was generated by ent.
"""
input TemplateWhereInput {
	not: TemplateWhereInput
	and: [TemplateWhereInput!]
	or: [TemplateWhereInput!]
	"""
	id field predicates
	"""
	id: ID
	idNEQ: ID
	idIn: [ID!]
	idNotIn: [ID!]
	idGT: ID
	idGTE: ID
	idLT: ID
	idLTE: ID
	idEqualFold: ID
	idContainsFold: ID
	"""
	created_at field predicates
	"""
	createdAt: Time
	createdAtNEQ: Time
	createdAtIn: [Time!]
	createdAtNotIn: [Time!]
	createdAtGT: Time
	createdAtGTE: Time
	createdAtLT: Time
	createdAtLTE: Time
	createdAtIsNil: Boolean
	createdAtNotNil: Boolean
	"""
	updated_at field predicates
	"""
	updatedAt: Time
	updatedAtNEQ: Time
	updatedAtIn: [Time!]
	updatedAtNotIn: [Time!]
	updatedAtGT: Time
	updatedAtGTE: Time
	updatedAtLT: Time
	updatedAtLTE: Time
	updatedAtIsNil: Boolean
	updatedAtNotNil: Boolean
	"""
	created_by field predicates
	"""
	createdBy: String
	createdByNEQ: String
	createdByIn: [String!]
	createdByNotIn: [String!]
	createdByGT: String
	createdByGTE: String
	createdByLT: String
	createdByLTE: String
	createdByContains: String
	createdByHasPrefix: String
	createdByHasSuffix: String
	createdByIsNil: Boolean
	createdByNotNil: Boolean
	createdByEqualFold: String
	createdByContainsFold: String
	"""
	updated_by field predicates
	"""
	updatedBy: String
	updatedByNEQ: String
	updatedByIn: [String!]
	updatedByNotIn: [String!]
	updatedByGT: String
	updatedByGTE: String
	updatedByLT: String
	updatedByLTE: String
	updatedByContains: String
	updatedByHasPrefix: String
	updatedByHasSuffix: String
	updatedByIsNil: Boolean
	updatedByNotNil: Boolean
	updatedByEqualFold: String
	updatedByContainsFold: String
	"""
	deleted_at field predicates
	"""
	deletedAt: Time
	deletedAtNEQ: Time
	deletedAtIn: [Time!]
	deletedAtNotIn: [Time!]
	deletedAtGT: Time
	deletedAtGTE: Time
	deletedAtLT: Time
	deletedAtLTE: Time
	deletedAtIsNil: Boolean
	deletedAtNotNil: Boolean
	"""
	deleted_by field predicates
	"""
	deletedBy: String
	deletedByNEQ: String
	deletedByIn: [String!]
	deletedByNotIn: [String!]
	deletedByGT: String
	deletedByGTE: String
	deletedByLT: String
	deletedByLTE: String
	deletedByContains: String
	deletedByHasPrefix: String
	deletedByHasSuffix: String
	deletedByIsNil: Boolean
	deletedByNotNil: Boolean
	deletedByEqualFold: String
	deletedByContainsFold: String
	"""
	name field predicates
	"""
	name: String
	nameNEQ: String
	nameIn: [String!]
	nameNotIn: [String!]
	nameGT: String
	nameGTE: String
	nameLT: String
	nameLTE: String
	nameContains: String
	nameHasPrefix: String
	nameHasSuffix: String
	nameEqualFold: String
	nameContainsFold: String
	"""
	description field predicates
	"""
	description: String
	descriptionNEQ: String
	descriptionIn: [String!]
	descriptionNotIn: [String!]
	descriptionGT: String
	descriptionGTE: String
	descriptionLT: String
	descriptionLTE: String
	descriptionContains: String
	descriptionHasPrefix: String
	descriptionHasSuffix: String
	descriptionIsNil: Boolean
	descriptionNotNil: Boolean
	descriptionEqualFold: String
	descriptionContainsFold: String
	"""
	owner edge predicates
	"""
	hasOwner: Boolean
	hasOwnerWith: [OrganizationWhereInput!]
}
"""
The builtin Time type
"""
scalar Time
"""
UpdateEntitlementInput is used for update Entitlement object.
Input was generated by ent.
"""
input UpdateEntitlementInput {
	updatedAt: Time
	clearUpdatedAt: Boolean
	updatedBy: String
	clearUpdatedBy: Boolean
	tier: EntitlementTier
	"""
	used to store references to external systems, e.g. Stripe
	"""
	externalCustomerID: String
	clearExternalCustomerID: Boolean
	"""
	used to store references to external systems, e.g. Stripe
	"""
	externalSubscriptionID: String
	clearExternalSubscriptionID: Boolean
	"""
	whether or not the customers entitlement expires - expires_at will show the time
	"""
	expires: Boolean
	"""
	the time at which a customer's entitlement will expire, e.g. they've cancelled but paid through the end of the month
	"""
	expiresAt: Time
	clearExpiresAt: Boolean
	"""
	whether or not the customer has cancelled their entitlement - usually used in conjunction with expires and expires at
	"""
	cancelled: Boolean
	ownerID: ID
}
"""
UpdateGroupInput is used for update Group object.
Input was generated by ent.
"""
input UpdateGroupInput {
	updatedAt: Time
	clearUpdatedAt: Boolean
	updatedBy: String
	clearUpdatedBy: Boolean
	"""
	the name of the group - must be unique within the organization
	"""
	name: String
	"""
	the groups description
	"""
	description: String
	clearDescription: Boolean
	"""
	the URL to an auto generated gravatar image for the group
	"""
	gravatarLogoURL: String
	clearGravatarLogoURL: Boolean
	"""
	the URL to an image uploaded by the customer for the groups avatar image
	"""
	logoURL: String
	clearLogoURL: Boolean
	"""
	The group's displayed 'friendly' name
	"""
	displayName: String
	ownerID: ID
	settingID: ID
	addUserIDs: [ID!]
	removeUserIDs: [ID!]
	clearUsers: Boolean
	addGroupMembers: [CreateGroupMembershipInput!]
	updateGroupSettings: UpdateGroupSettingInput
}
"""
UpdateGroupMembershipInput is used for update GroupMembership object.
Input was generated by ent.
"""
input UpdateGroupMembershipInput {
	updatedAt: Time
	clearUpdatedAt: Boolean
	updatedBy: String
	clearUpdatedBy: Boolean
	role: GroupMembershipRole
}
"""
UpdateGroupSettingInput is used for update GroupSetting object.
Input was generated by ent.
"""
input UpdateGroupSettingInput {
	updatedAt: Time
	clearUpdatedAt: Boolean
	updatedBy: String
	clearUpdatedBy: Boolean
	"""
	whether the group is visible to it's members / owners only or if it's searchable by anyone within the organization
	"""
	visibility: GroupSettingVisibility
	"""
	the policy governing ability to freely join a group, whether it requires an invitation, application, or either
	"""
	joinPolicy: GroupSettingJoinPolicy
	"""
	tags associated with the object
	"""
	tags: [String!]
	appendTags: [String!]
	clearTags: Boolean
	"""
	whether to sync group members to slack groups
	"""
	syncToSlack: Boolean
	clearSyncToSlack: Boolean
	"""
	whether to sync group members to github groups
	"""
	syncToGithub: Boolean
	clearSyncToGithub: Boolean
	groupID: ID
	clearGroup: Boolean
}
"""
UpdateIntegrationInput is used for update Integration object.
Input was generated by ent.
"""
input UpdateIntegrationInput {
	updatedAt: Time
	clearUpdatedAt: Boolean
	updatedBy: String
	clearUpdatedBy: Boolean
	"""
	the name of the integration - must be unique within the organization
	"""
	name: String
	"""
	a description of the integration
	"""
	description: String
	clearDescription: Boolean
	kind: String
	clearKind: Boolean
	ownerID: ID
}
"""
UpdateInviteInput is used for update Invite object.
Input was generated by ent.
"""
input UpdateInviteInput {
	updatedAt: Time
	clearUpdatedAt: Boolean
	updatedBy: String
	clearUpdatedBy: Boolean
	"""
	the expiration date of the invitation token which defaults to 14 days in the future from creation
	"""
	expires: Time
	"""
	the email used as input to generate the invitation token and is the destination person the invitation is sent to who is required to accept to join the organization
	"""
	recipient: String
	"""
	the status of the invitation
	"""
	status: InviteInviteStatus
	role: InviteRole
	"""
	the number of attempts made to perform email send of the invitation, maximum of 5
	"""
	sendAttempts: Int
	ownerID: ID
}
"""
UpdateOauthProviderInput is used for update OauthProvider object.
Input was generated by ent.
"""
input UpdateOauthProviderInput {
	updatedAt: Time
	clearUpdatedAt: Boolean
	updatedBy: String
	clearUpdatedBy: Boolean
	"""
	the oauth provider's name
	"""
	name: String
	"""
	the client id for the oauth provider
	"""
	clientID: String
	"""
	the client secret
	"""
	clientSecret: String
	"""
	the redirect url
	"""
	redirectURL: String
	"""
	the scopes
	"""
	scopes: String
	"""
	the auth url of the provider
	"""
	authURL: String
	"""
	the token url of the provider
	"""
	tokenURL: String
	"""
	the auth style, 0: auto detect 1: third party log in 2: log in with username and password
	"""
	authStyle: Int
	"""
	the URL to request user information by token
	"""
	infoURL: String
	ownerID: ID
	clearOwner: Boolean
}
"""
UpdateOhAuthTooTokenInput is used for update OhAuthTooToken object.
Input was generated by ent.
"""
input UpdateOhAuthTooTokenInput {
	clientID: String
	scopes: [String!]
	appendScopes: [String!]
	clearScopes: Boolean
	nonce: String
	claimsUserID: String
	claimsUsername: String
	claimsEmail: String
	claimsEmailVerified: Boolean
	claimsGroups: [String!]
	appendClaimsGroups: [String!]
	clearClaimsGroups: Boolean
	claimsPreferredUsername: String
	connectorID: String
	connectorData: [String!]
	appendConnectorData: [String!]
	clearConnectorData: Boolean
	lastUsed: Time
}
"""
UpdateOrgMembershipInput is used for update OrgMembership object.
Input was generated by ent.
"""
input UpdateOrgMembershipInput {
	updatedAt: Time
	clearUpdatedAt: Boolean
	updatedBy: String
	clearUpdatedBy: Boolean
	role: OrgMembershipRole
}
"""
UpdateOrganizationInput is used for update Organization object.
Input was generated by ent.
"""
input UpdateOrganizationInput {
	updatedAt: Time
	clearUpdatedAt: Boolean
	updatedBy: String
	clearUpdatedBy: Boolean
	"""
	the name of the organization
	"""
	name: String
	"""
	The organization's displayed 'friendly' name
	"""
	displayName: String
	"""
	An optional description of the organization
	"""
	description: String
	clearDescription: Boolean
	"""
	URL of the user's remote avatar
	"""
	avatarRemoteURL: String
	clearAvatarRemoteURL: Boolean
	addGroupIDs: [ID!]
	removeGroupIDs: [ID!]
	clearGroups: Boolean
	addTemplateIDs: [ID!]
	removeTemplateIDs: [ID!]
	clearTemplates: Boolean
	addIntegrationIDs: [ID!]
	removeIntegrationIDs: [ID!]
	clearIntegrations: Boolean
	settingID: ID
	clearSetting: Boolean
	addEntitlementIDs: [ID!]
	removeEntitlementIDs: [ID!]
	clearEntitlements: Boolean
	addPersonalAccessTokenIDs: [ID!]
	removePersonalAccessTokenIDs: [ID!]
	clearPersonalAccessTokens: Boolean
	addOauthproviderIDs: [ID!]
	removeOauthproviderIDs: [ID!]
	clearOauthprovider: Boolean
	addUserIDs: [ID!]
	removeUserIDs: [ID!]
	clearUsers: Boolean
	addInviteIDs: [ID!]
	removeInviteIDs: [ID!]
	clearInvites: Boolean
	addSubscriberIDs: [ID!]
	removeSubscriberIDs: [ID!]
	clearSubscribers: Boolean
	addOrgMembers: [CreateOrgMembershipInput!]
	updateOrgSettings: UpdateOrganizationSettingInput
}
"""
UpdateOrganizationSettingInput is used for update OrganizationSetting object.
Input was generated by ent.
"""
input UpdateOrganizationSettingInput {
	updatedAt: Time
	clearUpdatedAt: Boolean
	updatedBy: String
	clearUpdatedBy: Boolean
	"""
	domains associated with the organization
	"""
	domains: [String!]
	appendDomains: [String!]
	clearDomains: Boolean
	"""
	Name of the person to contact for billing
	"""
	billingContact: String
	clearBillingContact: Boolean
	"""
	Email address of the person to contact for billing
	"""
	billingEmail: String
	clearBillingEmail: Boolean
	"""
	Phone number to contact for billing
	"""
	billingPhone: String
	clearBillingPhone: Boolean
	"""
	Address to send billing information to
	"""
	billingAddress: String
	clearBillingAddress: Boolean
	"""
	Usually government-issued tax ID or business ID such as ABN in Australia
	"""
	taxIdentifier: String
	clearTaxIdentifier: Boolean
	"""
	tags associated with the object
	"""
	tags: [String!]
	appendTags: [String!]
	clearTags: Boolean
	"""
	geographical location of the organization
	"""
	geoLocation: OrganizationSettingRegion
	clearGeoLocation: Boolean
	organizationID: ID
	clearOrganization: Boolean
}
"""
UpdatePersonalAccessTokenInput is used for update PersonalAccessToken object.
Input was generated by ent.
"""
input UpdatePersonalAccessTokenInput {
	updatedAt: Time
	clearUpdatedAt: Boolean
	updatedBy: String
	clearUpdatedBy: Boolean
	"""
	the name associated with the token
	"""
	name: String
	"""
	a description of the token's purpose
	"""
	description: String
	clearDescription: Boolean
	scopes: [String!]
	appendScopes: [String!]
	clearScopes: Boolean
	lastUsedAt: Time
	clearLastUsedAt: Boolean
	addOrganizationIDs: [ID!]
	removeOrganizationIDs: [ID!]
	clearOrganizations: Boolean
}
"""
UpdateSubscriberInput is used for update Subscriber object.
Input was generated by ent.
"""
input UpdateSubscriberInput {
	updatedAt: Time
	clearUpdatedAt: Boolean
	updatedBy: String
	clearUpdatedBy: Boolean
	"""
	email address of the subscriber
	"""
	email: String
	"""
	phone number of the subscriber
	"""
	phoneNumber: String
	clearPhoneNumber: Boolean
	"""
	indicates if the email address has been verified
	"""
	verifiedEmail: Boolean
	"""
	indicates if the phone number has been verified
	"""
	verifiedPhone: Boolean
	"""
	indicates if the subscriber is active or not, active users will have at least one verified contact method
	"""
	active: Boolean
	ownerID: ID
	clearOwner: Boolean
}
"""
UpdateTFASettingsInput is used for update TFASettings object.
Input was generated by ent.
"""
input UpdateTFASettingsInput {
	updatedAt: Time
	clearUpdatedAt: Boolean
	updatedBy: String
	clearUpdatedBy: Boolean
	"""
	specifies if the TFA device has been verified
	"""
	verified: Boolean
	"""
	specifies a user may complete authentication by verifying a TOTP code delivered through an authenticator app
	"""
	totpAllowed: Boolean
	clearTotpAllowed: Boolean
	"""
	Whether to regenerate backup codes
	"""
	regenBackupCodes: Boolean
}
"""
UpdateTemplateInput is used for update Template object.
Input was generated by ent.
"""
input UpdateTemplateInput {
	updatedAt: Time
	clearUpdatedAt: Boolean
	updatedBy: String
	clearUpdatedBy: Boolean
	"""
	the name of the template
	"""
	name: String
	"""
	the description of the template
	"""
	description: String
	clearDescription: Boolean
	"""
	the jsonschema object of the template
	"""
	jsonconfig: JSON
	clearJsonconfig: Boolean
	ownerID: ID
}
"""
UpdateUserInput is used for update User object.
Input was generated by ent.
"""
input UpdateUserInput {
	updatedAt: Time
	clearUpdatedAt: Boolean
	updatedBy: String
	clearUpdatedBy: Boolean
	email: String
	firstName: String
	lastName: String
	"""
	The user's displayed 'friendly' name
	"""
	displayName: String
	"""
	URL of the user's remote avatar
	"""
	avatarRemoteURL: String
	clearAvatarRemoteURL: Boolean
	"""
	The user's local avatar file
	"""
	avatarLocalFile: String
	clearAvatarLocalFile: Boolean
	"""
	The time the user's (local) avatar was last updated
	"""
	avatarUpdatedAt: Time
	clearAvatarUpdatedAt: Boolean
	"""
	the time the user was last seen
	"""
	lastSeen: Time
	clearLastSeen: Boolean
	"""
	user password hash
	"""
	password: String
	clearPassword: Boolean
	"""
	the Subject of the user JWT
	"""
	sub: String
	clearSub: Boolean
	"""
	auth provider used to register the account
	"""
	authProvider: UserAuthProvider
	addPersonalAccessTokenIDs: [ID!]
	removePersonalAccessTokenIDs: [ID!]
	clearPersonalAccessTokens: Boolean
	addTfaSettingIDs: [ID!]
	removeTfaSettingIDs: [ID!]
	clearTfaSettings: Boolean
	settingID: ID
	addEmailVerificationTokenIDs: [ID!]
	removeEmailVerificationTokenIDs: [ID!]
	clearEmailVerificationTokens: Boolean
	addPasswordResetTokenIDs: [ID!]
	removePasswordResetTokenIDs: [ID!]
	clearPasswordResetTokens: Boolean
	addGroupIDs: [ID!]
	removeGroupIDs: [ID!]
	clearGroups: Boolean
	addOrganizationIDs: [ID!]
	removeOrganizationIDs: [ID!]
	clearOrganizations: Boolean
	addWebauthnIDs: [ID!]
	removeWebauthnIDs: [ID!]
	clearWebauthn: Boolean
}
"""
UpdateUserSettingInput is used for update UserSetting object.
Input was generated by ent.
"""
input UpdateUserSettingInput {
	updatedAt: Time
	clearUpdatedAt: Boolean
	updatedBy: String
	clearUpdatedBy: Boolean
	"""
	user account is locked if unconfirmed or explicitly locked
	"""
	locked: Boolean
	"""
	The time notifications regarding the user were silenced
	"""
	silencedAt: Time
	clearSilencedAt: Boolean
	"""
	The time the user was suspended
	"""
	suspendedAt: Time
	clearSuspendedAt: Boolean
	status: UserSettingUserStatus
	emailConfirmed: Boolean
	"""
	tags associated with the user
	"""
	tags: [String!]
	appendTags: [String!]
	"""
	specifies a user may complete authentication by verifying a WebAuthn capable device
	"""
	isWebauthnAllowed: Boolean
	clearIsWebauthnAllowed: Boolean
	"""
	whether the user has two factor authentication enabled
	"""
	isTfaEnabled: Boolean
	clearIsTfaEnabled: Boolean
	userID: ID
	clearUser: Boolean
	defaultOrgID: ID
	clearDefaultOrg: Boolean
}
type User implements Node {
	id: ID!
	createdAt: Time
	updatedAt: Time
	createdBy: String
	updatedBy: String
	deletedAt: Time
	deletedBy: String
	email: String!
	firstName: String!
	lastName: String!
	"""
	The user's displayed 'friendly' name
	"""
	displayName: String!
	"""
	URL of the user's remote avatar
	"""
	avatarRemoteURL: String
	"""
	The user's local avatar file
	"""
	avatarLocalFile: String
	"""
	The time the user's (local) avatar was last updated
	"""
	avatarUpdatedAt: Time
	"""
	the time the user was last seen
	"""
	lastSeen: Time
	"""
	the Subject of the user JWT
	"""
	sub: String
	"""
	auth provider used to register the account
	"""
	authProvider: UserAuthProvider!
	personalAccessTokens: [PersonalAccessToken!]
	tfaSettings: [TFASettings!]
	setting: UserSetting!
	groups: [Group!]
	organizations: [Organization!]
	groupMemberships: [GroupMembership!]
	orgMemberships: [OrgMembership!]
}
"""
UserAuthProvider is enum for the field auth_provider
"""
enum UserAuthProvider @goModel(model: "github.com/datumforge/datum/internal/ent/enums.AuthProvider") {
	CREDENTIALS
	GOOGLE
	GITHUB
	WEBAUTHN
}
"""
A connection to a list of items.
"""
type UserConnection {
	"""
	A list of edges.
	"""
	edges: [UserEdge]
	"""
	Information to aid in pagination.
	"""
	pageInfo: PageInfo!
	"""
	Identifies the total count of items in the connection.
	"""
	totalCount: Int!
}
"""
Return response for createUser mutation
"""
type UserCreatePayload {
	"""
	Created user
	"""
	user: User!
}
"""
Return response for deleteUser mutation
"""
type UserDeletePayload {
	"""
	Deleted user ID
	"""
	deletedID: ID!
}
"""
An edge in a connection.
"""
type UserEdge {
	"""
	The item at the end of the edge.
	"""
	node: User
	"""
	A cursor for use in pagination.
	"""
	cursor: Cursor!
}
"""
Ordering options for User connections
"""
input UserOrder {
	"""
	The ordering direction.
	"""
	direction: OrderDirection! = ASC
	"""
	The field by which to order Users.
	"""
	field: UserOrderField!
}
"""
Properties by which User connections can be ordered.
"""
enum UserOrderField {
	first_name
	last_name
	display_name
}
type UserSetting implements Node {
	id: ID!
	createdAt: Time
	updatedAt: Time
	createdBy: String
	updatedBy: String
	deletedAt: Time
	deletedBy: String
	userID: ID
	"""
	user account is locked if unconfirmed or explicitly locked
	"""
	locked: Boolean!
	"""
	The time notifications regarding the user were silenced
	"""
	silencedAt: Time
	"""
	The time the user was suspended
	"""
	suspendedAt: Time
	status: UserSettingUserStatus!
	emailConfirmed: Boolean!
	"""
	tags associated with the user
	"""
	tags: [String!]!
	"""
	specifies a user may complete authentication by verifying a WebAuthn capable device
	"""
	isWebauthnAllowed: Boolean
	"""
	whether the user has two factor authentication enabled
	"""
	isTfaEnabled: Boolean
	user: User
	"""
	organization to load on user login
	"""
	defaultOrg: Organization
}
"""
A connection to a list of items.
"""
type UserSettingConnection {
	"""
	A list of edges.
	"""
	edges: [UserSettingEdge]
	"""
	Information to aid in pagination.
	"""
	pageInfo: PageInfo!
	"""
	Identifies the total count of items in the connection.
	"""
	totalCount: Int!
}
"""
An edge in a connection.
"""
type UserSettingEdge {
	"""
	The item at the end of the edge.
	"""
	node: UserSetting
	"""
	A cursor for use in pagination.
	"""
	cursor: Cursor!
}
"""
Return response for updateUserSetting mutation
"""
type UserSettingUpdatePayload {
	"""
	Updated userSetting
	"""
	userSetting: UserSetting!
}
"""
UserSettingUserStatus is enum for the field status
"""
enum UserSettingUserStatus @goModel(model: "github.com/datumforge/datum/internal/ent/enums.UserStatus") {
	ACTIVE
	INACTIVE
	DEACTIVATED
	SUSPENDED
}
"""
UserSettingWhereInput is used for filtering UserSetting objects.
Input was generated by ent.
"""
input UserSettingWhereInput {
	not: UserSettingWhereInput
	and: [UserSettingWhereInput!]
	or: [UserSettingWhereInput!]
	"""
	id field predicates
	"""
	id: ID
	idNEQ: ID
	idIn: [ID!]
	idNotIn: [ID!]
	idGT: ID
	idGTE: ID
	idLT: ID
	idLTE: ID
	idEqualFold: ID
	idContainsFold: ID
	"""
	created_at field predicates
	"""
	createdAt: Time
	createdAtNEQ: Time
	createdAtIn: [Time!]
	createdAtNotIn: [Time!]
	createdAtGT: Time
	createdAtGTE: Time
	createdAtLT: Time
	createdAtLTE: Time
	createdAtIsNil: Boolean
	createdAtNotNil: Boolean
	"""
	updated_at field predicates
	"""
	updatedAt: Time
	updatedAtNEQ: Time
	updatedAtIn: [Time!]
	updatedAtNotIn: [Time!]
	updatedAtGT: Time
	updatedAtGTE: Time
	updatedAtLT: Time
	updatedAtLTE: Time
	updatedAtIsNil: Boolean
	updatedAtNotNil: Boolean
	"""
	created_by field predicates
	"""
	createdBy: String
	createdByNEQ: String
	createdByIn: [String!]
	createdByNotIn: [String!]
	createdByGT: String
	createdByGTE: String
	createdByLT: String
	createdByLTE: String
	createdByContains: String
	createdByHasPrefix: String
	createdByHasSuffix: String
	createdByIsNil: Boolean
	createdByNotNil: Boolean
	createdByEqualFold: String
	createdByContainsFold: String
	"""
	updated_by field predicates
	"""
	updatedBy: String
	updatedByNEQ: String
	updatedByIn: [String!]
	updatedByNotIn: [String!]
	updatedByGT: String
	updatedByGTE: String
	updatedByLT: String
	updatedByLTE: String
	updatedByContains: String
	updatedByHasPrefix: String
	updatedByHasSuffix: String
	updatedByIsNil: Boolean
	updatedByNotNil: Boolean
	updatedByEqualFold: String
	updatedByContainsFold: String
	"""
	deleted_at field predicates
	"""
	deletedAt: Time
	deletedAtNEQ: Time
	deletedAtIn: [Time!]
	deletedAtNotIn: [Time!]
	deletedAtGT: Time
	deletedAtGTE: Time
	deletedAtLT: Time
	deletedAtLTE: Time
	deletedAtIsNil: Boolean
	deletedAtNotNil: Boolean
	"""
	deleted_by field predicates
	"""
	deletedBy: String
	deletedByNEQ: String
	deletedByIn: [String!]
	deletedByNotIn: [String!]
	deletedByGT: String
	deletedByGTE: String
	deletedByLT: String
	deletedByLTE: String
	deletedByContains: String
	deletedByHasPrefix: String
	deletedByHasSuffix: String
	deletedByIsNil: Boolean
	deletedByNotNil: Boolean
	deletedByEqualFold: String
	deletedByContainsFold: String
	"""
	user_id field predicates
	"""
	userID: ID
	userIDNEQ: ID
	userIDIn: [ID!]
	userIDNotIn: [ID!]
	userIDGT: ID
	userIDGTE: ID
	userIDLT: ID
	userIDLTE: ID
	userIDContains: ID
	userIDHasPrefix: ID
	userIDHasSuffix: ID
	userIDIsNil: Boolean
	userIDNotNil: Boolean
	userIDEqualFold: ID
	userIDContainsFold: ID
	"""
	locked field predicates
	"""
	locked: Boolean
	lockedNEQ: Boolean
	"""
	silenced_at field predicates
	"""
	silencedAt: Time
	silencedAtNEQ: Time
	silencedAtIn: [Time!]
	silencedAtNotIn: [Time!]
	silencedAtGT: Time
	silencedAtGTE: Time
	silencedAtLT: Time
	silencedAtLTE: Time
	silencedAtIsNil: Boolean
	silencedAtNotNil: Boolean
	"""
	suspended_at field predicates
	"""
	suspendedAt: Time
	suspendedAtNEQ: Time
	suspendedAtIn: [Time!]
	suspendedAtNotIn: [Time!]
	suspendedAtGT: Time
	suspendedAtGTE: Time
	suspendedAtLT: Time
	suspendedAtLTE: Time
	suspendedAtIsNil: Boolean
	suspendedAtNotNil: Boolean
	"""
	status field predicates
	"""
	status: UserSettingUserStatus
	statusNEQ: UserSettingUserStatus
	statusIn: [UserSettingUserStatus!]
	statusNotIn: [UserSettingUserStatus!]
	"""
	email_confirmed field predicates
	"""
	emailConfirmed: Boolean
	emailConfirmedNEQ: Boolean
	"""
	is_webauthn_allowed field predicates
	"""
	isWebauthnAllowed: Boolean
	isWebauthnAllowedNEQ: Boolean
	isWebauthnAllowedIsNil: Boolean
	isWebauthnAllowedNotNil: Boolean
	"""
	is_tfa_enabled field predicates
	"""
	isTfaEnabled: Boolean
	isTfaEnabledNEQ: Boolean
	isTfaEnabledIsNil: Boolean
	isTfaEnabledNotNil: Boolean
	"""
	user edge predicates
	"""
	hasUser: Boolean
	hasUserWith: [UserWhereInput!]
	"""
	default_org edge predicates
	"""
	hasDefaultOrg: Boolean
	hasDefaultOrgWith: [OrganizationWhereInput!]
}
"""
Return response for updateUser mutation
"""
type UserUpdatePayload {
	"""
	Updated user
	"""
	user: User!
}
"""
UserWhereInput is used for filtering User objects.
Input was generated by ent.
"""
input UserWhereInput {
	not: UserWhereInput
	and: [UserWhereInput!]
	or: [UserWhereInput!]
	"""
	id field predicates
	"""
	id: ID
	idNEQ: ID
	idIn: [ID!]
	idNotIn: [ID!]
	idGT: ID
	idGTE: ID
	idLT: ID
	idLTE: ID
	idEqualFold: ID
	idContainsFold: ID
	"""
	created_at field predicates
	"""
	createdAt: Time
	createdAtNEQ: Time
	createdAtIn: [Time!]
	createdAtNotIn: [Time!]
	createdAtGT: Time
	createdAtGTE: Time
	createdAtLT: Time
	createdAtLTE: Time
	createdAtIsNil: Boolean
	createdAtNotNil: Boolean
	"""
	updated_at field predicates
	"""
	updatedAt: Time
	updatedAtNEQ: Time
	updatedAtIn: [Time!]
	updatedAtNotIn: [Time!]
	updatedAtGT: Time
	updatedAtGTE: Time
	updatedAtLT: Time
	updatedAtLTE: Time
	updatedAtIsNil: Boolean
	updatedAtNotNil: Boolean
	"""
	created_by field predicates
	"""
	createdBy: String
	createdByNEQ: String
	createdByIn: [String!]
	createdByNotIn: [String!]
	createdByGT: String
	createdByGTE: String
	createdByLT: String
	createdByLTE: String
	createdByContains: String
	createdByHasPrefix: String
	createdByHasSuffix: String
	createdByIsNil: Boolean
	createdByNotNil: Boolean
	createdByEqualFold: String
	createdByContainsFold: String
	"""
	updated_by field predicates
	"""
	updatedBy: String
	updatedByNEQ: String
	updatedByIn: [String!]
	updatedByNotIn: [String!]
	updatedByGT: String
	updatedByGTE: String
	updatedByLT: String
	updatedByLTE: String
	updatedByContains: String
	updatedByHasPrefix: String
	updatedByHasSuffix: String
	updatedByIsNil: Boolean
	updatedByNotNil: Boolean
	updatedByEqualFold: String
	updatedByContainsFold: String
	"""
	deleted_at field predicates
	"""
	deletedAt: Time
	deletedAtNEQ: Time
	deletedAtIn: [Time!]
	deletedAtNotIn: [Time!]
	deletedAtGT: Time
	deletedAtGTE: Time
	deletedAtLT: Time
	deletedAtLTE: Time
	deletedAtIsNil: Boolean
	deletedAtNotNil: Boolean
	"""
	deleted_by field predicates
	"""
	deletedBy: String
	deletedByNEQ: String
	deletedByIn: [String!]
	deletedByNotIn: [String!]
	deletedByGT: String
	deletedByGTE: String
	deletedByLT: String
	deletedByLTE: String
	deletedByContains: String
	deletedByHasPrefix: String
	deletedByHasSuffix: String
	deletedByIsNil: Boolean
	deletedByNotNil: Boolean
	deletedByEqualFold: String
	deletedByContainsFold: String
	"""
	email field predicates
	"""
	email: String
	emailNEQ: String
	emailIn: [String!]
	emailNotIn: [String!]
	emailGT: String
	emailGTE: String
	emailLT: String
	emailLTE: String
	emailContains: String
	emailHasPrefix: String
	emailHasSuffix: String
	emailEqualFold: String
	emailContainsFold: String
	"""
	first_name field predicates
	"""
	firstName: String
	firstNameNEQ: String
	firstNameIn: [String!]
	firstNameNotIn: [String!]
	firstNameGT: String
	firstNameGTE: String
	firstNameLT: String
	firstNameLTE: String
	firstNameContains: String
	firstNameHasPrefix: String
	firstNameHasSuffix: String
	firstNameEqualFold: String
	firstNameContainsFold: String
	"""
	last_name field predicates
	"""
	lastName: String
	lastNameNEQ: String
	lastNameIn: [String!]
	lastNameNotIn: [String!]
	lastNameGT: String
	lastNameGTE: String
	lastNameLT: String
	lastNameLTE: String
	lastNameContains: String
	lastNameHasPrefix: String
	lastNameHasSuffix: String
	lastNameEqualFold: String
	lastNameContainsFold: String
	"""
	display_name field predicates
	"""
	displayName: String
	displayNameNEQ: String
	displayNameIn: [String!]
	displayNameNotIn: [String!]
	displayNameGT: String
	displayNameGTE: String
	displayNameLT: String
	displayNameLTE: String
	displayNameContains: String
	displayNameHasPrefix: String
	displayNameHasSuffix: String
	displayNameEqualFold: String
	displayNameContainsFold: String
	"""
	avatar_remote_url field predicates
	"""
	avatarRemoteURL: String
	avatarRemoteURLNEQ: String
	avatarRemoteURLIn: [String!]
	avatarRemoteURLNotIn: [String!]
	avatarRemoteURLGT: String
	avatarRemoteURLGTE: String
	avatarRemoteURLLT: String
	avatarRemoteURLLTE: String
	avatarRemoteURLContains: String
	avatarRemoteURLHasPrefix: String
	avatarRemoteURLHasSuffix: String
	avatarRemoteURLIsNil: Boolean
	avatarRemoteURLNotNil: Boolean
	avatarRemoteURLEqualFold: String
	avatarRemoteURLContainsFold: String
	"""
	avatar_local_file field predicates
	"""
	avatarLocalFile: String
	avatarLocalFileNEQ: String
	avatarLocalFileIn: [String!]
	avatarLocalFileNotIn: [String!]
	avatarLocalFileGT: String
	avatarLocalFileGTE: String
	avatarLocalFileLT: String
	avatarLocalFileLTE: String
	avatarLocalFileContains: String
	avatarLocalFileHasPrefix: String
	avatarLocalFileHasSuffix: String
	avatarLocalFileIsNil: Boolean
	avatarLocalFileNotNil: Boolean
	avatarLocalFileEqualFold: String
	avatarLocalFileContainsFold: String
	"""
	avatar_updated_at field predicates
	"""
	avatarUpdatedAt: Time
	avatarUpdatedAtNEQ: Time
	avatarUpdatedAtIn: [Time!]
	avatarUpdatedAtNotIn: [Time!]
	avatarUpdatedAtGT: Time
	avatarUpdatedAtGTE: Time
	avatarUpdatedAtLT: Time
	avatarUpdatedAtLTE: Time
	avatarUpdatedAtIsNil: Boolean
	avatarUpdatedAtNotNil: Boolean
	"""
	last_seen field predicates
	"""
	lastSeen: Time
	lastSeenNEQ: Time
	lastSeenIn: [Time!]
	lastSeenNotIn: [Time!]
	lastSeenGT: Time
	lastSeenGTE: Time
	lastSeenLT: Time
	lastSeenLTE: Time
	lastSeenIsNil: Boolean
	lastSeenNotNil: Boolean
	"""
	sub field predicates
	"""
	sub: String
	subNEQ: String
	subIn: [String!]
	subNotIn: [String!]
	subGT: String
	subGTE: String
	subLT: String
	subLTE: String
	subContains: String
	subHasPrefix: String
	subHasSuffix: String
	subIsNil: Boolean
	subNotNil: Boolean
	subEqualFold: String
	subContainsFold: String
	"""
	auth_provider field predicates
	"""
	authProvider: UserAuthProvider
	authProviderNEQ: UserAuthProvider
	authProviderIn: [UserAuthProvider!]
	authProviderNotIn: [UserAuthProvider!]
	"""
	personal_access_tokens edge predicates
	"""
	hasPersonalAccessTokens: Boolean
	hasPersonalAccessTokensWith: [PersonalAccessTokenWhereInput!]
	"""
	tfa_settings edge predicates
	"""
	hasTfaSettings: Boolean
	hasTfaSettingsWith: [TFASettingsWhereInput!]
	"""
	setting edge predicates
	"""
	hasSetting: Boolean
	hasSettingWith: [UserSettingWhereInput!]
	"""
	groups edge predicates
	"""
	hasGroups: Boolean
	hasGroupsWith: [GroupWhereInput!]
	"""
	organizations edge predicates
	"""
	hasOrganizations: Boolean
	hasOrganizationsWith: [OrganizationWhereInput!]
	"""
	group_memberships edge predicates
	"""
	hasGroupMemberships: Boolean
	hasGroupMembershipsWith: [GroupMembershipWhereInput!]
	"""
	org_memberships edge predicates
	"""
	hasOrgMemberships: Boolean
	hasOrgMembershipsWith: [OrgMembershipWhereInput!]
}
