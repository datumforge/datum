directive @goField(forceResolver: Boolean, name: String) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!]) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
"""
CreateIntegrationInput is used for create Integration object.
Input was generated by ent.
"""
input CreateIntegrationInput {
	createdAt: Time
	updatedAt: Time
	createdBy: Int
	updatedBy: Int
	kind: String!
	description: String
	secretName: String!
	organizationID: ID!
}
"""
CreateMembershipInput is used for create Membership object.
Input was generated by ent.
"""
input CreateMembershipInput {
	createdAt: Time
	updatedAt: Time
	createdBy: Int
	updatedBy: Int
	current: Boolean
	organizationID: ID!
	userID: ID!
}
"""
CreateOrganizationInput is used for create Organization object.
Input was generated by ent.
"""
input CreateOrganizationInput {
	createdAt: Time
	updatedAt: Time
	createdBy: Int
	updatedBy: Int
	name: String
	membershipIDs: [ID!]
	integrationIDs: [ID!]
}
"""
CreateSessionInput is used for create Session object.
Input was generated by ent.
"""
input CreateSessionInput {
	createdAt: Time
	updatedAt: Time
	createdBy: Int
	updatedBy: Int
	"""Sessions can derrive from the local (password auth), oauth, or app_password"""
	type: SessionType!
	"""The session may be disabled by the user or by automatic security policy"""
	disabled: Boolean!
	"""random 32 bytes encoded as base64"""
	token: String
	"""The last known user-agent"""
	userAgent: String
	"""All IPs that have been associated with this session. Reverse-chronological order. The current IP is the first item in the slice"""
	ips: String!
	usersID: ID
}
"""
CreateUserInput is used for create User object.
Input was generated by ent.
"""
input CreateUserInput {
	createdAt: Time
	updatedAt: Time
	createdBy: Int
	updatedBy: Int
	email: String!
	firstName: String!
	lastName: String!
	"""The user's displayed 'friendly' name"""
	displayName: String
	"""user account is locked if unconfirmed or explicitly locked"""
	locked: Boolean
	"""URL of the user's remote avatar"""
	avatarRemoteURL: String
	"""The user's local avatar file"""
	avatarLocalFile: String
	"""The time the user's (local) avatar was last updated"""
	avatarUpdatedAt: Time
	"""The time the user was silenced"""
	silencedAt: Time
	"""The time the user was suspended"""
	suspendedAt: Time
	"""local Actor password recovery code generated during account creation"""
	recoveryCode: String
	membershipIDs: [ID!]
	sessionIDs: [ID!]
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
type Integration implements Node {
	id: ID!
	createdAt: Time!
	updatedAt: Time!
	createdBy: Int
	updatedBy: Int
	kind: String!
	description: String
	secretName: String!
	organization: Organization!
}
"""Return response for createIntegration mutation"""
type IntegrationCreatePayload {
	"""Created integration"""
	integration: Integration!
}
"""Return response for deleteIntegration mutation"""
type IntegrationDeletePayload {
	"""Deleted integration ID"""
	deletedID: ID!
}
"""Return response for updateIntegration mutation"""
type IntegrationUpdatePayload {
	"""Updated integration"""
	integration: Integration!
}
"""
IntegrationWhereInput is used for filtering Integration objects.
Input was generated by ent.
"""
input IntegrationWhereInput {
	not: IntegrationWhereInput
	and: [IntegrationWhereInput!]
	or: [IntegrationWhereInput!]
	"""id field predicates"""
	id: ID
	idNEQ: ID
	idIn: [ID!]
	idNotIn: [ID!]
	idGT: ID
	idGTE: ID
	idLT: ID
	idLTE: ID
	"""created_at field predicates"""
	createdAt: Time
	createdAtNEQ: Time
	createdAtIn: [Time!]
	createdAtNotIn: [Time!]
	createdAtGT: Time
	createdAtGTE: Time
	createdAtLT: Time
	createdAtLTE: Time
	"""updated_at field predicates"""
	updatedAt: Time
	updatedAtNEQ: Time
	updatedAtIn: [Time!]
	updatedAtNotIn: [Time!]
	updatedAtGT: Time
	updatedAtGTE: Time
	updatedAtLT: Time
	updatedAtLTE: Time
	"""created_by field predicates"""
	createdBy: Int
	createdByNEQ: Int
	createdByIn: [Int!]
	createdByNotIn: [Int!]
	createdByGT: Int
	createdByGTE: Int
	createdByLT: Int
	createdByLTE: Int
	createdByIsNil: Boolean
	createdByNotNil: Boolean
	"""updated_by field predicates"""
	updatedBy: Int
	updatedByNEQ: Int
	updatedByIn: [Int!]
	updatedByNotIn: [Int!]
	updatedByGT: Int
	updatedByGTE: Int
	updatedByLT: Int
	updatedByLTE: Int
	updatedByIsNil: Boolean
	updatedByNotNil: Boolean
	"""kind field predicates"""
	kind: String
	kindNEQ: String
	kindIn: [String!]
	kindNotIn: [String!]
	kindGT: String
	kindGTE: String
	kindLT: String
	kindLTE: String
	kindContains: String
	kindHasPrefix: String
	kindHasSuffix: String
	kindEqualFold: String
	kindContainsFold: String
	"""description field predicates"""
	description: String
	descriptionNEQ: String
	descriptionIn: [String!]
	descriptionNotIn: [String!]
	descriptionGT: String
	descriptionGTE: String
	descriptionLT: String
	descriptionLTE: String
	descriptionContains: String
	descriptionHasPrefix: String
	descriptionHasSuffix: String
	descriptionIsNil: Boolean
	descriptionNotNil: Boolean
	descriptionEqualFold: String
	descriptionContainsFold: String
	"""secret_name field predicates"""
	secretName: String
	secretNameNEQ: String
	secretNameIn: [String!]
	secretNameNotIn: [String!]
	secretNameGT: String
	secretNameGTE: String
	secretNameLT: String
	secretNameLTE: String
	secretNameContains: String
	secretNameHasPrefix: String
	secretNameHasSuffix: String
	secretNameEqualFold: String
	secretNameContainsFold: String
	"""organization edge predicates"""
	hasOrganization: Boolean
	hasOrganizationWith: [OrganizationWhereInput!]
}
type Membership implements Node {
	id: ID!
	createdAt: Time!
	updatedAt: Time!
	createdBy: Int
	updatedBy: Int
	current: Boolean!
	organization: Organization!
	user: User!
}
"""Return response for createMembership mutation"""
type MembershipCreatePayload {
	"""Created membership"""
	membership: Membership!
}
"""Return response for deleteMembership mutation"""
type MembershipDeletePayload {
	"""Deleted membership ID"""
	deletedID: ID!
}
"""Return response for updateMembership mutation"""
type MembershipUpdatePayload {
	"""Updated membership"""
	membership: Membership!
}
"""
MembershipWhereInput is used for filtering Membership objects.
Input was generated by ent.
"""
input MembershipWhereInput {
	not: MembershipWhereInput
	and: [MembershipWhereInput!]
	or: [MembershipWhereInput!]
	"""id field predicates"""
	id: ID
	idNEQ: ID
	idIn: [ID!]
	idNotIn: [ID!]
	idGT: ID
	idGTE: ID
	idLT: ID
	idLTE: ID
	"""created_at field predicates"""
	createdAt: Time
	createdAtNEQ: Time
	createdAtIn: [Time!]
	createdAtNotIn: [Time!]
	createdAtGT: Time
	createdAtGTE: Time
	createdAtLT: Time
	createdAtLTE: Time
	"""updated_at field predicates"""
	updatedAt: Time
	updatedAtNEQ: Time
	updatedAtIn: [Time!]
	updatedAtNotIn: [Time!]
	updatedAtGT: Time
	updatedAtGTE: Time
	updatedAtLT: Time
	updatedAtLTE: Time
	"""created_by field predicates"""
	createdBy: Int
	createdByNEQ: Int
	createdByIn: [Int!]
	createdByNotIn: [Int!]
	createdByGT: Int
	createdByGTE: Int
	createdByLT: Int
	createdByLTE: Int
	createdByIsNil: Boolean
	createdByNotNil: Boolean
	"""updated_by field predicates"""
	updatedBy: Int
	updatedByNEQ: Int
	updatedByIn: [Int!]
	updatedByNotIn: [Int!]
	updatedByGT: Int
	updatedByGTE: Int
	updatedByLT: Int
	updatedByLTE: Int
	updatedByIsNil: Boolean
	updatedByNotNil: Boolean
	"""current field predicates"""
	current: Boolean
	currentNEQ: Boolean
	"""organization edge predicates"""
	hasOrganization: Boolean
	hasOrganizationWith: [OrganizationWhereInput!]
	"""user edge predicates"""
	hasUser: Boolean
	hasUserWith: [UserWhereInput!]
}
type Mutation {
	"""Create a new integration"""
	createIntegration(
		"""values of the integration"""
		input: CreateIntegrationInput!
	): IntegrationCreatePayload!
	"""Update an existing integration"""
	updateIntegration(
		"""ID of the integration"""
		id: ID!

		"""New values for the integration"""
		input: UpdateIntegrationInput!
	): IntegrationUpdatePayload!
	"""Delete an existing integration"""
	deleteIntegration(
		"""ID of the integration"""
		id: ID!
	): IntegrationDeletePayload!
	"""Create a new membership"""
	createMembership(
		"""values of the membership"""
		input: CreateMembershipInput!
	): MembershipCreatePayload!
	"""Update an existing membership"""
	updateMembership(
		"""ID of the membership"""
		id: ID!

		"""New values for the membership"""
		input: UpdateMembershipInput!
	): MembershipUpdatePayload!
	"""Delete an existing membership"""
	deleteMembership(
		"""ID of the membership"""
		id: ID!
	): MembershipDeletePayload!
	"""Create a new organization"""
	createOrganization(
		"""values of the organization"""
		input: CreateOrganizationInput!
	): OrganizationCreatePayload!
	"""Update an existing organization"""
	updateOrganization(
		"""ID of the organization"""
		id: ID!

		"""New values for the organization"""
		input: UpdateOrganizationInput!
	): OrganizationUpdatePayload!
	"""Delete an existing organization"""
	deleteOrganization(
		"""ID of the organization"""
		id: ID!
	): OrganizationDeletePayload!
	"""Create a new session"""
	createSession(
		"""values of the session"""
		input: CreateSessionInput!
	): SessionCreatePayload!
	"""Update an existing session"""
	updateSession(
		"""ID of the session"""
		id: ID!

		"""New values for the session"""
		input: UpdateSessionInput!
	): SessionUpdatePayload!
	"""Delete an existing session"""
	deleteSession(
		"""ID of the session"""
		id: ID!
	): SessionDeletePayload!
	"""Create a new user"""
	createUser(
		"""values of the user"""
		input: CreateUserInput!
	): UserCreatePayload!
	"""Update an existing user"""
	updateUser(
		"""ID of the user"""
		id: ID!

		"""New values for the user"""
		input: UpdateUserInput!
	): UserUpdatePayload!
	"""Delete an existing user"""
	deleteUser(
		"""ID of the user"""
		id: ID!
	): UserDeletePayload!
}
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "github.com/datumforge/datum/internal/ent/generated.Noder") {
	"""The id of the object."""
	id: ID!
}
"""Possible directions in which to order a list of items when provided an `orderBy` argument."""
enum OrderDirection {
	"""Specifies an ascending order for a given `orderBy` argument."""
	ASC
	"""Specifies a descending order for a given `orderBy` argument."""
	DESC
}
type Organization implements Node {
	id: ID!
	createdAt: Time!
	updatedAt: Time!
	createdBy: Int
	updatedBy: Int
	name: String!
	memberships: [Membership!]
	integrations: [Integration!]
}
"""Return response for createOrganization mutation"""
type OrganizationCreatePayload {
	"""Created organization"""
	organization: Organization!
}
"""Return response for deleteOrganization mutation"""
type OrganizationDeletePayload {
	"""Deleted organization ID"""
	deletedID: ID!
}
"""Return response for updateOrganization mutation"""
type OrganizationUpdatePayload {
	"""Updated organization"""
	organization: Organization!
}
"""
OrganizationWhereInput is used for filtering Organization objects.
Input was generated by ent.
"""
input OrganizationWhereInput {
	not: OrganizationWhereInput
	and: [OrganizationWhereInput!]
	or: [OrganizationWhereInput!]
	"""id field predicates"""
	id: ID
	idNEQ: ID
	idIn: [ID!]
	idNotIn: [ID!]
	idGT: ID
	idGTE: ID
	idLT: ID
	idLTE: ID
	"""created_at field predicates"""
	createdAt: Time
	createdAtNEQ: Time
	createdAtIn: [Time!]
	createdAtNotIn: [Time!]
	createdAtGT: Time
	createdAtGTE: Time
	createdAtLT: Time
	createdAtLTE: Time
	"""updated_at field predicates"""
	updatedAt: Time
	updatedAtNEQ: Time
	updatedAtIn: [Time!]
	updatedAtNotIn: [Time!]
	updatedAtGT: Time
	updatedAtGTE: Time
	updatedAtLT: Time
	updatedAtLTE: Time
	"""created_by field predicates"""
	createdBy: Int
	createdByNEQ: Int
	createdByIn: [Int!]
	createdByNotIn: [Int!]
	createdByGT: Int
	createdByGTE: Int
	createdByLT: Int
	createdByLTE: Int
	createdByIsNil: Boolean
	createdByNotNil: Boolean
	"""updated_by field predicates"""
	updatedBy: Int
	updatedByNEQ: Int
	updatedByIn: [Int!]
	updatedByNotIn: [Int!]
	updatedByGT: Int
	updatedByGTE: Int
	updatedByLT: Int
	updatedByLTE: Int
	updatedByIsNil: Boolean
	updatedByNotNil: Boolean
	"""name field predicates"""
	name: String
	nameNEQ: String
	nameIn: [String!]
	nameNotIn: [String!]
	nameGT: String
	nameGTE: String
	nameLT: String
	nameLTE: String
	nameContains: String
	nameHasPrefix: String
	nameHasSuffix: String
	nameEqualFold: String
	nameContainsFold: String
	"""memberships edge predicates"""
	hasMemberships: Boolean
	hasMembershipsWith: [MembershipWhereInput!]
	"""integrations edge predicates"""
	hasIntegrations: Boolean
	hasIntegrationsWith: [IntegrationWhereInput!]
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
	"""When paginating forwards, are there more items?"""
	hasNextPage: Boolean!
	"""When paginating backwards, are there more items?"""
	hasPreviousPage: Boolean!
	"""When paginating backwards, the cursor to continue."""
	startCursor: Cursor
	"""When paginating forwards, the cursor to continue."""
	endCursor: Cursor
}
type Query {
	"""Fetches an object given its ID."""
	node(
		"""ID of the object."""
		id: ID!
	): Node
	"""Lookup nodes by a list of IDs."""
	nodes(
		"""The list of node IDs."""
		ids: [ID!]!
	): [Node]!
	integrations: [Integration!]!
	memberships: [Membership!]!
	organizations: [Organization!]!
	sessions: [Session!]!
	users: [User!]!
	"""Look up integration by ID"""
	integration(
		"""ID of the integration"""
		id: ID!
	): Integration!
	"""Look up membership by ID"""
	membership(
		"""ID of the membership"""
		id: ID!
	): Membership!
	"""Look up organization by ID"""
	organization(
		"""ID of the organization"""
		id: ID!
	): Organization!
	"""Look up session by ID"""
	session(
		"""ID of the session"""
		id: ID!
	): Session!
	"""Look up user by ID"""
	user(
		"""ID of the user"""
		id: ID!
	): User!
	_service: _Service!
}
type Session implements Node {
	id: ID!
	createdAt: Time!
	updatedAt: Time!
	createdBy: Int
	updatedBy: Int
	"""Sessions can derrive from the local (password auth), oauth, or app_password"""
	type: SessionType!
	"""The session may be disabled by the user or by automatic security policy"""
	disabled: Boolean!
	"""random 32 bytes encoded as base64"""
	token: String!
	"""The last known user-agent"""
	userAgent: String
	"""All IPs that have been associated with this session. Reverse-chronological order. The current IP is the first item in the slice"""
	ips: String!
	"""Sessions belong to users"""
	users: User
}
"""Return response for createSession mutation"""
type SessionCreatePayload {
	"""Created session"""
	session: Session!
}
"""Return response for deleteSession mutation"""
type SessionDeletePayload {
	"""Deleted session ID"""
	deletedID: ID!
}
"""SessionType is enum for the field type"""
enum SessionType @goModel(model: "github.com/datumforge/datum/internal/ent/generated/session.Type") {
	local
	oauth
	app_password
}
"""Return response for updateSession mutation"""
type SessionUpdatePayload {
	"""Updated session"""
	session: Session!
}
"""
SessionWhereInput is used for filtering Session objects.
Input was generated by ent.
"""
input SessionWhereInput {
	not: SessionWhereInput
	and: [SessionWhereInput!]
	or: [SessionWhereInput!]
	"""id field predicates"""
	id: ID
	idNEQ: ID
	idIn: [ID!]
	idNotIn: [ID!]
	idGT: ID
	idGTE: ID
	idLT: ID
	idLTE: ID
	"""created_at field predicates"""
	createdAt: Time
	createdAtNEQ: Time
	createdAtIn: [Time!]
	createdAtNotIn: [Time!]
	createdAtGT: Time
	createdAtGTE: Time
	createdAtLT: Time
	createdAtLTE: Time
	"""updated_at field predicates"""
	updatedAt: Time
	updatedAtNEQ: Time
	updatedAtIn: [Time!]
	updatedAtNotIn: [Time!]
	updatedAtGT: Time
	updatedAtGTE: Time
	updatedAtLT: Time
	updatedAtLTE: Time
	"""created_by field predicates"""
	createdBy: Int
	createdByNEQ: Int
	createdByIn: [Int!]
	createdByNotIn: [Int!]
	createdByGT: Int
	createdByGTE: Int
	createdByLT: Int
	createdByLTE: Int
	createdByIsNil: Boolean
	createdByNotNil: Boolean
	"""updated_by field predicates"""
	updatedBy: Int
	updatedByNEQ: Int
	updatedByIn: [Int!]
	updatedByNotIn: [Int!]
	updatedByGT: Int
	updatedByGTE: Int
	updatedByLT: Int
	updatedByLTE: Int
	updatedByIsNil: Boolean
	updatedByNotNil: Boolean
	"""type field predicates"""
	type: SessionType
	typeNEQ: SessionType
	typeIn: [SessionType!]
	typeNotIn: [SessionType!]
	"""disabled field predicates"""
	disabled: Boolean
	disabledNEQ: Boolean
	"""token field predicates"""
	token: String
	tokenNEQ: String
	tokenIn: [String!]
	tokenNotIn: [String!]
	tokenGT: String
	tokenGTE: String
	tokenLT: String
	tokenLTE: String
	tokenContains: String
	tokenHasPrefix: String
	tokenHasSuffix: String
	tokenEqualFold: String
	tokenContainsFold: String
	"""user_agent field predicates"""
	userAgent: String
	userAgentNEQ: String
	userAgentIn: [String!]
	userAgentNotIn: [String!]
	userAgentGT: String
	userAgentGTE: String
	userAgentLT: String
	userAgentLTE: String
	userAgentContains: String
	userAgentHasPrefix: String
	userAgentHasSuffix: String
	userAgentIsNil: Boolean
	userAgentNotNil: Boolean
	userAgentEqualFold: String
	userAgentContainsFold: String
	"""ips field predicates"""
	ips: String
	ipsNEQ: String
	ipsIn: [String!]
	ipsNotIn: [String!]
	ipsGT: String
	ipsGTE: String
	ipsLT: String
	ipsLTE: String
	ipsContains: String
	ipsHasPrefix: String
	ipsHasSuffix: String
	ipsEqualFold: String
	ipsContainsFold: String
	"""users edge predicates"""
	hasUsers: Boolean
	hasUsersWith: [UserWhereInput!]
}
"""The builtin Time type"""
scalar Time
"""
UpdateIntegrationInput is used for update Integration object.
Input was generated by ent.
"""
input UpdateIntegrationInput {
	updatedAt: Time
	createdBy: Int
	clearCreatedBy: Boolean
	updatedBy: Int
	clearUpdatedBy: Boolean
	description: String
	clearDescription: Boolean
	organizationID: ID
}
"""
UpdateMembershipInput is used for update Membership object.
Input was generated by ent.
"""
input UpdateMembershipInput {
	updatedAt: Time
	createdBy: Int
	clearCreatedBy: Boolean
	updatedBy: Int
	clearUpdatedBy: Boolean
	current: Boolean
	organizationID: ID
	userID: ID
}
"""
UpdateOrganizationInput is used for update Organization object.
Input was generated by ent.
"""
input UpdateOrganizationInput {
	updatedAt: Time
	createdBy: Int
	clearCreatedBy: Boolean
	updatedBy: Int
	clearUpdatedBy: Boolean
	name: String
	addMembershipIDs: [ID!]
	removeMembershipIDs: [ID!]
	clearMemberships: Boolean
	addIntegrationIDs: [ID!]
	removeIntegrationIDs: [ID!]
	clearIntegrations: Boolean
}
"""
UpdateSessionInput is used for update Session object.
Input was generated by ent.
"""
input UpdateSessionInput {
	updatedAt: Time
	createdBy: Int
	clearCreatedBy: Boolean
	updatedBy: Int
	clearUpdatedBy: Boolean
	"""The session may be disabled by the user or by automatic security policy"""
	disabled: Boolean
	"""The last known user-agent"""
	userAgent: String
	clearUserAgent: Boolean
	"""All IPs that have been associated with this session. Reverse-chronological order. The current IP is the first item in the slice"""
	ips: String
	usersID: ID
	clearUsers: Boolean
}
"""
UpdateUserInput is used for update User object.
Input was generated by ent.
"""
input UpdateUserInput {
	updatedAt: Time
	createdBy: Int
	clearCreatedBy: Boolean
	updatedBy: Int
	clearUpdatedBy: Boolean
	email: String
	firstName: String
	lastName: String
	"""The user's displayed 'friendly' name"""
	displayName: String
	"""user account is locked if unconfirmed or explicitly locked"""
	locked: Boolean
	"""URL of the user's remote avatar"""
	avatarRemoteURL: String
	clearAvatarRemoteURL: Boolean
	"""The user's local avatar file"""
	avatarLocalFile: String
	clearAvatarLocalFile: Boolean
	"""The time the user's (local) avatar was last updated"""
	avatarUpdatedAt: Time
	clearAvatarUpdatedAt: Boolean
	"""The time the user was silenced"""
	silencedAt: Time
	clearSilencedAt: Boolean
	"""The time the user was suspended"""
	suspendedAt: Time
	clearSuspendedAt: Boolean
	"""local Actor password recovery code generated during account creation"""
	recoveryCode: String
	clearRecoveryCode: Boolean
	addMembershipIDs: [ID!]
	removeMembershipIDs: [ID!]
	clearMemberships: Boolean
	addSessionIDs: [ID!]
	removeSessionIDs: [ID!]
	clearSessions: Boolean
}
type User implements Node {
	id: ID!
	createdAt: Time!
	updatedAt: Time!
	createdBy: Int
	updatedBy: Int
	email: String!
	firstName: String!
	lastName: String!
	"""The user's displayed 'friendly' name"""
	displayName: String!
	"""user account is locked if unconfirmed or explicitly locked"""
	locked: Boolean!
	"""URL of the user's remote avatar"""
	avatarRemoteURL: String
	"""The user's local avatar file"""
	avatarLocalFile: String
	"""The time the user's (local) avatar was last updated"""
	avatarUpdatedAt: Time
	"""The time the user was silenced"""
	silencedAt: Time
	"""The time the user was suspended"""
	suspendedAt: Time
	memberships: [Membership!]
	sessions: [Session!]
}
"""Return response for createUser mutation"""
type UserCreatePayload {
	"""Created user"""
	user: User!
}
"""Return response for deleteUser mutation"""
type UserDeletePayload {
	"""Deleted user ID"""
	deletedID: ID!
}
"""Return response for updateUser mutation"""
type UserUpdatePayload {
	"""Updated user"""
	user: User!
}
"""
UserWhereInput is used for filtering User objects.
Input was generated by ent.
"""
input UserWhereInput {
	not: UserWhereInput
	and: [UserWhereInput!]
	or: [UserWhereInput!]
	"""id field predicates"""
	id: ID
	idNEQ: ID
	idIn: [ID!]
	idNotIn: [ID!]
	idGT: ID
	idGTE: ID
	idLT: ID
	idLTE: ID
	"""created_at field predicates"""
	createdAt: Time
	createdAtNEQ: Time
	createdAtIn: [Time!]
	createdAtNotIn: [Time!]
	createdAtGT: Time
	createdAtGTE: Time
	createdAtLT: Time
	createdAtLTE: Time
	"""updated_at field predicates"""
	updatedAt: Time
	updatedAtNEQ: Time
	updatedAtIn: [Time!]
	updatedAtNotIn: [Time!]
	updatedAtGT: Time
	updatedAtGTE: Time
	updatedAtLT: Time
	updatedAtLTE: Time
	"""created_by field predicates"""
	createdBy: Int
	createdByNEQ: Int
	createdByIn: [Int!]
	createdByNotIn: [Int!]
	createdByGT: Int
	createdByGTE: Int
	createdByLT: Int
	createdByLTE: Int
	createdByIsNil: Boolean
	createdByNotNil: Boolean
	"""updated_by field predicates"""
	updatedBy: Int
	updatedByNEQ: Int
	updatedByIn: [Int!]
	updatedByNotIn: [Int!]
	updatedByGT: Int
	updatedByGTE: Int
	updatedByLT: Int
	updatedByLTE: Int
	updatedByIsNil: Boolean
	updatedByNotNil: Boolean
	"""email field predicates"""
	email: String
	emailNEQ: String
	emailIn: [String!]
	emailNotIn: [String!]
	emailGT: String
	emailGTE: String
	emailLT: String
	emailLTE: String
	emailContains: String
	emailHasPrefix: String
	emailHasSuffix: String
	emailEqualFold: String
	emailContainsFold: String
	"""first_name field predicates"""
	firstName: String
	firstNameNEQ: String
	firstNameIn: [String!]
	firstNameNotIn: [String!]
	firstNameGT: String
	firstNameGTE: String
	firstNameLT: String
	firstNameLTE: String
	firstNameContains: String
	firstNameHasPrefix: String
	firstNameHasSuffix: String
	firstNameEqualFold: String
	firstNameContainsFold: String
	"""last_name field predicates"""
	lastName: String
	lastNameNEQ: String
	lastNameIn: [String!]
	lastNameNotIn: [String!]
	lastNameGT: String
	lastNameGTE: String
	lastNameLT: String
	lastNameLTE: String
	lastNameContains: String
	lastNameHasPrefix: String
	lastNameHasSuffix: String
	lastNameEqualFold: String
	lastNameContainsFold: String
	"""display_name field predicates"""
	displayName: String
	displayNameNEQ: String
	displayNameIn: [String!]
	displayNameNotIn: [String!]
	displayNameGT: String
	displayNameGTE: String
	displayNameLT: String
	displayNameLTE: String
	displayNameContains: String
	displayNameHasPrefix: String
	displayNameHasSuffix: String
	displayNameEqualFold: String
	displayNameContainsFold: String
	"""locked field predicates"""
	locked: Boolean
	lockedNEQ: Boolean
	"""avatar_remote_url field predicates"""
	avatarRemoteURL: String
	avatarRemoteURLNEQ: String
	avatarRemoteURLIn: [String!]
	avatarRemoteURLNotIn: [String!]
	avatarRemoteURLGT: String
	avatarRemoteURLGTE: String
	avatarRemoteURLLT: String
	avatarRemoteURLLTE: String
	avatarRemoteURLContains: String
	avatarRemoteURLHasPrefix: String
	avatarRemoteURLHasSuffix: String
	avatarRemoteURLIsNil: Boolean
	avatarRemoteURLNotNil: Boolean
	avatarRemoteURLEqualFold: String
	avatarRemoteURLContainsFold: String
	"""avatar_local_file field predicates"""
	avatarLocalFile: String
	avatarLocalFileNEQ: String
	avatarLocalFileIn: [String!]
	avatarLocalFileNotIn: [String!]
	avatarLocalFileGT: String
	avatarLocalFileGTE: String
	avatarLocalFileLT: String
	avatarLocalFileLTE: String
	avatarLocalFileContains: String
	avatarLocalFileHasPrefix: String
	avatarLocalFileHasSuffix: String
	avatarLocalFileIsNil: Boolean
	avatarLocalFileNotNil: Boolean
	avatarLocalFileEqualFold: String
	avatarLocalFileContainsFold: String
	"""avatar_updated_at field predicates"""
	avatarUpdatedAt: Time
	avatarUpdatedAtNEQ: Time
	avatarUpdatedAtIn: [Time!]
	avatarUpdatedAtNotIn: [Time!]
	avatarUpdatedAtGT: Time
	avatarUpdatedAtGTE: Time
	avatarUpdatedAtLT: Time
	avatarUpdatedAtLTE: Time
	avatarUpdatedAtIsNil: Boolean
	avatarUpdatedAtNotNil: Boolean
	"""silenced_at field predicates"""
	silencedAt: Time
	silencedAtNEQ: Time
	silencedAtIn: [Time!]
	silencedAtNotIn: [Time!]
	silencedAtGT: Time
	silencedAtGTE: Time
	silencedAtLT: Time
	silencedAtLTE: Time
	silencedAtIsNil: Boolean
	silencedAtNotNil: Boolean
	"""suspended_at field predicates"""
	suspendedAt: Time
	suspendedAtNEQ: Time
	suspendedAtIn: [Time!]
	suspendedAtNotIn: [Time!]
	suspendedAtGT: Time
	suspendedAtGTE: Time
	suspendedAtLT: Time
	suspendedAtLTE: Time
	suspendedAtIsNil: Boolean
	suspendedAtNotNil: Boolean
	"""memberships edge predicates"""
	hasMemberships: Boolean
	hasMembershipsWith: [MembershipWhereInput!]
	"""sessions edge predicates"""
	hasSessions: Boolean
	hasSessionsWith: [SessionWhereInput!]
}
type _Service {
	sdl: String
}
scalar _Any
scalar FieldSet
directive @requires(fields: FieldSet!) on FIELD_DEFINITION
directive @provides(fields: FieldSet!) on FIELD_DEFINITION
directive @extends on OBJECT | INTERFACE
directive @key(fields: FieldSet!, resolvable: Boolean = true) repeatable on OBJECT | INTERFACE
directive @link(import: [String!], url: String!) repeatable on SCHEMA
directive @external on FIELD_DEFINITION | OBJECT
directive @shareable on OBJECT | FIELD_DEFINITION
directive @tag(name: String!) repeatable on FIELD_DEFINITION | INTERFACE | OBJECT | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION
directive @override(from: String!) on FIELD_DEFINITION
directive @inaccessible on SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION
#directive @interfaceObject on OBJECT
extend schema
  @link(
	url: "https://specs.apollo.dev/federation/v2.3"
	import: [
	  "@key",
	  "@external",
	  "@shareable",
	  "@tag",
	  "@override",
	  "@inaccessible",
	  "@interfaceObject"
	  ]
  )
