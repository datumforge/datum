directive @goField(forceResolver: Boolean, name: String, omittable: Boolean) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!], forceGenerate: Boolean) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
type APIToken implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  the name associated with the token
  """
  name: String!
  token: String!
  """
  when the token expires
  """
  expiresAt: Time!
  """
  a description of the token's purpose
  """
  description: String
  scopes: [String!]
  lastUsedAt: Time
  owner: Organization!
}
"""
A connection to a list of items.
"""
type APITokenConnection {
  """
  A list of edges.
  """
  edges: [APITokenEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type APITokenEdge {
  """
  The item at the end of the edge.
  """
  node: APIToken
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
APITokenWhereInput is used for filtering APIToken objects.
Input was generated by ent.
"""
input APITokenWhereInput {
  not: APITokenWhereInput
  and: [APITokenWhereInput!]
  or: [APITokenWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  expires_at field predicates
  """
  expiresAt: Time
  expiresAtNEQ: Time
  expiresAtIn: [Time!]
  expiresAtNotIn: [Time!]
  expiresAtGT: Time
  expiresAtGTE: Time
  expiresAtLT: Time
  expiresAtLTE: Time
  """
  last_used_at field predicates
  """
  lastUsedAt: Time
  lastUsedAtNEQ: Time
  lastUsedAtIn: [Time!]
  lastUsedAtNotIn: [Time!]
  lastUsedAtGT: Time
  lastUsedAtGTE: Time
  lastUsedAtLT: Time
  lastUsedAtLTE: Time
  lastUsedAtIsNil: Boolean
  lastUsedAtNotNil: Boolean
  """
  owner edge predicates
  """
  hasOwner: Boolean
  hasOwnerWith: [OrganizationWhereInput!]
}
"""
CreateAPITokenInput is used for create APIToken object.
Input was generated by ent.
"""
input CreateAPITokenInput {
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  the name associated with the token
  """
  name: String!
  """
  when the token expires
  """
  expiresAt: Time!
  """
  a description of the token's purpose
  """
  description: String
  scopes: [String!]
  lastUsedAt: Time
  ownerID: ID!
}
"""
CreateDocumentDataInput is used for create DocumentData object.
Input was generated by ent.
"""
input CreateDocumentDataInput {
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  the json data of the document
  """
  data: JSON!
  templateID: ID!
}
"""
CreateEntitlementInput is used for create Entitlement object.
Input was generated by ent.
"""
input CreateEntitlementInput {
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  tier: EntitlementTier
  """
  used to store references to external systems, e.g. Stripe
  """
  externalCustomerID: String
  """
  used to store references to external systems, e.g. Stripe
  """
  externalSubscriptionID: String
  """
  whether or not the customers entitlement expires - expires_at will show the time
  """
  expires: Boolean
  """
  the time at which a customer's entitlement will expire, e.g. they've cancelled but paid through the end of the month
  """
  expiresAt: Time
  """
  whether or not the customer has cancelled their entitlement - usually used in conjunction with expires and expires at
  """
  cancelled: Boolean
  ownerID: ID!
}
"""
CreateGroupInput is used for create Group object.
Input was generated by ent.
"""
input CreateGroupInput {
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  the name of the group - must be unique within the organization
  """
  name: String!
  """
  the groups description
  """
  description: String
  """
  the URL to an auto generated gravatar image for the group
  """
  gravatarLogoURL: String
  """
  the URL to an image uploaded by the customer for the groups avatar image
  """
  logoURL: String
  """
  The group's displayed 'friendly' name
  """
  displayName: String
  ownerID: ID!
  settingID: ID!
  userIDs: [ID!]
}
"""
CreateGroupMembershipInput is used for create GroupMembership object.
Input was generated by ent.
"""
input CreateGroupMembershipInput {
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  role: GroupMembershipRole
  groupID: ID!
  userID: ID!
}
"""
CreateGroupSettingInput is used for create GroupSetting object.
Input was generated by ent.
"""
input CreateGroupSettingInput {
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  whether the group is visible to it's members / owners only or if it's searchable by anyone within the organization
  """
  visibility: GroupSettingVisibility
  """
  the policy governing ability to freely join a group, whether it requires an invitation, application, or either
  """
  joinPolicy: GroupSettingJoinPolicy
  """
  tags associated with the object
  """
  tags: [String!]
  """
  whether to sync group members to slack groups
  """
  syncToSlack: Boolean
  """
  whether to sync group members to github groups
  """
  syncToGithub: Boolean
  groupID: ID
}
"""
CreateHushInput is used for create Hush object.
Input was generated by ent.
"""
input CreateHushInput {
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  the logical name of the corresponding hush secret or it's general grouping
  """
  name: String!
  """
  a description of the hush value or purpose, such as github PAT
  """
  description: String
  """
  the kind of secret, such as sshkey, certificate, api token, etc.
  """
  kind: String
  """
  the generic name of a secret associated with the organization
  """
  secretName: String
  """
  the secret value
  """
  secretValue: String
  integrationIDs: [ID!]
}
"""
CreateIntegrationInput is used for create Integration object.
Input was generated by ent.
"""
input CreateIntegrationInput {
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  the name of the integration - must be unique within the organization
  """
  name: String!
  """
  a description of the integration
  """
  description: String
  kind: String
  ownerID: ID!
  secretIDs: [ID!]
}
"""
CreateInviteInput is used for create Invite object.
Input was generated by ent.
"""
input CreateInviteInput {
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  the expiration date of the invitation token which defaults to 14 days in the future from creation
  """
  expires: Time!
  """
  the email used as input to generate the invitation token and is the destination person the invitation is sent to who is required to accept to join the organization
  """
  recipient: String!
  """
  the status of the invitation
  """
  status: InviteInviteStatus
  role: InviteRole
  """
  the number of attempts made to perform email send of the invitation, maximum of 5
  """
  sendAttempts: Int
  """
  the user who initiated the invitation
  """
  requestorID: String!
  ownerID: ID!
}
"""
CreateOauthProviderInput is used for create OauthProvider object.
Input was generated by ent.
"""
input CreateOauthProviderInput {
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  the oauth provider's name
  """
  name: String!
  """
  the client id for the oauth provider
  """
  clientID: String!
  """
  the client secret
  """
  clientSecret: String!
  """
  the redirect url
  """
  redirectURL: String!
  """
  the scopes
  """
  scopes: String!
  """
  the auth url of the provider
  """
  authURL: String!
  """
  the token url of the provider
  """
  tokenURL: String!
  """
  the auth style, 0: auto detect 1: third party log in 2: log in with username and password
  """
  authStyle: Uint!
  """
  the URL to request user information by token
  """
  infoURL: String!
  ownerID: ID
}
"""
CreateOhAuthTooTokenInput is used for create OhAuthTooToken object.
Input was generated by ent.
"""
input CreateOhAuthTooTokenInput {
  clientID: String!
  scopes: [String!]
  nonce: String!
  claimsUserID: String!
  claimsUsername: String!
  claimsEmail: String!
  claimsEmailVerified: Boolean!
  claimsGroups: [String!]
  claimsPreferredUsername: String!
  connectorID: String!
  connectorData: [String!]
  lastUsed: Time
}
"""
CreateOrgMembershipInput is used for create OrgMembership object.
Input was generated by ent.
"""
input CreateOrgMembershipInput {
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  role: OrgMembershipRole
  organizationID: ID!
  userID: ID!
}
"""
CreateOrganizationInput is used for create Organization object.
Input was generated by ent.
"""
input CreateOrganizationInput {
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  the name of the organization
  """
  name: String!
  """
  The organization's displayed 'friendly' name
  """
  displayName: String
  """
  An optional description of the organization
  """
  description: String
  """
  orgs directly associated with a user
  """
  personalOrg: Boolean
  """
  URL of the user's remote avatar
  """
  avatarRemoteURL: String
  """
  Whether the organization has a dedicated database
  """
  dedicatedDb: Boolean
  parentID: ID
  groupIDs: [ID!]
  templateIDs: [ID!]
  integrationIDs: [ID!]
  settingID: ID
  entitlementIDs: [ID!]
  personalAccessTokenIDs: [ID!]
  apiTokenIDs: [ID!]
  oauthproviderIDs: [ID!]
  userIDs: [ID!]
  inviteIDs: [ID!]
  subscriberIDs: [ID!]
}
"""
CreateOrganizationSettingInput is used for create OrganizationSetting object.
Input was generated by ent.
"""
input CreateOrganizationSettingInput {
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  domains associated with the organization
  """
  domains: [String!]
  """
  Name of the person to contact for billing
  """
  billingContact: String
  """
  Email address of the person to contact for billing
  """
  billingEmail: String
  """
  Phone number to contact for billing
  """
  billingPhone: String
  """
  Address to send billing information to
  """
  billingAddress: String
  """
  Usually government-issued tax ID or business ID such as ABN in Australia
  """
  taxIdentifier: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  geographical location of the organization
  """
  geoLocation: OrganizationSettingRegion
  organizationID: ID
}
"""
CreatePersonalAccessTokenInput is used for create PersonalAccessToken object.
Input was generated by ent.
"""
input CreatePersonalAccessTokenInput {
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  the name associated with the token
  """
  name: String!
  """
  when the token expires
  """
  expiresAt: Time!
  """
  a description of the token's purpose
  """
  description: String
  scopes: [String!]
  lastUsedAt: Time
  ownerID: ID!
  organizationIDs: [ID!]
}
"""
CreateSubscriberInput is used for create Subscriber object.
Input was generated by ent.
"""
input CreateSubscriberInput {
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  email address of the subscriber
  """
  email: String!
  """
  phone number of the subscriber
  """
  phoneNumber: String
  """
  indicates if the email address has been verified
  """
  verifiedEmail: Boolean
  """
  indicates if the phone number has been verified
  """
  verifiedPhone: Boolean
  """
  indicates if the subscriber is active or not, active users will have at least one verified contact method
  """
  active: Boolean
  ownerID: ID
}
"""
CreateTFASettingInput is used for create TFASetting object.
Input was generated by ent.
"""
input CreateTFASettingInput {
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  specifies a user may complete authentication by verifying a TOTP code delivered through an authenticator app
  """
  totpAllowed: Boolean
  ownerID: ID
}
"""
CreateTemplateInput is used for create Template object.
Input was generated by ent.
"""
input CreateTemplateInput {
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  the name of the template
  """
  name: String!
  """
  the type of the template, either a provided template or an implementation (document)
  """
  templateType: TemplateDocumentType
  """
  the description of the template
  """
  description: String
  """
  the jsonschema object of the template
  """
  jsonconfig: JSON!
  """
  the uischema for the template to render in the UI
  """
  uischema: JSON
  ownerID: ID!
  documentIDs: [ID!]
}
"""
CreateUserInput is used for create User object.
Input was generated by ent.
"""
input CreateUserInput {
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  email: String!
  firstName: String!
  lastName: String!
  """
  The user's displayed 'friendly' name
  """
  displayName: String!
  """
  URL of the user's remote avatar
  """
  avatarRemoteURL: String
  """
  The user's local avatar file
  """
  avatarLocalFile: String
  """
  The time the user's (local) avatar was last updated
  """
  avatarUpdatedAt: Time
  """
  the time the user was last seen
  """
  lastSeen: Time
  """
  user password hash
  """
  password: String
  """
  the Subject of the user JWT
  """
  sub: String
  """
  auth provider used to register the account
  """
  authProvider: UserAuthProvider
  """
  the user's role
  """
  role: UserRole
  personalAccessTokenIDs: [ID!]
  tfaSettingIDs: [ID!]
  settingID: ID!
  emailVerificationTokenIDs: [ID!]
  passwordResetTokenIDs: [ID!]
  groupIDs: [ID!]
  organizationIDs: [ID!]
  webauthnIDs: [ID!]
}
"""
CreateUserSettingInput is used for create UserSetting object.
Input was generated by ent.
"""
input CreateUserSettingInput {
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  user account is locked if unconfirmed or explicitly locked
  """
  locked: Boolean
  """
  The time notifications regarding the user were silenced
  """
  silencedAt: Time
  """
  The time the user was suspended
  """
  suspendedAt: Time
  """
  status of the user account
  """
  status: UserSettingUserStatus
  """
  whether the user has confirmed their email address
  """
  emailConfirmed: Boolean
  """
  tags associated with the user
  """
  tags: [String!]
  """
  specifies a user may complete authentication by verifying a WebAuthn capable device
  """
  isWebauthnAllowed: Boolean
  """
  whether the user has two factor authentication enabled
  """
  isTfaEnabled: Boolean
  userID: ID
  defaultOrgID: ID
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
type DocumentData implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  the template id of the document
  """
  templateID: ID!
  """
  the json data of the document
  """
  data: JSON!
  template: Template!
}
"""
A connection to a list of items.
"""
type DocumentDataConnection {
  """
  A list of edges.
  """
  edges: [DocumentDataEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type DocumentDataEdge {
  """
  The item at the end of the edge.
  """
  node: DocumentData
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type DocumentDataHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: DocumentDataHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  the template id of the document
  """
  templateID: String!
  """
  the json data of the document
  """
  data: JSON!
}
"""
A connection to a list of items.
"""
type DocumentDataHistoryConnection {
  """
  A list of edges.
  """
  edges: [DocumentDataHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type DocumentDataHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: DocumentDataHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
DocumentDataHistoryOpType is enum for the field operation
"""
enum DocumentDataHistoryOpType @goModel(model: "github.com/datumforge/enthistory.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
DocumentDataHistoryWhereInput is used for filtering DocumentDataHistory objects.
Input was generated by ent.
"""
input DocumentDataHistoryWhereInput {
  not: DocumentDataHistoryWhereInput
  and: [DocumentDataHistoryWhereInput!]
  or: [DocumentDataHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: DocumentDataHistoryOpType
  operationNEQ: DocumentDataHistoryOpType
  operationIn: [DocumentDataHistoryOpType!]
  operationNotIn: [DocumentDataHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  template_id field predicates
  """
  templateID: String
  templateIDNEQ: String
  templateIDIn: [String!]
  templateIDNotIn: [String!]
  templateIDGT: String
  templateIDGTE: String
  templateIDLT: String
  templateIDLTE: String
  templateIDContains: String
  templateIDHasPrefix: String
  templateIDHasSuffix: String
  templateIDEqualFold: String
  templateIDContainsFold: String
}
"""
DocumentDataWhereInput is used for filtering DocumentData objects.
Input was generated by ent.
"""
input DocumentDataWhereInput {
  not: DocumentDataWhereInput
  and: [DocumentDataWhereInput!]
  or: [DocumentDataWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  template_id field predicates
  """
  templateID: ID
  templateIDNEQ: ID
  templateIDIn: [ID!]
  templateIDNotIn: [ID!]
  templateIDGT: ID
  templateIDGTE: ID
  templateIDLT: ID
  templateIDLTE: ID
  templateIDContains: ID
  templateIDHasPrefix: ID
  templateIDHasSuffix: ID
  templateIDEqualFold: ID
  templateIDContainsFold: ID
  """
  template edge predicates
  """
  hasTemplate: Boolean
  hasTemplateWith: [TemplateWhereInput!]
}
type Entitlement implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  tier: EntitlementTier!
  """
  used to store references to external systems, e.g. Stripe
  """
  externalCustomerID: String
  """
  used to store references to external systems, e.g. Stripe
  """
  externalSubscriptionID: String
  """
  whether or not the customers entitlement expires - expires_at will show the time
  """
  expires: Boolean!
  """
  the time at which a customer's entitlement will expire, e.g. they've cancelled but paid through the end of the month
  """
  expiresAt: Time
  """
  whether or not the customer has cancelled their entitlement - usually used in conjunction with expires and expires at
  """
  cancelled: Boolean!
  owner: Organization!
}
"""
A connection to a list of items.
"""
type EntitlementConnection {
  """
  A list of edges.
  """
  edges: [EntitlementEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type EntitlementEdge {
  """
  The item at the end of the edge.
  """
  node: Entitlement
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type EntitlementHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: EntitlementHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  tier: EntitlementHistoryTier!
  """
  used to store references to external systems, e.g. Stripe
  """
  externalCustomerID: String
  """
  used to store references to external systems, e.g. Stripe
  """
  externalSubscriptionID: String
  """
  whether or not the customers entitlement expires - expires_at will show the time
  """
  expires: Boolean!
  """
  the time at which a customer's entitlement will expire, e.g. they've cancelled but paid through the end of the month
  """
  expiresAt: Time
  """
  whether or not the customer has cancelled their entitlement - usually used in conjunction with expires and expires at
  """
  cancelled: Boolean!
}
"""
A connection to a list of items.
"""
type EntitlementHistoryConnection {
  """
  A list of edges.
  """
  edges: [EntitlementHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type EntitlementHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: EntitlementHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
EntitlementHistoryOpType is enum for the field operation
"""
enum EntitlementHistoryOpType @goModel(model: "github.com/datumforge/enthistory.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
EntitlementHistoryTier is enum for the field tier
"""
enum EntitlementHistoryTier @goModel(model: "github.com/datumforge/datum/internal/ent/enums.Tier") {
  FREE
  PRO
  ENTERPRISE
}
"""
EntitlementHistoryWhereInput is used for filtering EntitlementHistory objects.
Input was generated by ent.
"""
input EntitlementHistoryWhereInput {
  not: EntitlementHistoryWhereInput
  and: [EntitlementHistoryWhereInput!]
  or: [EntitlementHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: EntitlementHistoryOpType
  operationNEQ: EntitlementHistoryOpType
  operationIn: [EntitlementHistoryOpType!]
  operationNotIn: [EntitlementHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  tier field predicates
  """
  tier: EntitlementHistoryTier
  tierNEQ: EntitlementHistoryTier
  tierIn: [EntitlementHistoryTier!]
  tierNotIn: [EntitlementHistoryTier!]
  """
  external_customer_id field predicates
  """
  externalCustomerID: String
  externalCustomerIDNEQ: String
  externalCustomerIDIn: [String!]
  externalCustomerIDNotIn: [String!]
  externalCustomerIDGT: String
  externalCustomerIDGTE: String
  externalCustomerIDLT: String
  externalCustomerIDLTE: String
  externalCustomerIDContains: String
  externalCustomerIDHasPrefix: String
  externalCustomerIDHasSuffix: String
  externalCustomerIDIsNil: Boolean
  externalCustomerIDNotNil: Boolean
  externalCustomerIDEqualFold: String
  externalCustomerIDContainsFold: String
  """
  external_subscription_id field predicates
  """
  externalSubscriptionID: String
  externalSubscriptionIDNEQ: String
  externalSubscriptionIDIn: [String!]
  externalSubscriptionIDNotIn: [String!]
  externalSubscriptionIDGT: String
  externalSubscriptionIDGTE: String
  externalSubscriptionIDLT: String
  externalSubscriptionIDLTE: String
  externalSubscriptionIDContains: String
  externalSubscriptionIDHasPrefix: String
  externalSubscriptionIDHasSuffix: String
  externalSubscriptionIDIsNil: Boolean
  externalSubscriptionIDNotNil: Boolean
  externalSubscriptionIDEqualFold: String
  externalSubscriptionIDContainsFold: String
  """
  expires field predicates
  """
  expires: Boolean
  expiresNEQ: Boolean
  """
  expires_at field predicates
  """
  expiresAt: Time
  expiresAtNEQ: Time
  expiresAtIn: [Time!]
  expiresAtNotIn: [Time!]
  expiresAtGT: Time
  expiresAtGTE: Time
  expiresAtLT: Time
  expiresAtLTE: Time
  expiresAtIsNil: Boolean
  expiresAtNotNil: Boolean
  """
  cancelled field predicates
  """
  cancelled: Boolean
  cancelledNEQ: Boolean
}
"""
EntitlementTier is enum for the field tier
"""
enum EntitlementTier @goModel(model: "github.com/datumforge/datum/internal/ent/enums.Tier") {
  FREE
  PRO
  ENTERPRISE
}
"""
EntitlementWhereInput is used for filtering Entitlement objects.
Input was generated by ent.
"""
input EntitlementWhereInput {
  not: EntitlementWhereInput
  and: [EntitlementWhereInput!]
  or: [EntitlementWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  tier field predicates
  """
  tier: EntitlementTier
  tierNEQ: EntitlementTier
  tierIn: [EntitlementTier!]
  tierNotIn: [EntitlementTier!]
  """
  external_customer_id field predicates
  """
  externalCustomerID: String
  externalCustomerIDNEQ: String
  externalCustomerIDIn: [String!]
  externalCustomerIDNotIn: [String!]
  externalCustomerIDGT: String
  externalCustomerIDGTE: String
  externalCustomerIDLT: String
  externalCustomerIDLTE: String
  externalCustomerIDContains: String
  externalCustomerIDHasPrefix: String
  externalCustomerIDHasSuffix: String
  externalCustomerIDIsNil: Boolean
  externalCustomerIDNotNil: Boolean
  externalCustomerIDEqualFold: String
  externalCustomerIDContainsFold: String
  """
  external_subscription_id field predicates
  """
  externalSubscriptionID: String
  externalSubscriptionIDNEQ: String
  externalSubscriptionIDIn: [String!]
  externalSubscriptionIDNotIn: [String!]
  externalSubscriptionIDGT: String
  externalSubscriptionIDGTE: String
  externalSubscriptionIDLT: String
  externalSubscriptionIDLTE: String
  externalSubscriptionIDContains: String
  externalSubscriptionIDHasPrefix: String
  externalSubscriptionIDHasSuffix: String
  externalSubscriptionIDIsNil: Boolean
  externalSubscriptionIDNotNil: Boolean
  externalSubscriptionIDEqualFold: String
  externalSubscriptionIDContainsFold: String
  """
  expires field predicates
  """
  expires: Boolean
  expiresNEQ: Boolean
  """
  expires_at field predicates
  """
  expiresAt: Time
  expiresAtNEQ: Time
  expiresAtIn: [Time!]
  expiresAtNotIn: [Time!]
  expiresAtGT: Time
  expiresAtGTE: Time
  expiresAtLT: Time
  expiresAtLTE: Time
  expiresAtIsNil: Boolean
  expiresAtNotNil: Boolean
  """
  cancelled field predicates
  """
  cancelled: Boolean
  cancelledNEQ: Boolean
  """
  owner edge predicates
  """
  hasOwner: Boolean
  hasOwnerWith: [OrganizationWhereInput!]
}
type Group implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  the name of the group - must be unique within the organization
  """
  name: String!
  """
  the groups description
  """
  description: String
  """
  the URL to an auto generated gravatar image for the group
  """
  gravatarLogoURL: String
  """
  the URL to an image uploaded by the customer for the groups avatar image
  """
  logoURL: String
  """
  The group's displayed 'friendly' name
  """
  displayName: String!
  owner: Organization!
  setting: GroupSetting!
  users: [User!]
  members: [GroupMembership!]
}
"""
A connection to a list of items.
"""
type GroupConnection {
  """
  A list of edges.
  """
  edges: [GroupEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type GroupEdge {
  """
  The item at the end of the edge.
  """
  node: Group
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type GroupHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: GroupHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  the name of the group - must be unique within the organization
  """
  name: String!
  """
  the groups description
  """
  description: String
  """
  the URL to an auto generated gravatar image for the group
  """
  gravatarLogoURL: String
  """
  the URL to an image uploaded by the customer for the groups avatar image
  """
  logoURL: String
  """
  The group's displayed 'friendly' name
  """
  displayName: String!
}
"""
A connection to a list of items.
"""
type GroupHistoryConnection {
  """
  A list of edges.
  """
  edges: [GroupHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type GroupHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: GroupHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
GroupHistoryOpType is enum for the field operation
"""
enum GroupHistoryOpType @goModel(model: "github.com/datumforge/enthistory.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
Ordering options for GroupHistory connections
"""
input GroupHistoryOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order GroupHistories.
  """
  field: GroupHistoryOrderField!
}
"""
Properties by which GroupHistory connections can be ordered.
"""
enum GroupHistoryOrderField {
  name
  display_name
}
"""
GroupHistoryWhereInput is used for filtering GroupHistory objects.
Input was generated by ent.
"""
input GroupHistoryWhereInput {
  not: GroupHistoryWhereInput
  and: [GroupHistoryWhereInput!]
  or: [GroupHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: GroupHistoryOpType
  operationNEQ: GroupHistoryOpType
  operationIn: [GroupHistoryOpType!]
  operationNotIn: [GroupHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  display_name field predicates
  """
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameEqualFold: String
  displayNameContainsFold: String
}
type GroupMembership implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  role: GroupMembershipRole!
  groupID: ID!
  userID: ID!
  group: Group!
  user: User!
}
"""
A connection to a list of items.
"""
type GroupMembershipConnection {
  """
  A list of edges.
  """
  edges: [GroupMembershipEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type GroupMembershipEdge {
  """
  The item at the end of the edge.
  """
  node: GroupMembership
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type GroupMembershipHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: GroupMembershipHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  role: GroupMembershipHistoryRole!
  groupID: String!
  userID: String!
}
"""
A connection to a list of items.
"""
type GroupMembershipHistoryConnection {
  """
  A list of edges.
  """
  edges: [GroupMembershipHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type GroupMembershipHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: GroupMembershipHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
GroupMembershipHistoryOpType is enum for the field operation
"""
enum GroupMembershipHistoryOpType @goModel(model: "github.com/datumforge/enthistory.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
GroupMembershipHistoryRole is enum for the field role
"""
enum GroupMembershipHistoryRole @goModel(model: "github.com/datumforge/datum/internal/ent/enums.Role") {
  ADMIN
  MEMBER
  USER
}
"""
GroupMembershipHistoryWhereInput is used for filtering GroupMembershipHistory objects.
Input was generated by ent.
"""
input GroupMembershipHistoryWhereInput {
  not: GroupMembershipHistoryWhereInput
  and: [GroupMembershipHistoryWhereInput!]
  or: [GroupMembershipHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: GroupMembershipHistoryOpType
  operationNEQ: GroupMembershipHistoryOpType
  operationIn: [GroupMembershipHistoryOpType!]
  operationNotIn: [GroupMembershipHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  role field predicates
  """
  role: GroupMembershipHistoryRole
  roleNEQ: GroupMembershipHistoryRole
  roleIn: [GroupMembershipHistoryRole!]
  roleNotIn: [GroupMembershipHistoryRole!]
  """
  group_id field predicates
  """
  groupID: String
  groupIDNEQ: String
  groupIDIn: [String!]
  groupIDNotIn: [String!]
  groupIDGT: String
  groupIDGTE: String
  groupIDLT: String
  groupIDLTE: String
  groupIDContains: String
  groupIDHasPrefix: String
  groupIDHasSuffix: String
  groupIDEqualFold: String
  groupIDContainsFold: String
  """
  user_id field predicates
  """
  userID: String
  userIDNEQ: String
  userIDIn: [String!]
  userIDNotIn: [String!]
  userIDGT: String
  userIDGTE: String
  userIDLT: String
  userIDLTE: String
  userIDContains: String
  userIDHasPrefix: String
  userIDHasSuffix: String
  userIDEqualFold: String
  userIDContainsFold: String
}
"""
GroupMembershipRole is enum for the field role
"""
enum GroupMembershipRole @goModel(model: "github.com/datumforge/datum/internal/ent/enums.Role") {
  ADMIN
  MEMBER
  USER
}
"""
GroupMembershipWhereInput is used for filtering GroupMembership objects.
Input was generated by ent.
"""
input GroupMembershipWhereInput {
  not: GroupMembershipWhereInput
  and: [GroupMembershipWhereInput!]
  or: [GroupMembershipWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  role field predicates
  """
  role: GroupMembershipRole
  roleNEQ: GroupMembershipRole
  roleIn: [GroupMembershipRole!]
  roleNotIn: [GroupMembershipRole!]
}
"""
Ordering options for Group connections
"""
input GroupOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Groups.
  """
  field: GroupOrderField!
}
"""
Properties by which Group connections can be ordered.
"""
enum GroupOrderField {
  name
  display_name
}
type GroupSetting implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  whether the group is visible to it's members / owners only or if it's searchable by anyone within the organization
  """
  visibility: GroupSettingVisibility!
  """
  the policy governing ability to freely join a group, whether it requires an invitation, application, or either
  """
  joinPolicy: GroupSettingJoinPolicy!
  """
  tags associated with the object
  """
  tags: [String!]
  """
  whether to sync group members to slack groups
  """
  syncToSlack: Boolean
  """
  whether to sync group members to github groups
  """
  syncToGithub: Boolean
  """
  the group id associated with the settings
  """
  groupID: ID
  group: Group
}
"""
A connection to a list of items.
"""
type GroupSettingConnection {
  """
  A list of edges.
  """
  edges: [GroupSettingEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type GroupSettingEdge {
  """
  The item at the end of the edge.
  """
  node: GroupSetting
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type GroupSettingHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: GroupSettingHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  whether the group is visible to it's members / owners only or if it's searchable by anyone within the organization
  """
  visibility: GroupSettingHistoryVisibility!
  """
  the policy governing ability to freely join a group, whether it requires an invitation, application, or either
  """
  joinPolicy: GroupSettingHistoryJoinPolicy!
  """
  tags associated with the object
  """
  tags: [String!]
  """
  whether to sync group members to slack groups
  """
  syncToSlack: Boolean
  """
  whether to sync group members to github groups
  """
  syncToGithub: Boolean
  """
  the group id associated with the settings
  """
  groupID: String
}
"""
A connection to a list of items.
"""
type GroupSettingHistoryConnection {
  """
  A list of edges.
  """
  edges: [GroupSettingHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type GroupSettingHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: GroupSettingHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
GroupSettingHistoryJoinPolicy is enum for the field join_policy
"""
enum GroupSettingHistoryJoinPolicy @goModel(model: "github.com/datumforge/datum/internal/ent/enums.JoinPolicy") {
  OPEN
  INVITE_ONLY
  APPLICATION_ONLY
  INVITE_OR_APPLICATION
}
"""
GroupSettingHistoryOpType is enum for the field operation
"""
enum GroupSettingHistoryOpType @goModel(model: "github.com/datumforge/enthistory.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
GroupSettingHistoryVisibility is enum for the field visibility
"""
enum GroupSettingHistoryVisibility @goModel(model: "github.com/datumforge/datum/internal/ent/enums.Visibility") {
  PUBLIC
  PRIVATE
}
"""
GroupSettingHistoryWhereInput is used for filtering GroupSettingHistory objects.
Input was generated by ent.
"""
input GroupSettingHistoryWhereInput {
  not: GroupSettingHistoryWhereInput
  and: [GroupSettingHistoryWhereInput!]
  or: [GroupSettingHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: GroupSettingHistoryOpType
  operationNEQ: GroupSettingHistoryOpType
  operationIn: [GroupSettingHistoryOpType!]
  operationNotIn: [GroupSettingHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  visibility field predicates
  """
  visibility: GroupSettingHistoryVisibility
  visibilityNEQ: GroupSettingHistoryVisibility
  visibilityIn: [GroupSettingHistoryVisibility!]
  visibilityNotIn: [GroupSettingHistoryVisibility!]
  """
  join_policy field predicates
  """
  joinPolicy: GroupSettingHistoryJoinPolicy
  joinPolicyNEQ: GroupSettingHistoryJoinPolicy
  joinPolicyIn: [GroupSettingHistoryJoinPolicy!]
  joinPolicyNotIn: [GroupSettingHistoryJoinPolicy!]
  """
  sync_to_slack field predicates
  """
  syncToSlack: Boolean
  syncToSlackNEQ: Boolean
  syncToSlackIsNil: Boolean
  syncToSlackNotNil: Boolean
  """
  sync_to_github field predicates
  """
  syncToGithub: Boolean
  syncToGithubNEQ: Boolean
  syncToGithubIsNil: Boolean
  syncToGithubNotNil: Boolean
  """
  group_id field predicates
  """
  groupID: String
  groupIDNEQ: String
  groupIDIn: [String!]
  groupIDNotIn: [String!]
  groupIDGT: String
  groupIDGTE: String
  groupIDLT: String
  groupIDLTE: String
  groupIDContains: String
  groupIDHasPrefix: String
  groupIDHasSuffix: String
  groupIDIsNil: Boolean
  groupIDNotNil: Boolean
  groupIDEqualFold: String
  groupIDContainsFold: String
}
"""
GroupSettingJoinPolicy is enum for the field join_policy
"""
enum GroupSettingJoinPolicy @goModel(model: "github.com/datumforge/datum/internal/ent/enums.JoinPolicy") {
  OPEN
  INVITE_ONLY
  APPLICATION_ONLY
  INVITE_OR_APPLICATION
}
"""
GroupSettingVisibility is enum for the field visibility
"""
enum GroupSettingVisibility @goModel(model: "github.com/datumforge/datum/internal/ent/enums.Visibility") {
  PUBLIC
  PRIVATE
}
"""
GroupSettingWhereInput is used for filtering GroupSetting objects.
Input was generated by ent.
"""
input GroupSettingWhereInput {
  not: GroupSettingWhereInput
  and: [GroupSettingWhereInput!]
  or: [GroupSettingWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  visibility field predicates
  """
  visibility: GroupSettingVisibility
  visibilityNEQ: GroupSettingVisibility
  visibilityIn: [GroupSettingVisibility!]
  visibilityNotIn: [GroupSettingVisibility!]
  """
  join_policy field predicates
  """
  joinPolicy: GroupSettingJoinPolicy
  joinPolicyNEQ: GroupSettingJoinPolicy
  joinPolicyIn: [GroupSettingJoinPolicy!]
  joinPolicyNotIn: [GroupSettingJoinPolicy!]
  """
  sync_to_slack field predicates
  """
  syncToSlack: Boolean
  syncToSlackNEQ: Boolean
  syncToSlackIsNil: Boolean
  syncToSlackNotNil: Boolean
  """
  sync_to_github field predicates
  """
  syncToGithub: Boolean
  syncToGithubNEQ: Boolean
  syncToGithubIsNil: Boolean
  syncToGithubNotNil: Boolean
  """
  group_id field predicates
  """
  groupID: ID
  groupIDNEQ: ID
  groupIDIn: [ID!]
  groupIDNotIn: [ID!]
  groupIDGT: ID
  groupIDGTE: ID
  groupIDLT: ID
  groupIDLTE: ID
  groupIDContains: ID
  groupIDHasPrefix: ID
  groupIDHasSuffix: ID
  groupIDIsNil: Boolean
  groupIDNotNil: Boolean
  groupIDEqualFold: ID
  groupIDContainsFold: ID
  """
  group edge predicates
  """
  hasGroup: Boolean
  hasGroupWith: [GroupWhereInput!]
}
"""
GroupWhereInput is used for filtering Group objects.
Input was generated by ent.
"""
input GroupWhereInput {
  not: GroupWhereInput
  and: [GroupWhereInput!]
  or: [GroupWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  display_name field predicates
  """
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameEqualFold: String
  displayNameContainsFold: String
  """
  owner edge predicates
  """
  hasOwner: Boolean
  hasOwnerWith: [OrganizationWhereInput!]
  """
  setting edge predicates
  """
  hasSetting: Boolean
  hasSettingWith: [GroupSettingWhereInput!]
  """
  users edge predicates
  """
  hasUsers: Boolean
  hasUsersWith: [UserWhereInput!]
  """
  members edge predicates
  """
  hasMembers: Boolean
  hasMembersWith: [GroupMembershipWhereInput!]
}
type Hush implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  the logical name of the corresponding hush secret or it's general grouping
  """
  name: String!
  """
  a description of the hush value or purpose, such as github PAT
  """
  description: String
  """
  the kind of secret, such as sshkey, certificate, api token, etc.
  """
  kind: String
  """
  the generic name of a secret associated with the organization
  """
  secretName: String
  """
  the integration associated with the secret
  """
  integrations: [Integration!]
}
"""
A connection to a list of items.
"""
type HushConnection {
  """
  A list of edges.
  """
  edges: [HushEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type HushEdge {
  """
  The item at the end of the edge.
  """
  node: Hush
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type HushHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: HushHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  the logical name of the corresponding hush secret or it's general grouping
  """
  name: String!
  """
  a description of the hush value or purpose, such as github PAT
  """
  description: String
  """
  the kind of secret, such as sshkey, certificate, api token, etc.
  """
  kind: String
  """
  the generic name of a secret associated with the organization
  """
  secretName: String
}
"""
A connection to a list of items.
"""
type HushHistoryConnection {
  """
  A list of edges.
  """
  edges: [HushHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type HushHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: HushHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
HushHistoryOpType is enum for the field operation
"""
enum HushHistoryOpType @goModel(model: "github.com/datumforge/enthistory.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
Ordering options for HushHistory connections
"""
input HushHistoryOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order HushHistories.
  """
  field: HushHistoryOrderField!
}
"""
Properties by which HushHistory connections can be ordered.
"""
enum HushHistoryOrderField {
  name
  kind
}
"""
HushHistoryWhereInput is used for filtering HushHistory objects.
Input was generated by ent.
"""
input HushHistoryWhereInput {
  not: HushHistoryWhereInput
  and: [HushHistoryWhereInput!]
  or: [HushHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: HushHistoryOpType
  operationNEQ: HushHistoryOpType
  operationIn: [HushHistoryOpType!]
  operationNotIn: [HushHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  kind field predicates
  """
  kind: String
  kindNEQ: String
  kindIn: [String!]
  kindNotIn: [String!]
  kindGT: String
  kindGTE: String
  kindLT: String
  kindLTE: String
  kindContains: String
  kindHasPrefix: String
  kindHasSuffix: String
  kindIsNil: Boolean
  kindNotNil: Boolean
  kindEqualFold: String
  kindContainsFold: String
  """
  secret_name field predicates
  """
  secretName: String
  secretNameNEQ: String
  secretNameIn: [String!]
  secretNameNotIn: [String!]
  secretNameGT: String
  secretNameGTE: String
  secretNameLT: String
  secretNameLTE: String
  secretNameContains: String
  secretNameHasPrefix: String
  secretNameHasSuffix: String
  secretNameIsNil: Boolean
  secretNameNotNil: Boolean
  secretNameEqualFold: String
  secretNameContainsFold: String
}
"""
Ordering options for Hush connections
"""
input HushOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Hushes.
  """
  field: HushOrderField!
}
"""
Properties by which Hush connections can be ordered.
"""
enum HushOrderField {
  name
  kind
}
"""
HushWhereInput is used for filtering Hush objects.
Input was generated by ent.
"""
input HushWhereInput {
  not: HushWhereInput
  and: [HushWhereInput!]
  or: [HushWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  kind field predicates
  """
  kind: String
  kindNEQ: String
  kindIn: [String!]
  kindNotIn: [String!]
  kindGT: String
  kindGTE: String
  kindLT: String
  kindLTE: String
  kindContains: String
  kindHasPrefix: String
  kindHasSuffix: String
  kindIsNil: Boolean
  kindNotNil: Boolean
  kindEqualFold: String
  kindContainsFold: String
  """
  secret_name field predicates
  """
  secretName: String
  secretNameNEQ: String
  secretNameIn: [String!]
  secretNameNotIn: [String!]
  secretNameGT: String
  secretNameGTE: String
  secretNameLT: String
  secretNameLTE: String
  secretNameContains: String
  secretNameHasPrefix: String
  secretNameHasSuffix: String
  secretNameIsNil: Boolean
  secretNameNotNil: Boolean
  secretNameEqualFold: String
  secretNameContainsFold: String
  """
  integrations edge predicates
  """
  hasIntegrations: Boolean
  hasIntegrationsWith: [IntegrationWhereInput!]
}
type Integration implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  ownerID: ID!
  """
  the name of the integration - must be unique within the organization
  """
  name: String!
  """
  a description of the integration
  """
  description: String
  kind: String
  owner: Organization!
  """
  the secrets associated with the integration
  """
  secrets: [Hush!]
}
"""
A connection to a list of items.
"""
type IntegrationConnection {
  """
  A list of edges.
  """
  edges: [IntegrationEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type IntegrationEdge {
  """
  The item at the end of the edge.
  """
  node: Integration
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type IntegrationHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: IntegrationHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  ownerID: String!
  """
  the name of the integration - must be unique within the organization
  """
  name: String!
  """
  a description of the integration
  """
  description: String
  kind: String
}
"""
A connection to a list of items.
"""
type IntegrationHistoryConnection {
  """
  A list of edges.
  """
  edges: [IntegrationHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type IntegrationHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: IntegrationHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
IntegrationHistoryOpType is enum for the field operation
"""
enum IntegrationHistoryOpType @goModel(model: "github.com/datumforge/enthistory.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
Ordering options for IntegrationHistory connections
"""
input IntegrationHistoryOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order IntegrationHistories.
  """
  field: IntegrationHistoryOrderField!
}
"""
Properties by which IntegrationHistory connections can be ordered.
"""
enum IntegrationHistoryOrderField {
  name
  kind
}
"""
IntegrationHistoryWhereInput is used for filtering IntegrationHistory objects.
Input was generated by ent.
"""
input IntegrationHistoryWhereInput {
  not: IntegrationHistoryWhereInput
  and: [IntegrationHistoryWhereInput!]
  or: [IntegrationHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: IntegrationHistoryOpType
  operationNEQ: IntegrationHistoryOpType
  operationIn: [IntegrationHistoryOpType!]
  operationNotIn: [IntegrationHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: String
  ownerIDNEQ: String
  ownerIDIn: [String!]
  ownerIDNotIn: [String!]
  ownerIDGT: String
  ownerIDGTE: String
  ownerIDLT: String
  ownerIDLTE: String
  ownerIDContains: String
  ownerIDHasPrefix: String
  ownerIDHasSuffix: String
  ownerIDEqualFold: String
  ownerIDContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  kind field predicates
  """
  kind: String
  kindNEQ: String
  kindIn: [String!]
  kindNotIn: [String!]
  kindGT: String
  kindGTE: String
  kindLT: String
  kindLTE: String
  kindContains: String
  kindHasPrefix: String
  kindHasSuffix: String
  kindIsNil: Boolean
  kindNotNil: Boolean
  kindEqualFold: String
  kindContainsFold: String
}
"""
Ordering options for Integration connections
"""
input IntegrationOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Integrations.
  """
  field: IntegrationOrderField!
}
"""
Properties by which Integration connections can be ordered.
"""
enum IntegrationOrderField {
  name
  kind
}
"""
IntegrationWhereInput is used for filtering Integration objects.
Input was generated by ent.
"""
input IntegrationWhereInput {
  not: IntegrationWhereInput
  and: [IntegrationWhereInput!]
  or: [IntegrationWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: ID
  ownerIDNEQ: ID
  ownerIDIn: [ID!]
  ownerIDNotIn: [ID!]
  ownerIDGT: ID
  ownerIDGTE: ID
  ownerIDLT: ID
  ownerIDLTE: ID
  ownerIDContains: ID
  ownerIDHasPrefix: ID
  ownerIDHasSuffix: ID
  ownerIDEqualFold: ID
  ownerIDContainsFold: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  kind field predicates
  """
  kind: String
  kindNEQ: String
  kindIn: [String!]
  kindNotIn: [String!]
  kindGT: String
  kindGTE: String
  kindLT: String
  kindLTE: String
  kindContains: String
  kindHasPrefix: String
  kindHasSuffix: String
  kindIsNil: Boolean
  kindNotNil: Boolean
  kindEqualFold: String
  kindContainsFold: String
  """
  owner edge predicates
  """
  hasOwner: Boolean
  hasOwnerWith: [OrganizationWhereInput!]
  """
  secrets edge predicates
  """
  hasSecrets: Boolean
  hasSecretsWith: [HushWhereInput!]
}
type Invite implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  ownerID: ID!
  """
  the expiration date of the invitation token which defaults to 14 days in the future from creation
  """
  expires: Time!
  """
  the email used as input to generate the invitation token and is the destination person the invitation is sent to who is required to accept to join the organization
  """
  recipient: String!
  """
  the status of the invitation
  """
  status: InviteInviteStatus!
  role: InviteRole!
  """
  the number of attempts made to perform email send of the invitation, maximum of 5
  """
  sendAttempts: Int!
  """
  the user who initiated the invitation
  """
  requestorID: String!
  owner: Organization!
}
"""
A connection to a list of items.
"""
type InviteConnection {
  """
  A list of edges.
  """
  edges: [InviteEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type InviteEdge {
  """
  The item at the end of the edge.
  """
  node: Invite
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
InviteInviteStatus is enum for the field status
"""
enum InviteInviteStatus @goModel(model: "github.com/datumforge/datum/internal/ent/enums.InviteStatus") {
  INVITATION_SENT
  APPROVAL_REQUIRED
  INVITATION_ACCEPTED
  INVITATION_EXPIRED
}
"""
InviteRole is enum for the field role
"""
enum InviteRole @goModel(model: "github.com/datumforge/datum/internal/ent/enums.Role") {
  ADMIN
  MEMBER
  USER
}
"""
InviteWhereInput is used for filtering Invite objects.
Input was generated by ent.
"""
input InviteWhereInput {
  not: InviteWhereInput
  and: [InviteWhereInput!]
  or: [InviteWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: ID
  ownerIDNEQ: ID
  ownerIDIn: [ID!]
  ownerIDNotIn: [ID!]
  ownerIDGT: ID
  ownerIDGTE: ID
  ownerIDLT: ID
  ownerIDLTE: ID
  ownerIDContains: ID
  ownerIDHasPrefix: ID
  ownerIDHasSuffix: ID
  ownerIDEqualFold: ID
  ownerIDContainsFold: ID
  """
  expires field predicates
  """
  expires: Time
  expiresNEQ: Time
  expiresIn: [Time!]
  expiresNotIn: [Time!]
  expiresGT: Time
  expiresGTE: Time
  expiresLT: Time
  expiresLTE: Time
  """
  recipient field predicates
  """
  recipient: String
  recipientNEQ: String
  recipientIn: [String!]
  recipientNotIn: [String!]
  recipientGT: String
  recipientGTE: String
  recipientLT: String
  recipientLTE: String
  recipientContains: String
  recipientHasPrefix: String
  recipientHasSuffix: String
  recipientEqualFold: String
  recipientContainsFold: String
  """
  status field predicates
  """
  status: InviteInviteStatus
  statusNEQ: InviteInviteStatus
  statusIn: [InviteInviteStatus!]
  statusNotIn: [InviteInviteStatus!]
  """
  role field predicates
  """
  role: InviteRole
  roleNEQ: InviteRole
  roleIn: [InviteRole!]
  roleNotIn: [InviteRole!]
  """
  send_attempts field predicates
  """
  sendAttempts: Int
  sendAttemptsNEQ: Int
  sendAttemptsIn: [Int!]
  sendAttemptsNotIn: [Int!]
  sendAttemptsGT: Int
  sendAttemptsGTE: Int
  sendAttemptsLT: Int
  sendAttemptsLTE: Int
  """
  requestor_id field predicates
  """
  requestorID: String
  requestorIDNEQ: String
  requestorIDIn: [String!]
  requestorIDNotIn: [String!]
  requestorIDGT: String
  requestorIDGTE: String
  requestorIDLT: String
  requestorIDLTE: String
  requestorIDContains: String
  requestorIDHasPrefix: String
  requestorIDHasSuffix: String
  requestorIDEqualFold: String
  requestorIDContainsFold: String
  """
  owner edge predicates
  """
  hasOwner: Boolean
  hasOwnerWith: [OrganizationWhereInput!]
}
"""
A valid JSON string.
"""
scalar JSON
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "github.com/datumforge/datum/internal/ent/generated.Noder") {
  """
  The id of the object.
  """
  id: ID!
}
type OauthProvider implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  the oauth provider's name
  """
  name: String!
  """
  the client id for the oauth provider
  """
  clientID: String!
  """
  the client secret
  """
  clientSecret: String!
  """
  the redirect url
  """
  redirectURL: String!
  """
  the scopes
  """
  scopes: String!
  """
  the auth url of the provider
  """
  authURL: String!
  """
  the token url of the provider
  """
  tokenURL: String!
  """
  the auth style, 0: auto detect 1: third party log in 2: log in with username and password
  """
  authStyle: Uint!
  """
  the URL to request user information by token
  """
  infoURL: String!
  owner: Organization
}
"""
A connection to a list of items.
"""
type OauthProviderConnection {
  """
  A list of edges.
  """
  edges: [OauthProviderEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type OauthProviderEdge {
  """
  The item at the end of the edge.
  """
  node: OauthProvider
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type OauthProviderHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: OauthProviderHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  the oauth provider's name
  """
  name: String!
  """
  the client id for the oauth provider
  """
  clientID: String!
  """
  the client secret
  """
  clientSecret: String!
  """
  the redirect url
  """
  redirectURL: String!
  """
  the scopes
  """
  scopes: String!
  """
  the auth url of the provider
  """
  authURL: String!
  """
  the token url of the provider
  """
  tokenURL: String!
  """
  the auth style, 0: auto detect 1: third party log in 2: log in with username and password
  """
  authStyle: Uint!
  """
  the URL to request user information by token
  """
  infoURL: String!
}
"""
A connection to a list of items.
"""
type OauthProviderHistoryConnection {
  """
  A list of edges.
  """
  edges: [OauthProviderHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type OauthProviderHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: OauthProviderHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
OauthProviderHistoryOpType is enum for the field operation
"""
enum OauthProviderHistoryOpType @goModel(model: "github.com/datumforge/enthistory.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
OauthProviderHistoryWhereInput is used for filtering OauthProviderHistory objects.
Input was generated by ent.
"""
input OauthProviderHistoryWhereInput {
  not: OauthProviderHistoryWhereInput
  and: [OauthProviderHistoryWhereInput!]
  or: [OauthProviderHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: OauthProviderHistoryOpType
  operationNEQ: OauthProviderHistoryOpType
  operationIn: [OauthProviderHistoryOpType!]
  operationNotIn: [OauthProviderHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  client_id field predicates
  """
  clientID: String
  clientIDNEQ: String
  clientIDIn: [String!]
  clientIDNotIn: [String!]
  clientIDGT: String
  clientIDGTE: String
  clientIDLT: String
  clientIDLTE: String
  clientIDContains: String
  clientIDHasPrefix: String
  clientIDHasSuffix: String
  clientIDEqualFold: String
  clientIDContainsFold: String
  """
  client_secret field predicates
  """
  clientSecret: String
  clientSecretNEQ: String
  clientSecretIn: [String!]
  clientSecretNotIn: [String!]
  clientSecretGT: String
  clientSecretGTE: String
  clientSecretLT: String
  clientSecretLTE: String
  clientSecretContains: String
  clientSecretHasPrefix: String
  clientSecretHasSuffix: String
  clientSecretEqualFold: String
  clientSecretContainsFold: String
  """
  redirect_url field predicates
  """
  redirectURL: String
  redirectURLNEQ: String
  redirectURLIn: [String!]
  redirectURLNotIn: [String!]
  redirectURLGT: String
  redirectURLGTE: String
  redirectURLLT: String
  redirectURLLTE: String
  redirectURLContains: String
  redirectURLHasPrefix: String
  redirectURLHasSuffix: String
  redirectURLEqualFold: String
  redirectURLContainsFold: String
  """
  scopes field predicates
  """
  scopes: String
  scopesNEQ: String
  scopesIn: [String!]
  scopesNotIn: [String!]
  scopesGT: String
  scopesGTE: String
  scopesLT: String
  scopesLTE: String
  scopesContains: String
  scopesHasPrefix: String
  scopesHasSuffix: String
  scopesEqualFold: String
  scopesContainsFold: String
  """
  auth_url field predicates
  """
  authURL: String
  authURLNEQ: String
  authURLIn: [String!]
  authURLNotIn: [String!]
  authURLGT: String
  authURLGTE: String
  authURLLT: String
  authURLLTE: String
  authURLContains: String
  authURLHasPrefix: String
  authURLHasSuffix: String
  authURLEqualFold: String
  authURLContainsFold: String
  """
  token_url field predicates
  """
  tokenURL: String
  tokenURLNEQ: String
  tokenURLIn: [String!]
  tokenURLNotIn: [String!]
  tokenURLGT: String
  tokenURLGTE: String
  tokenURLLT: String
  tokenURLLTE: String
  tokenURLContains: String
  tokenURLHasPrefix: String
  tokenURLHasSuffix: String
  tokenURLEqualFold: String
  tokenURLContainsFold: String
  """
  auth_style field predicates
  """
  authStyle: Uint
  authStyleNEQ: Uint
  authStyleIn: [Uint!]
  authStyleNotIn: [Uint!]
  authStyleGT: Uint
  authStyleGTE: Uint
  authStyleLT: Uint
  authStyleLTE: Uint
  """
  info_url field predicates
  """
  infoURL: String
  infoURLNEQ: String
  infoURLIn: [String!]
  infoURLNotIn: [String!]
  infoURLGT: String
  infoURLGTE: String
  infoURLLT: String
  infoURLLTE: String
  infoURLContains: String
  infoURLHasPrefix: String
  infoURLHasSuffix: String
  infoURLEqualFold: String
  infoURLContainsFold: String
}
"""
OauthProviderWhereInput is used for filtering OauthProvider objects.
Input was generated by ent.
"""
input OauthProviderWhereInput {
  not: OauthProviderWhereInput
  and: [OauthProviderWhereInput!]
  or: [OauthProviderWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  client_id field predicates
  """
  clientID: String
  clientIDNEQ: String
  clientIDIn: [String!]
  clientIDNotIn: [String!]
  clientIDGT: String
  clientIDGTE: String
  clientIDLT: String
  clientIDLTE: String
  clientIDContains: String
  clientIDHasPrefix: String
  clientIDHasSuffix: String
  clientIDEqualFold: String
  clientIDContainsFold: String
  """
  client_secret field predicates
  """
  clientSecret: String
  clientSecretNEQ: String
  clientSecretIn: [String!]
  clientSecretNotIn: [String!]
  clientSecretGT: String
  clientSecretGTE: String
  clientSecretLT: String
  clientSecretLTE: String
  clientSecretContains: String
  clientSecretHasPrefix: String
  clientSecretHasSuffix: String
  clientSecretEqualFold: String
  clientSecretContainsFold: String
  """
  redirect_url field predicates
  """
  redirectURL: String
  redirectURLNEQ: String
  redirectURLIn: [String!]
  redirectURLNotIn: [String!]
  redirectURLGT: String
  redirectURLGTE: String
  redirectURLLT: String
  redirectURLLTE: String
  redirectURLContains: String
  redirectURLHasPrefix: String
  redirectURLHasSuffix: String
  redirectURLEqualFold: String
  redirectURLContainsFold: String
  """
  scopes field predicates
  """
  scopes: String
  scopesNEQ: String
  scopesIn: [String!]
  scopesNotIn: [String!]
  scopesGT: String
  scopesGTE: String
  scopesLT: String
  scopesLTE: String
  scopesContains: String
  scopesHasPrefix: String
  scopesHasSuffix: String
  scopesEqualFold: String
  scopesContainsFold: String
  """
  auth_url field predicates
  """
  authURL: String
  authURLNEQ: String
  authURLIn: [String!]
  authURLNotIn: [String!]
  authURLGT: String
  authURLGTE: String
  authURLLT: String
  authURLLTE: String
  authURLContains: String
  authURLHasPrefix: String
  authURLHasSuffix: String
  authURLEqualFold: String
  authURLContainsFold: String
  """
  token_url field predicates
  """
  tokenURL: String
  tokenURLNEQ: String
  tokenURLIn: [String!]
  tokenURLNotIn: [String!]
  tokenURLGT: String
  tokenURLGTE: String
  tokenURLLT: String
  tokenURLLTE: String
  tokenURLContains: String
  tokenURLHasPrefix: String
  tokenURLHasSuffix: String
  tokenURLEqualFold: String
  tokenURLContainsFold: String
  """
  auth_style field predicates
  """
  authStyle: Uint
  authStyleNEQ: Uint
  authStyleIn: [Uint!]
  authStyleNotIn: [Uint!]
  authStyleGT: Uint
  authStyleGTE: Uint
  authStyleLT: Uint
  authStyleLTE: Uint
  """
  info_url field predicates
  """
  infoURL: String
  infoURLNEQ: String
  infoURLIn: [String!]
  infoURLNotIn: [String!]
  infoURLGT: String
  infoURLGTE: String
  infoURLLT: String
  infoURLLTE: String
  infoURLContains: String
  infoURLHasPrefix: String
  infoURLHasSuffix: String
  infoURLEqualFold: String
  infoURLContainsFold: String
  """
  owner edge predicates
  """
  hasOwner: Boolean
  hasOwnerWith: [OrganizationWhereInput!]
}
type OhAuthTooToken implements Node {
  id: ID!
  clientID: String!
  scopes: [String!]
  nonce: String!
  claimsUserID: String!
  claimsUsername: String!
  claimsEmail: String!
  claimsEmailVerified: Boolean!
  claimsGroups: [String!]
  claimsPreferredUsername: String!
  connectorID: String!
  connectorData: [String!]
  lastUsed: Time!
}
"""
A connection to a list of items.
"""
type OhAuthTooTokenConnection {
  """
  A list of edges.
  """
  edges: [OhAuthTooTokenEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type OhAuthTooTokenEdge {
  """
  The item at the end of the edge.
  """
  node: OhAuthTooToken
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
OhAuthTooTokenWhereInput is used for filtering OhAuthTooToken objects.
Input was generated by ent.
"""
input OhAuthTooTokenWhereInput {
  not: OhAuthTooTokenWhereInput
  and: [OhAuthTooTokenWhereInput!]
  or: [OhAuthTooTokenWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  client_id field predicates
  """
  clientID: String
  clientIDNEQ: String
  clientIDIn: [String!]
  clientIDNotIn: [String!]
  clientIDGT: String
  clientIDGTE: String
  clientIDLT: String
  clientIDLTE: String
  clientIDContains: String
  clientIDHasPrefix: String
  clientIDHasSuffix: String
  clientIDEqualFold: String
  clientIDContainsFold: String
  """
  nonce field predicates
  """
  nonce: String
  nonceNEQ: String
  nonceIn: [String!]
  nonceNotIn: [String!]
  nonceGT: String
  nonceGTE: String
  nonceLT: String
  nonceLTE: String
  nonceContains: String
  nonceHasPrefix: String
  nonceHasSuffix: String
  nonceEqualFold: String
  nonceContainsFold: String
  """
  claims_user_id field predicates
  """
  claimsUserID: String
  claimsUserIDNEQ: String
  claimsUserIDIn: [String!]
  claimsUserIDNotIn: [String!]
  claimsUserIDGT: String
  claimsUserIDGTE: String
  claimsUserIDLT: String
  claimsUserIDLTE: String
  claimsUserIDContains: String
  claimsUserIDHasPrefix: String
  claimsUserIDHasSuffix: String
  claimsUserIDEqualFold: String
  claimsUserIDContainsFold: String
  """
  claims_username field predicates
  """
  claimsUsername: String
  claimsUsernameNEQ: String
  claimsUsernameIn: [String!]
  claimsUsernameNotIn: [String!]
  claimsUsernameGT: String
  claimsUsernameGTE: String
  claimsUsernameLT: String
  claimsUsernameLTE: String
  claimsUsernameContains: String
  claimsUsernameHasPrefix: String
  claimsUsernameHasSuffix: String
  claimsUsernameEqualFold: String
  claimsUsernameContainsFold: String
  """
  claims_email field predicates
  """
  claimsEmail: String
  claimsEmailNEQ: String
  claimsEmailIn: [String!]
  claimsEmailNotIn: [String!]
  claimsEmailGT: String
  claimsEmailGTE: String
  claimsEmailLT: String
  claimsEmailLTE: String
  claimsEmailContains: String
  claimsEmailHasPrefix: String
  claimsEmailHasSuffix: String
  claimsEmailEqualFold: String
  claimsEmailContainsFold: String
  """
  claims_email_verified field predicates
  """
  claimsEmailVerified: Boolean
  claimsEmailVerifiedNEQ: Boolean
  """
  claims_preferred_username field predicates
  """
  claimsPreferredUsername: String
  claimsPreferredUsernameNEQ: String
  claimsPreferredUsernameIn: [String!]
  claimsPreferredUsernameNotIn: [String!]
  claimsPreferredUsernameGT: String
  claimsPreferredUsernameGTE: String
  claimsPreferredUsernameLT: String
  claimsPreferredUsernameLTE: String
  claimsPreferredUsernameContains: String
  claimsPreferredUsernameHasPrefix: String
  claimsPreferredUsernameHasSuffix: String
  claimsPreferredUsernameEqualFold: String
  claimsPreferredUsernameContainsFold: String
  """
  connector_id field predicates
  """
  connectorID: String
  connectorIDNEQ: String
  connectorIDIn: [String!]
  connectorIDNotIn: [String!]
  connectorIDGT: String
  connectorIDGTE: String
  connectorIDLT: String
  connectorIDLTE: String
  connectorIDContains: String
  connectorIDHasPrefix: String
  connectorIDHasSuffix: String
  connectorIDEqualFold: String
  connectorIDContainsFold: String
  """
  last_used field predicates
  """
  lastUsed: Time
  lastUsedNEQ: Time
  lastUsedIn: [Time!]
  lastUsedNotIn: [Time!]
  lastUsedGT: Time
  lastUsedGTE: Time
  lastUsedLT: Time
  lastUsedLTE: Time
}
"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  """
  Specifies an ascending order for a given `orderBy` argument.
  """
  ASC
  """
  Specifies a descending order for a given `orderBy` argument.
  """
  DESC
}
type OrgMembership implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  role: OrgMembershipRole!
  organizationID: ID!
  userID: ID!
  organization: Organization!
  user: User!
}
"""
A connection to a list of items.
"""
type OrgMembershipConnection {
  """
  A list of edges.
  """
  edges: [OrgMembershipEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type OrgMembershipEdge {
  """
  The item at the end of the edge.
  """
  node: OrgMembership
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type OrgMembershipHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: OrgMembershipHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  role: OrgMembershipHistoryRole!
  organizationID: String!
  userID: String!
}
"""
A connection to a list of items.
"""
type OrgMembershipHistoryConnection {
  """
  A list of edges.
  """
  edges: [OrgMembershipHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type OrgMembershipHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: OrgMembershipHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
OrgMembershipHistoryOpType is enum for the field operation
"""
enum OrgMembershipHistoryOpType @goModel(model: "github.com/datumforge/enthistory.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
OrgMembershipHistoryRole is enum for the field role
"""
enum OrgMembershipHistoryRole @goModel(model: "github.com/datumforge/datum/internal/ent/enums.Role") {
  ADMIN
  MEMBER
  USER
  OWNER
}
"""
OrgMembershipHistoryWhereInput is used for filtering OrgMembershipHistory objects.
Input was generated by ent.
"""
input OrgMembershipHistoryWhereInput {
  not: OrgMembershipHistoryWhereInput
  and: [OrgMembershipHistoryWhereInput!]
  or: [OrgMembershipHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: OrgMembershipHistoryOpType
  operationNEQ: OrgMembershipHistoryOpType
  operationIn: [OrgMembershipHistoryOpType!]
  operationNotIn: [OrgMembershipHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  role field predicates
  """
  role: OrgMembershipHistoryRole
  roleNEQ: OrgMembershipHistoryRole
  roleIn: [OrgMembershipHistoryRole!]
  roleNotIn: [OrgMembershipHistoryRole!]
  """
  organization_id field predicates
  """
  organizationID: String
  organizationIDNEQ: String
  organizationIDIn: [String!]
  organizationIDNotIn: [String!]
  organizationIDGT: String
  organizationIDGTE: String
  organizationIDLT: String
  organizationIDLTE: String
  organizationIDContains: String
  organizationIDHasPrefix: String
  organizationIDHasSuffix: String
  organizationIDEqualFold: String
  organizationIDContainsFold: String
  """
  user_id field predicates
  """
  userID: String
  userIDNEQ: String
  userIDIn: [String!]
  userIDNotIn: [String!]
  userIDGT: String
  userIDGTE: String
  userIDLT: String
  userIDLTE: String
  userIDContains: String
  userIDHasPrefix: String
  userIDHasSuffix: String
  userIDEqualFold: String
  userIDContainsFold: String
}
"""
OrgMembershipRole is enum for the field role
"""
enum OrgMembershipRole @goModel(model: "github.com/datumforge/datum/internal/ent/enums.Role") {
  ADMIN
  MEMBER
  USER
  OWNER
}
"""
OrgMembershipWhereInput is used for filtering OrgMembership objects.
Input was generated by ent.
"""
input OrgMembershipWhereInput {
  not: OrgMembershipWhereInput
  and: [OrgMembershipWhereInput!]
  or: [OrgMembershipWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  role field predicates
  """
  role: OrgMembershipRole
  roleNEQ: OrgMembershipRole
  roleIn: [OrgMembershipRole!]
  roleNotIn: [OrgMembershipRole!]
}
type Organization implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  the name of the organization
  """
  name: String!
  """
  The organization's displayed 'friendly' name
  """
  displayName: String!
  """
  An optional description of the organization
  """
  description: String
  """
  orgs directly associated with a user
  """
  personalOrg: Boolean
  """
  URL of the user's remote avatar
  """
  avatarRemoteURL: String
  """
  Whether the organization has a dedicated database
  """
  dedicatedDb: Boolean!
  parent: Organization
  children(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Organizations returned from the connection.
    """
    orderBy: OrganizationOrder

    """
    Filtering options for Organizations returned from the connection.
    """
    where: OrganizationWhereInput
  ): OrganizationConnection!
  groups: [Group!]
  templates: [Template!]
  integrations: [Integration!]
  setting: OrganizationSetting
  entitlements: [Entitlement!]
  personalAccessTokens: [PersonalAccessToken!]
  apiTokens: [APIToken!]
  oauthprovider: [OauthProvider!]
  users: [User!]
  invites: [Invite!]
  subscribers: [Subscriber!]
  members: [OrgMembership!]
}
"""
A connection to a list of items.
"""
type OrganizationConnection {
  """
  A list of edges.
  """
  edges: [OrganizationEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type OrganizationEdge {
  """
  The item at the end of the edge.
  """
  node: Organization
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type OrganizationHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: OrganizationHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  the name of the organization
  """
  name: String!
  """
  The organization's displayed 'friendly' name
  """
  displayName: String!
  """
  An optional description of the organization
  """
  description: String
  """
  orgs directly associated with a user
  """
  personalOrg: Boolean
  """
  URL of the user's remote avatar
  """
  avatarRemoteURL: String
  """
  Whether the organization has a dedicated database
  """
  dedicatedDb: Boolean!
}
"""
A connection to a list of items.
"""
type OrganizationHistoryConnection {
  """
  A list of edges.
  """
  edges: [OrganizationHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type OrganizationHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: OrganizationHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
OrganizationHistoryOpType is enum for the field operation
"""
enum OrganizationHistoryOpType @goModel(model: "github.com/datumforge/enthistory.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
Ordering options for OrganizationHistory connections
"""
input OrganizationHistoryOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order OrganizationHistories.
  """
  field: OrganizationHistoryOrderField!
}
"""
Properties by which OrganizationHistory connections can be ordered.
"""
enum OrganizationHistoryOrderField {
  name
  display_name
}
"""
OrganizationHistoryWhereInput is used for filtering OrganizationHistory objects.
Input was generated by ent.
"""
input OrganizationHistoryWhereInput {
  not: OrganizationHistoryWhereInput
  and: [OrganizationHistoryWhereInput!]
  or: [OrganizationHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: OrganizationHistoryOpType
  operationNEQ: OrganizationHistoryOpType
  operationIn: [OrganizationHistoryOpType!]
  operationNotIn: [OrganizationHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  display_name field predicates
  """
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameEqualFold: String
  displayNameContainsFold: String
  """
  parent_organization_id field predicates
  """
  parentOrganizationID: ID
  parentOrganizationIDNEQ: ID
  parentOrganizationIDIn: [ID!]
  parentOrganizationIDNotIn: [ID!]
  parentOrganizationIDGT: ID
  parentOrganizationIDGTE: ID
  parentOrganizationIDLT: ID
  parentOrganizationIDLTE: ID
  parentOrganizationIDContains: ID
  parentOrganizationIDHasPrefix: ID
  parentOrganizationIDHasSuffix: ID
  parentOrganizationIDIsNil: Boolean
  parentOrganizationIDNotNil: Boolean
  parentOrganizationIDEqualFold: ID
  parentOrganizationIDContainsFold: ID
  """
  personal_org field predicates
  """
  personalOrg: Boolean
  personalOrgNEQ: Boolean
  personalOrgIsNil: Boolean
  personalOrgNotNil: Boolean
  """
  avatar_remote_url field predicates
  """
  avatarRemoteURL: String
  avatarRemoteURLNEQ: String
  avatarRemoteURLIn: [String!]
  avatarRemoteURLNotIn: [String!]
  avatarRemoteURLGT: String
  avatarRemoteURLGTE: String
  avatarRemoteURLLT: String
  avatarRemoteURLLTE: String
  avatarRemoteURLContains: String
  avatarRemoteURLHasPrefix: String
  avatarRemoteURLHasSuffix: String
  avatarRemoteURLIsNil: Boolean
  avatarRemoteURLNotNil: Boolean
  avatarRemoteURLEqualFold: String
  avatarRemoteURLContainsFold: String
}
"""
Ordering options for Organization connections
"""
input OrganizationOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Organizations.
  """
  field: OrganizationOrderField!
}
"""
Properties by which Organization connections can be ordered.
"""
enum OrganizationOrderField {
  name
  display_name
}
type OrganizationSetting implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  domains associated with the organization
  """
  domains: [String!]
  """
  Name of the person to contact for billing
  """
  billingContact: String
  """
  Email address of the person to contact for billing
  """
  billingEmail: String
  """
  Phone number to contact for billing
  """
  billingPhone: String
  """
  Address to send billing information to
  """
  billingAddress: String
  """
  Usually government-issued tax ID or business ID such as ABN in Australia
  """
  taxIdentifier: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  geographical location of the organization
  """
  geoLocation: OrganizationSettingRegion
  """
  the ID of the organization the settings belong to
  """
  organizationID: ID
  organization: Organization
}
"""
A connection to a list of items.
"""
type OrganizationSettingConnection {
  """
  A list of edges.
  """
  edges: [OrganizationSettingEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type OrganizationSettingEdge {
  """
  The item at the end of the edge.
  """
  node: OrganizationSetting
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type OrganizationSettingHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: OrganizationSettingHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  domains associated with the organization
  """
  domains: [String!]
  """
  Name of the person to contact for billing
  """
  billingContact: String
  """
  Email address of the person to contact for billing
  """
  billingEmail: String
  """
  Phone number to contact for billing
  """
  billingPhone: String
  """
  Address to send billing information to
  """
  billingAddress: String
  """
  Usually government-issued tax ID or business ID such as ABN in Australia
  """
  taxIdentifier: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  geographical location of the organization
  """
  geoLocation: OrganizationSettingHistoryRegion
  """
  the ID of the organization the settings belong to
  """
  organizationID: String
}
"""
A connection to a list of items.
"""
type OrganizationSettingHistoryConnection {
  """
  A list of edges.
  """
  edges: [OrganizationSettingHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type OrganizationSettingHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: OrganizationSettingHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
OrganizationSettingHistoryOpType is enum for the field operation
"""
enum OrganizationSettingHistoryOpType @goModel(model: "github.com/datumforge/enthistory.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
OrganizationSettingHistoryRegion is enum for the field geo_location
"""
enum OrganizationSettingHistoryRegion @goModel(model: "github.com/datumforge/datum/internal/ent/enums.Region") {
  AMER
  EMEA
  APAC
}
"""
OrganizationSettingHistoryWhereInput is used for filtering OrganizationSettingHistory objects.
Input was generated by ent.
"""
input OrganizationSettingHistoryWhereInput {
  not: OrganizationSettingHistoryWhereInput
  and: [OrganizationSettingHistoryWhereInput!]
  or: [OrganizationSettingHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: OrganizationSettingHistoryOpType
  operationNEQ: OrganizationSettingHistoryOpType
  operationIn: [OrganizationSettingHistoryOpType!]
  operationNotIn: [OrganizationSettingHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  billing_contact field predicates
  """
  billingContact: String
  billingContactNEQ: String
  billingContactIn: [String!]
  billingContactNotIn: [String!]
  billingContactGT: String
  billingContactGTE: String
  billingContactLT: String
  billingContactLTE: String
  billingContactContains: String
  billingContactHasPrefix: String
  billingContactHasSuffix: String
  billingContactIsNil: Boolean
  billingContactNotNil: Boolean
  billingContactEqualFold: String
  billingContactContainsFold: String
  """
  billing_email field predicates
  """
  billingEmail: String
  billingEmailNEQ: String
  billingEmailIn: [String!]
  billingEmailNotIn: [String!]
  billingEmailGT: String
  billingEmailGTE: String
  billingEmailLT: String
  billingEmailLTE: String
  billingEmailContains: String
  billingEmailHasPrefix: String
  billingEmailHasSuffix: String
  billingEmailIsNil: Boolean
  billingEmailNotNil: Boolean
  billingEmailEqualFold: String
  billingEmailContainsFold: String
  """
  billing_phone field predicates
  """
  billingPhone: String
  billingPhoneNEQ: String
  billingPhoneIn: [String!]
  billingPhoneNotIn: [String!]
  billingPhoneGT: String
  billingPhoneGTE: String
  billingPhoneLT: String
  billingPhoneLTE: String
  billingPhoneContains: String
  billingPhoneHasPrefix: String
  billingPhoneHasSuffix: String
  billingPhoneIsNil: Boolean
  billingPhoneNotNil: Boolean
  billingPhoneEqualFold: String
  billingPhoneContainsFold: String
  """
  billing_address field predicates
  """
  billingAddress: String
  billingAddressNEQ: String
  billingAddressIn: [String!]
  billingAddressNotIn: [String!]
  billingAddressGT: String
  billingAddressGTE: String
  billingAddressLT: String
  billingAddressLTE: String
  billingAddressContains: String
  billingAddressHasPrefix: String
  billingAddressHasSuffix: String
  billingAddressIsNil: Boolean
  billingAddressNotNil: Boolean
  billingAddressEqualFold: String
  billingAddressContainsFold: String
  """
  tax_identifier field predicates
  """
  taxIdentifier: String
  taxIdentifierNEQ: String
  taxIdentifierIn: [String!]
  taxIdentifierNotIn: [String!]
  taxIdentifierGT: String
  taxIdentifierGTE: String
  taxIdentifierLT: String
  taxIdentifierLTE: String
  taxIdentifierContains: String
  taxIdentifierHasPrefix: String
  taxIdentifierHasSuffix: String
  taxIdentifierIsNil: Boolean
  taxIdentifierNotNil: Boolean
  taxIdentifierEqualFold: String
  taxIdentifierContainsFold: String
  """
  geo_location field predicates
  """
  geoLocation: OrganizationSettingHistoryRegion
  geoLocationNEQ: OrganizationSettingHistoryRegion
  geoLocationIn: [OrganizationSettingHistoryRegion!]
  geoLocationNotIn: [OrganizationSettingHistoryRegion!]
  geoLocationIsNil: Boolean
  geoLocationNotNil: Boolean
  """
  organization_id field predicates
  """
  organizationID: String
  organizationIDNEQ: String
  organizationIDIn: [String!]
  organizationIDNotIn: [String!]
  organizationIDGT: String
  organizationIDGTE: String
  organizationIDLT: String
  organizationIDLTE: String
  organizationIDContains: String
  organizationIDHasPrefix: String
  organizationIDHasSuffix: String
  organizationIDIsNil: Boolean
  organizationIDNotNil: Boolean
  organizationIDEqualFold: String
  organizationIDContainsFold: String
}
"""
OrganizationSettingRegion is enum for the field geo_location
"""
enum OrganizationSettingRegion @goModel(model: "github.com/datumforge/datum/internal/ent/enums.Region") {
  AMER
  EMEA
  APAC
}
"""
OrganizationSettingWhereInput is used for filtering OrganizationSetting objects.
Input was generated by ent.
"""
input OrganizationSettingWhereInput {
  not: OrganizationSettingWhereInput
  and: [OrganizationSettingWhereInput!]
  or: [OrganizationSettingWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  billing_contact field predicates
  """
  billingContact: String
  billingContactNEQ: String
  billingContactIn: [String!]
  billingContactNotIn: [String!]
  billingContactGT: String
  billingContactGTE: String
  billingContactLT: String
  billingContactLTE: String
  billingContactContains: String
  billingContactHasPrefix: String
  billingContactHasSuffix: String
  billingContactIsNil: Boolean
  billingContactNotNil: Boolean
  billingContactEqualFold: String
  billingContactContainsFold: String
  """
  billing_email field predicates
  """
  billingEmail: String
  billingEmailNEQ: String
  billingEmailIn: [String!]
  billingEmailNotIn: [String!]
  billingEmailGT: String
  billingEmailGTE: String
  billingEmailLT: String
  billingEmailLTE: String
  billingEmailContains: String
  billingEmailHasPrefix: String
  billingEmailHasSuffix: String
  billingEmailIsNil: Boolean
  billingEmailNotNil: Boolean
  billingEmailEqualFold: String
  billingEmailContainsFold: String
  """
  billing_phone field predicates
  """
  billingPhone: String
  billingPhoneNEQ: String
  billingPhoneIn: [String!]
  billingPhoneNotIn: [String!]
  billingPhoneGT: String
  billingPhoneGTE: String
  billingPhoneLT: String
  billingPhoneLTE: String
  billingPhoneContains: String
  billingPhoneHasPrefix: String
  billingPhoneHasSuffix: String
  billingPhoneIsNil: Boolean
  billingPhoneNotNil: Boolean
  billingPhoneEqualFold: String
  billingPhoneContainsFold: String
  """
  billing_address field predicates
  """
  billingAddress: String
  billingAddressNEQ: String
  billingAddressIn: [String!]
  billingAddressNotIn: [String!]
  billingAddressGT: String
  billingAddressGTE: String
  billingAddressLT: String
  billingAddressLTE: String
  billingAddressContains: String
  billingAddressHasPrefix: String
  billingAddressHasSuffix: String
  billingAddressIsNil: Boolean
  billingAddressNotNil: Boolean
  billingAddressEqualFold: String
  billingAddressContainsFold: String
  """
  tax_identifier field predicates
  """
  taxIdentifier: String
  taxIdentifierNEQ: String
  taxIdentifierIn: [String!]
  taxIdentifierNotIn: [String!]
  taxIdentifierGT: String
  taxIdentifierGTE: String
  taxIdentifierLT: String
  taxIdentifierLTE: String
  taxIdentifierContains: String
  taxIdentifierHasPrefix: String
  taxIdentifierHasSuffix: String
  taxIdentifierIsNil: Boolean
  taxIdentifierNotNil: Boolean
  taxIdentifierEqualFold: String
  taxIdentifierContainsFold: String
  """
  geo_location field predicates
  """
  geoLocation: OrganizationSettingRegion
  geoLocationNEQ: OrganizationSettingRegion
  geoLocationIn: [OrganizationSettingRegion!]
  geoLocationNotIn: [OrganizationSettingRegion!]
  geoLocationIsNil: Boolean
  geoLocationNotNil: Boolean
  """
  organization_id field predicates
  """
  organizationID: ID
  organizationIDNEQ: ID
  organizationIDIn: [ID!]
  organizationIDNotIn: [ID!]
  organizationIDGT: ID
  organizationIDGTE: ID
  organizationIDLT: ID
  organizationIDLTE: ID
  organizationIDContains: ID
  organizationIDHasPrefix: ID
  organizationIDHasSuffix: ID
  organizationIDIsNil: Boolean
  organizationIDNotNil: Boolean
  organizationIDEqualFold: ID
  organizationIDContainsFold: ID
  """
  organization edge predicates
  """
  hasOrganization: Boolean
  hasOrganizationWith: [OrganizationWhereInput!]
}
"""
OrganizationWhereInput is used for filtering Organization objects.
Input was generated by ent.
"""
input OrganizationWhereInput {
  not: OrganizationWhereInput
  and: [OrganizationWhereInput!]
  or: [OrganizationWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  display_name field predicates
  """
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameEqualFold: String
  displayNameContainsFold: String
  """
  parent_organization_id field predicates
  """
  parentOrganizationID: ID
  parentOrganizationIDNEQ: ID
  parentOrganizationIDIn: [ID!]
  parentOrganizationIDNotIn: [ID!]
  parentOrganizationIDGT: ID
  parentOrganizationIDGTE: ID
  parentOrganizationIDLT: ID
  parentOrganizationIDLTE: ID
  parentOrganizationIDContains: ID
  parentOrganizationIDHasPrefix: ID
  parentOrganizationIDHasSuffix: ID
  parentOrganizationIDIsNil: Boolean
  parentOrganizationIDNotNil: Boolean
  parentOrganizationIDEqualFold: ID
  parentOrganizationIDContainsFold: ID
  """
  personal_org field predicates
  """
  personalOrg: Boolean
  personalOrgNEQ: Boolean
  personalOrgIsNil: Boolean
  personalOrgNotNil: Boolean
  """
  avatar_remote_url field predicates
  """
  avatarRemoteURL: String
  avatarRemoteURLNEQ: String
  avatarRemoteURLIn: [String!]
  avatarRemoteURLNotIn: [String!]
  avatarRemoteURLGT: String
  avatarRemoteURLGTE: String
  avatarRemoteURLLT: String
  avatarRemoteURLLTE: String
  avatarRemoteURLContains: String
  avatarRemoteURLHasPrefix: String
  avatarRemoteURLHasSuffix: String
  avatarRemoteURLIsNil: Boolean
  avatarRemoteURLNotNil: Boolean
  avatarRemoteURLEqualFold: String
  avatarRemoteURLContainsFold: String
  """
  parent edge predicates
  """
  hasParent: Boolean
  hasParentWith: [OrganizationWhereInput!]
  """
  children edge predicates
  """
  hasChildren: Boolean
  hasChildrenWith: [OrganizationWhereInput!]
  """
  groups edge predicates
  """
  hasGroups: Boolean
  hasGroupsWith: [GroupWhereInput!]
  """
  templates edge predicates
  """
  hasTemplates: Boolean
  hasTemplatesWith: [TemplateWhereInput!]
  """
  integrations edge predicates
  """
  hasIntegrations: Boolean
  hasIntegrationsWith: [IntegrationWhereInput!]
  """
  setting edge predicates
  """
  hasSetting: Boolean
  hasSettingWith: [OrganizationSettingWhereInput!]
  """
  entitlements edge predicates
  """
  hasEntitlements: Boolean
  hasEntitlementsWith: [EntitlementWhereInput!]
  """
  personal_access_tokens edge predicates
  """
  hasPersonalAccessTokens: Boolean
  hasPersonalAccessTokensWith: [PersonalAccessTokenWhereInput!]
  """
  api_tokens edge predicates
  """
  hasAPITokens: Boolean
  hasAPITokensWith: [APITokenWhereInput!]
  """
  oauthprovider edge predicates
  """
  hasOauthprovider: Boolean
  hasOauthproviderWith: [OauthProviderWhereInput!]
  """
  users edge predicates
  """
  hasUsers: Boolean
  hasUsersWith: [UserWhereInput!]
  """
  invites edge predicates
  """
  hasInvites: Boolean
  hasInvitesWith: [InviteWhereInput!]
  """
  subscribers edge predicates
  """
  hasSubscribers: Boolean
  hasSubscribersWith: [SubscriberWhereInput!]
  """
  members edge predicates
  """
  hasMembers: Boolean
  hasMembersWith: [OrgMembershipWhereInput!]
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: Cursor
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: Cursor
}
type PersonalAccessToken implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  the name associated with the token
  """
  name: String!
  token: String!
  """
  when the token expires
  """
  expiresAt: Time!
  """
  a description of the token's purpose
  """
  description: String
  scopes: [String!]
  lastUsedAt: Time
  owner: User!
  """
  the organization(s) the token is associated with
  """
  organizations: [Organization!]
}
"""
A connection to a list of items.
"""
type PersonalAccessTokenConnection {
  """
  A list of edges.
  """
  edges: [PersonalAccessTokenEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type PersonalAccessTokenEdge {
  """
  The item at the end of the edge.
  """
  node: PersonalAccessToken
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
PersonalAccessTokenWhereInput is used for filtering PersonalAccessToken objects.
Input was generated by ent.
"""
input PersonalAccessTokenWhereInput {
  not: PersonalAccessTokenWhereInput
  and: [PersonalAccessTokenWhereInput!]
  or: [PersonalAccessTokenWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  expires_at field predicates
  """
  expiresAt: Time
  expiresAtNEQ: Time
  expiresAtIn: [Time!]
  expiresAtNotIn: [Time!]
  expiresAtGT: Time
  expiresAtGTE: Time
  expiresAtLT: Time
  expiresAtLTE: Time
  """
  last_used_at field predicates
  """
  lastUsedAt: Time
  lastUsedAtNEQ: Time
  lastUsedAtIn: [Time!]
  lastUsedAtNotIn: [Time!]
  lastUsedAtGT: Time
  lastUsedAtGTE: Time
  lastUsedAtLT: Time
  lastUsedAtLTE: Time
  lastUsedAtIsNil: Boolean
  lastUsedAtNotNil: Boolean
  """
  owner edge predicates
  """
  hasOwner: Boolean
  hasOwnerWith: [UserWhereInput!]
  """
  organizations edge predicates
  """
  hasOrganizations: Boolean
  hasOrganizationsWith: [OrganizationWhereInput!]
}
type Query {
  """
  Fetches an object given its ID.
  """
  node(
    """
    ID of the object.
    """
    id: ID!
  ): Node
  """
  Lookup nodes by a list of IDs.
  """
  nodes(
    """
    The list of node IDs.
    """
    ids: [ID!]!
  ): [Node]!
  apiTokens(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for APITokens returned from the connection.
    """
    where: APITokenWhereInput
  ): APITokenConnection!
  documentDataSlice(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for DocumentDataSlice returned from the connection.
    """
    where: DocumentDataWhereInput
  ): DocumentDataConnection!
  documentDataHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for DocumentDataHistories returned from the connection.
    """
    where: DocumentDataHistoryWhereInput
  ): DocumentDataHistoryConnection!
  entitlements(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Entitlements returned from the connection.
    """
    where: EntitlementWhereInput
  ): EntitlementConnection!
  entitlementHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for EntitlementHistories returned from the connection.
    """
    where: EntitlementHistoryWhereInput
  ): EntitlementHistoryConnection!
  groups(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Groups returned from the connection.
    """
    orderBy: GroupOrder

    """
    Filtering options for Groups returned from the connection.
    """
    where: GroupWhereInput
  ): GroupConnection!
  groupHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for GroupHistories returned from the connection.
    """
    orderBy: GroupHistoryOrder

    """
    Filtering options for GroupHistories returned from the connection.
    """
    where: GroupHistoryWhereInput
  ): GroupHistoryConnection!
  groupMemberships(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for GroupMemberships returned from the connection.
    """
    where: GroupMembershipWhereInput
  ): GroupMembershipConnection!
  groupMembershipHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for GroupMembershipHistories returned from the connection.
    """
    where: GroupMembershipHistoryWhereInput
  ): GroupMembershipHistoryConnection!
  groupSettings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for GroupSettings returned from the connection.
    """
    where: GroupSettingWhereInput
  ): GroupSettingConnection!
  groupSettingHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for GroupSettingHistories returned from the connection.
    """
    where: GroupSettingHistoryWhereInput
  ): GroupSettingHistoryConnection!
  hushes(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Hushes returned from the connection.
    """
    orderBy: HushOrder

    """
    Filtering options for Hushes returned from the connection.
    """
    where: HushWhereInput
  ): HushConnection!
  hushHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for HushHistories returned from the connection.
    """
    orderBy: HushHistoryOrder

    """
    Filtering options for HushHistories returned from the connection.
    """
    where: HushHistoryWhereInput
  ): HushHistoryConnection!
  integrations(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Integrations returned from the connection.
    """
    orderBy: IntegrationOrder

    """
    Filtering options for Integrations returned from the connection.
    """
    where: IntegrationWhereInput
  ): IntegrationConnection!
  integrationHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for IntegrationHistories returned from the connection.
    """
    orderBy: IntegrationHistoryOrder

    """
    Filtering options for IntegrationHistories returned from the connection.
    """
    where: IntegrationHistoryWhereInput
  ): IntegrationHistoryConnection!
  invites(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Invites returned from the connection.
    """
    where: InviteWhereInput
  ): InviteConnection!
  oauthProviders(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for OauthProviders returned from the connection.
    """
    where: OauthProviderWhereInput
  ): OauthProviderConnection!
  oauthProviderHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for OauthProviderHistories returned from the connection.
    """
    where: OauthProviderHistoryWhereInput
  ): OauthProviderHistoryConnection!
  ohAuthTooTokens(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for OhAuthTooTokens returned from the connection.
    """
    where: OhAuthTooTokenWhereInput
  ): OhAuthTooTokenConnection!
  orgMemberships(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for OrgMemberships returned from the connection.
    """
    where: OrgMembershipWhereInput
  ): OrgMembershipConnection!
  orgMembershipHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for OrgMembershipHistories returned from the connection.
    """
    where: OrgMembershipHistoryWhereInput
  ): OrgMembershipHistoryConnection!
  organizations(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Organizations returned from the connection.
    """
    orderBy: OrganizationOrder

    """
    Filtering options for Organizations returned from the connection.
    """
    where: OrganizationWhereInput
  ): OrganizationConnection!
  organizationHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for OrganizationHistories returned from the connection.
    """
    orderBy: OrganizationHistoryOrder

    """
    Filtering options for OrganizationHistories returned from the connection.
    """
    where: OrganizationHistoryWhereInput
  ): OrganizationHistoryConnection!
  organizationSettings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for OrganizationSettings returned from the connection.
    """
    where: OrganizationSettingWhereInput
  ): OrganizationSettingConnection!
  organizationSettingHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for OrganizationSettingHistories returned from the connection.
    """
    where: OrganizationSettingHistoryWhereInput
  ): OrganizationSettingHistoryConnection!
  personalAccessTokens(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for PersonalAccessTokens returned from the connection.
    """
    where: PersonalAccessTokenWhereInput
  ): PersonalAccessTokenConnection!
  subscribers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Subscribers returned from the connection.
    """
    where: SubscriberWhereInput
  ): SubscriberConnection!
  tfaSettings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for TFASettings returned from the connection.
    """
    where: TFASettingWhereInput
  ): TFASettingConnection!
  templates(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Templates returned from the connection.
    """
    orderBy: TemplateOrder

    """
    Filtering options for Templates returned from the connection.
    """
    where: TemplateWhereInput
  ): TemplateConnection!
  templateHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for TemplateHistories returned from the connection.
    """
    orderBy: TemplateHistoryOrder

    """
    Filtering options for TemplateHistories returned from the connection.
    """
    where: TemplateHistoryWhereInput
  ): TemplateHistoryConnection!
  users(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Users returned from the connection.
    """
    orderBy: UserOrder

    """
    Filtering options for Users returned from the connection.
    """
    where: UserWhereInput
  ): UserConnection!
  userHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for UserHistories returned from the connection.
    """
    orderBy: UserHistoryOrder

    """
    Filtering options for UserHistories returned from the connection.
    """
    where: UserHistoryWhereInput
  ): UserHistoryConnection!
  userSettings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for UserSettings returned from the connection.
    """
    where: UserSettingWhereInput
  ): UserSettingConnection!
  userSettingHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for UserSettingHistories returned from the connection.
    """
    where: UserSettingHistoryWhereInput
  ): UserSettingHistoryConnection!
}
type Subscriber implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  ownerID: ID
  """
  email address of the subscriber
  """
  email: String!
  """
  phone number of the subscriber
  """
  phoneNumber: String
  """
  indicates if the email address has been verified
  """
  verifiedEmail: Boolean!
  """
  indicates if the phone number has been verified
  """
  verifiedPhone: Boolean!
  """
  indicates if the subscriber is active or not, active users will have at least one verified contact method
  """
  active: Boolean!
  owner: Organization
}
"""
A connection to a list of items.
"""
type SubscriberConnection {
  """
  A list of edges.
  """
  edges: [SubscriberEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type SubscriberEdge {
  """
  The item at the end of the edge.
  """
  node: Subscriber
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
SubscriberWhereInput is used for filtering Subscriber objects.
Input was generated by ent.
"""
input SubscriberWhereInput {
  not: SubscriberWhereInput
  and: [SubscriberWhereInput!]
  or: [SubscriberWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: ID
  ownerIDNEQ: ID
  ownerIDIn: [ID!]
  ownerIDNotIn: [ID!]
  ownerIDGT: ID
  ownerIDGTE: ID
  ownerIDLT: ID
  ownerIDLTE: ID
  ownerIDContains: ID
  ownerIDHasPrefix: ID
  ownerIDHasSuffix: ID
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  ownerIDEqualFold: ID
  ownerIDContainsFold: ID
  """
  email field predicates
  """
  email: String
  emailNEQ: String
  emailIn: [String!]
  emailNotIn: [String!]
  emailGT: String
  emailGTE: String
  emailLT: String
  emailLTE: String
  emailContains: String
  emailHasPrefix: String
  emailHasSuffix: String
  emailEqualFold: String
  emailContainsFold: String
  """
  phone_number field predicates
  """
  phoneNumber: String
  phoneNumberNEQ: String
  phoneNumberIn: [String!]
  phoneNumberNotIn: [String!]
  phoneNumberGT: String
  phoneNumberGTE: String
  phoneNumberLT: String
  phoneNumberLTE: String
  phoneNumberContains: String
  phoneNumberHasPrefix: String
  phoneNumberHasSuffix: String
  phoneNumberIsNil: Boolean
  phoneNumberNotNil: Boolean
  phoneNumberEqualFold: String
  phoneNumberContainsFold: String
  """
  verified_email field predicates
  """
  verifiedEmail: Boolean
  verifiedEmailNEQ: Boolean
  """
  verified_phone field predicates
  """
  verifiedPhone: Boolean
  verifiedPhoneNEQ: Boolean
  """
  active field predicates
  """
  active: Boolean
  activeNEQ: Boolean
  """
  owner edge predicates
  """
  hasOwner: Boolean
  hasOwnerWith: [OrganizationWhereInput!]
}
type TFASetting implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  TFA secret for the user
  """
  tfaSecret: String
  """
  specifies if the TFA device has been verified
  """
  verified: Boolean!
  """
  recovery codes for 2fa
  """
  recoveryCodes: [String!]
  """
  specifies a user may complete authentication by verifying a TOTP code delivered through an authenticator app
  """
  totpAllowed: Boolean
  owner: User
}
"""
A connection to a list of items.
"""
type TFASettingConnection {
  """
  A list of edges.
  """
  edges: [TFASettingEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type TFASettingEdge {
  """
  The item at the end of the edge.
  """
  node: TFASetting
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
TFASettingWhereInput is used for filtering TFASetting objects.
Input was generated by ent.
"""
input TFASettingWhereInput {
  not: TFASettingWhereInput
  and: [TFASettingWhereInput!]
  or: [TFASettingWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  tfa_secret field predicates
  """
  tfaSecret: String
  tfaSecretNEQ: String
  tfaSecretIn: [String!]
  tfaSecretNotIn: [String!]
  tfaSecretGT: String
  tfaSecretGTE: String
  tfaSecretLT: String
  tfaSecretLTE: String
  tfaSecretContains: String
  tfaSecretHasPrefix: String
  tfaSecretHasSuffix: String
  tfaSecretIsNil: Boolean
  tfaSecretNotNil: Boolean
  tfaSecretEqualFold: String
  tfaSecretContainsFold: String
  """
  verified field predicates
  """
  verified: Boolean
  verifiedNEQ: Boolean
  """
  totp_allowed field predicates
  """
  totpAllowed: Boolean
  totpAllowedNEQ: Boolean
  totpAllowedIsNil: Boolean
  totpAllowedNotNil: Boolean
  """
  owner edge predicates
  """
  hasOwner: Boolean
  hasOwnerWith: [UserWhereInput!]
}
type Template implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  the name of the template
  """
  name: String!
  """
  the type of the template, either a provided template or an implementation (document)
  """
  templateType: TemplateDocumentType!
  """
  the description of the template
  """
  description: String
  """
  the jsonschema object of the template
  """
  jsonconfig: JSON!
  """
  the uischema for the template to render in the UI
  """
  uischema: JSON
  owner: Organization!
  documents: [DocumentData!]
}
"""
A connection to a list of items.
"""
type TemplateConnection {
  """
  A list of edges.
  """
  edges: [TemplateEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
TemplateDocumentType is enum for the field template_type
"""
enum TemplateDocumentType @goModel(model: "github.com/datumforge/datum/internal/ent/enums.DocumentType") {
  ROOTTEMPLATE
  DOCUMENT
}
"""
An edge in a connection.
"""
type TemplateEdge {
  """
  The item at the end of the edge.
  """
  node: Template
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type TemplateHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: TemplateHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  the name of the template
  """
  name: String!
  """
  the type of the template, either a provided template or an implementation (document)
  """
  templateType: TemplateHistoryDocumentType!
  """
  the description of the template
  """
  description: String
  """
  the jsonschema object of the template
  """
  jsonconfig: JSON!
  """
  the uischema for the template to render in the UI
  """
  uischema: JSON
}
"""
A connection to a list of items.
"""
type TemplateHistoryConnection {
  """
  A list of edges.
  """
  edges: [TemplateHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
TemplateHistoryDocumentType is enum for the field template_type
"""
enum TemplateHistoryDocumentType @goModel(model: "github.com/datumforge/datum/internal/ent/enums.DocumentType") {
  ROOTTEMPLATE
  DOCUMENT
}
"""
An edge in a connection.
"""
type TemplateHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: TemplateHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
TemplateHistoryOpType is enum for the field operation
"""
enum TemplateHistoryOpType @goModel(model: "github.com/datumforge/enthistory.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
Ordering options for TemplateHistory connections
"""
input TemplateHistoryOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order TemplateHistories.
  """
  field: TemplateHistoryOrderField!
}
"""
Properties by which TemplateHistory connections can be ordered.
"""
enum TemplateHistoryOrderField {
  name
}
"""
TemplateHistoryWhereInput is used for filtering TemplateHistory objects.
Input was generated by ent.
"""
input TemplateHistoryWhereInput {
  not: TemplateHistoryWhereInput
  and: [TemplateHistoryWhereInput!]
  or: [TemplateHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: TemplateHistoryOpType
  operationNEQ: TemplateHistoryOpType
  operationIn: [TemplateHistoryOpType!]
  operationNotIn: [TemplateHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  template_type field predicates
  """
  templateType: TemplateHistoryDocumentType
  templateTypeNEQ: TemplateHistoryDocumentType
  templateTypeIn: [TemplateHistoryDocumentType!]
  templateTypeNotIn: [TemplateHistoryDocumentType!]
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
}
"""
Ordering options for Template connections
"""
input TemplateOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Templates.
  """
  field: TemplateOrderField!
}
"""
Properties by which Template connections can be ordered.
"""
enum TemplateOrderField {
  name
}
"""
TemplateWhereInput is used for filtering Template objects.
Input was generated by ent.
"""
input TemplateWhereInput {
  not: TemplateWhereInput
  and: [TemplateWhereInput!]
  or: [TemplateWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  template_type field predicates
  """
  templateType: TemplateDocumentType
  templateTypeNEQ: TemplateDocumentType
  templateTypeIn: [TemplateDocumentType!]
  templateTypeNotIn: [TemplateDocumentType!]
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  owner edge predicates
  """
  hasOwner: Boolean
  hasOwnerWith: [OrganizationWhereInput!]
  """
  documents edge predicates
  """
  hasDocuments: Boolean
  hasDocumentsWith: [DocumentDataWhereInput!]
}
"""
The builtin Time type
"""
scalar Time
"""
The builtin Uint type
"""
scalar Uint
"""
UpdateAPITokenInput is used for update APIToken object.
Input was generated by ent.
"""
input UpdateAPITokenInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  updatedBy: String
  clearUpdatedBy: Boolean
  """
  the name associated with the token
  """
  name: String
  """
  a description of the token's purpose
  """
  description: String
  clearDescription: Boolean
  scopes: [String!]
  appendScopes: [String!]
  clearScopes: Boolean
  lastUsedAt: Time
  clearLastUsedAt: Boolean
  ownerID: ID
}
"""
UpdateDocumentDataInput is used for update DocumentData object.
Input was generated by ent.
"""
input UpdateDocumentDataInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  updatedBy: String
  clearUpdatedBy: Boolean
  """
  the json data of the document
  """
  data: JSON
  templateID: ID
}
"""
UpdateEntitlementInput is used for update Entitlement object.
Input was generated by ent.
"""
input UpdateEntitlementInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  updatedBy: String
  clearUpdatedBy: Boolean
  tier: EntitlementTier
  """
  used to store references to external systems, e.g. Stripe
  """
  externalCustomerID: String
  clearExternalCustomerID: Boolean
  """
  used to store references to external systems, e.g. Stripe
  """
  externalSubscriptionID: String
  clearExternalSubscriptionID: Boolean
  """
  whether or not the customers entitlement expires - expires_at will show the time
  """
  expires: Boolean
  """
  the time at which a customer's entitlement will expire, e.g. they've cancelled but paid through the end of the month
  """
  expiresAt: Time
  clearExpiresAt: Boolean
  """
  whether or not the customer has cancelled their entitlement - usually used in conjunction with expires and expires at
  """
  cancelled: Boolean
  ownerID: ID
}
"""
UpdateGroupInput is used for update Group object.
Input was generated by ent.
"""
input UpdateGroupInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  updatedBy: String
  clearUpdatedBy: Boolean
  """
  the name of the group - must be unique within the organization
  """
  name: String
  """
  the groups description
  """
  description: String
  clearDescription: Boolean
  """
  the URL to an auto generated gravatar image for the group
  """
  gravatarLogoURL: String
  clearGravatarLogoURL: Boolean
  """
  the URL to an image uploaded by the customer for the groups avatar image
  """
  logoURL: String
  clearLogoURL: Boolean
  """
  The group's displayed 'friendly' name
  """
  displayName: String
  ownerID: ID
  settingID: ID
  addUserIDs: [ID!]
  removeUserIDs: [ID!]
  clearUsers: Boolean
}
"""
UpdateGroupMembershipInput is used for update GroupMembership object.
Input was generated by ent.
"""
input UpdateGroupMembershipInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  updatedBy: String
  clearUpdatedBy: Boolean
  role: GroupMembershipRole
}
"""
UpdateGroupSettingInput is used for update GroupSetting object.
Input was generated by ent.
"""
input UpdateGroupSettingInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  updatedBy: String
  clearUpdatedBy: Boolean
  """
  whether the group is visible to it's members / owners only or if it's searchable by anyone within the organization
  """
  visibility: GroupSettingVisibility
  """
  the policy governing ability to freely join a group, whether it requires an invitation, application, or either
  """
  joinPolicy: GroupSettingJoinPolicy
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  whether to sync group members to slack groups
  """
  syncToSlack: Boolean
  clearSyncToSlack: Boolean
  """
  whether to sync group members to github groups
  """
  syncToGithub: Boolean
  clearSyncToGithub: Boolean
  groupID: ID
  clearGroup: Boolean
}
"""
UpdateHushInput is used for update Hush object.
Input was generated by ent.
"""
input UpdateHushInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  updatedBy: String
  clearUpdatedBy: Boolean
  """
  the logical name of the corresponding hush secret or it's general grouping
  """
  name: String
  """
  a description of the hush value or purpose, such as github PAT
  """
  description: String
  clearDescription: Boolean
  """
  the kind of secret, such as sshkey, certificate, api token, etc.
  """
  kind: String
  clearKind: Boolean
  addIntegrationIDs: [ID!]
  removeIntegrationIDs: [ID!]
  clearIntegrations: Boolean
}
"""
UpdateIntegrationInput is used for update Integration object.
Input was generated by ent.
"""
input UpdateIntegrationInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  updatedBy: String
  clearUpdatedBy: Boolean
  """
  the name of the integration - must be unique within the organization
  """
  name: String
  """
  a description of the integration
  """
  description: String
  clearDescription: Boolean
  kind: String
  clearKind: Boolean
  ownerID: ID
  addSecretIDs: [ID!]
  removeSecretIDs: [ID!]
  clearSecrets: Boolean
}
"""
UpdateInviteInput is used for update Invite object.
Input was generated by ent.
"""
input UpdateInviteInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  updatedBy: String
  clearUpdatedBy: Boolean
  """
  the expiration date of the invitation token which defaults to 14 days in the future from creation
  """
  expires: Time
  """
  the email used as input to generate the invitation token and is the destination person the invitation is sent to who is required to accept to join the organization
  """
  recipient: String
  """
  the status of the invitation
  """
  status: InviteInviteStatus
  role: InviteRole
  """
  the number of attempts made to perform email send of the invitation, maximum of 5
  """
  sendAttempts: Int
  ownerID: ID
}
"""
UpdateOauthProviderInput is used for update OauthProvider object.
Input was generated by ent.
"""
input UpdateOauthProviderInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  updatedBy: String
  clearUpdatedBy: Boolean
  """
  the oauth provider's name
  """
  name: String
  """
  the client id for the oauth provider
  """
  clientID: String
  """
  the client secret
  """
  clientSecret: String
  """
  the redirect url
  """
  redirectURL: String
  """
  the scopes
  """
  scopes: String
  """
  the auth url of the provider
  """
  authURL: String
  """
  the token url of the provider
  """
  tokenURL: String
  """
  the auth style, 0: auto detect 1: third party log in 2: log in with username and password
  """
  authStyle: Uint
  """
  the URL to request user information by token
  """
  infoURL: String
  ownerID: ID
  clearOwner: Boolean
}
"""
UpdateOhAuthTooTokenInput is used for update OhAuthTooToken object.
Input was generated by ent.
"""
input UpdateOhAuthTooTokenInput {
  clientID: String
  scopes: [String!]
  appendScopes: [String!]
  clearScopes: Boolean
  nonce: String
  claimsUserID: String
  claimsUsername: String
  claimsEmail: String
  claimsEmailVerified: Boolean
  claimsGroups: [String!]
  appendClaimsGroups: [String!]
  clearClaimsGroups: Boolean
  claimsPreferredUsername: String
  connectorID: String
  connectorData: [String!]
  appendConnectorData: [String!]
  clearConnectorData: Boolean
  lastUsed: Time
}
"""
UpdateOrgMembershipInput is used for update OrgMembership object.
Input was generated by ent.
"""
input UpdateOrgMembershipInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  updatedBy: String
  clearUpdatedBy: Boolean
  role: OrgMembershipRole
}
"""
UpdateOrganizationInput is used for update Organization object.
Input was generated by ent.
"""
input UpdateOrganizationInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  updatedBy: String
  clearUpdatedBy: Boolean
  """
  the name of the organization
  """
  name: String
  """
  The organization's displayed 'friendly' name
  """
  displayName: String
  """
  An optional description of the organization
  """
  description: String
  clearDescription: Boolean
  """
  URL of the user's remote avatar
  """
  avatarRemoteURL: String
  clearAvatarRemoteURL: Boolean
  addGroupIDs: [ID!]
  removeGroupIDs: [ID!]
  clearGroups: Boolean
  addTemplateIDs: [ID!]
  removeTemplateIDs: [ID!]
  clearTemplates: Boolean
  addIntegrationIDs: [ID!]
  removeIntegrationIDs: [ID!]
  clearIntegrations: Boolean
  settingID: ID
  clearSetting: Boolean
  addEntitlementIDs: [ID!]
  removeEntitlementIDs: [ID!]
  clearEntitlements: Boolean
  addPersonalAccessTokenIDs: [ID!]
  removePersonalAccessTokenIDs: [ID!]
  clearPersonalAccessTokens: Boolean
  addAPITokenIDs: [ID!]
  removeAPITokenIDs: [ID!]
  clearAPITokens: Boolean
  addOauthproviderIDs: [ID!]
  removeOauthproviderIDs: [ID!]
  clearOauthprovider: Boolean
  addUserIDs: [ID!]
  removeUserIDs: [ID!]
  clearUsers: Boolean
  addInviteIDs: [ID!]
  removeInviteIDs: [ID!]
  clearInvites: Boolean
  addSubscriberIDs: [ID!]
  removeSubscriberIDs: [ID!]
  clearSubscribers: Boolean
}
"""
UpdateOrganizationSettingInput is used for update OrganizationSetting object.
Input was generated by ent.
"""
input UpdateOrganizationSettingInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  updatedBy: String
  clearUpdatedBy: Boolean
  """
  domains associated with the organization
  """
  domains: [String!]
  appendDomains: [String!]
  clearDomains: Boolean
  """
  Name of the person to contact for billing
  """
  billingContact: String
  clearBillingContact: Boolean
  """
  Email address of the person to contact for billing
  """
  billingEmail: String
  clearBillingEmail: Boolean
  """
  Phone number to contact for billing
  """
  billingPhone: String
  clearBillingPhone: Boolean
  """
  Address to send billing information to
  """
  billingAddress: String
  clearBillingAddress: Boolean
  """
  Usually government-issued tax ID or business ID such as ABN in Australia
  """
  taxIdentifier: String
  clearTaxIdentifier: Boolean
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  geographical location of the organization
  """
  geoLocation: OrganizationSettingRegion
  clearGeoLocation: Boolean
  organizationID: ID
  clearOrganization: Boolean
}
"""
UpdatePersonalAccessTokenInput is used for update PersonalAccessToken object.
Input was generated by ent.
"""
input UpdatePersonalAccessTokenInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  updatedBy: String
  clearUpdatedBy: Boolean
  """
  the name associated with the token
  """
  name: String
  """
  a description of the token's purpose
  """
  description: String
  clearDescription: Boolean
  scopes: [String!]
  appendScopes: [String!]
  clearScopes: Boolean
  lastUsedAt: Time
  clearLastUsedAt: Boolean
  addOrganizationIDs: [ID!]
  removeOrganizationIDs: [ID!]
  clearOrganizations: Boolean
}
"""
UpdateSubscriberInput is used for update Subscriber object.
Input was generated by ent.
"""
input UpdateSubscriberInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  updatedBy: String
  clearUpdatedBy: Boolean
  """
  email address of the subscriber
  """
  email: String
  """
  phone number of the subscriber
  """
  phoneNumber: String
  clearPhoneNumber: Boolean
  """
  indicates if the email address has been verified
  """
  verifiedEmail: Boolean
  """
  indicates if the phone number has been verified
  """
  verifiedPhone: Boolean
  """
  indicates if the subscriber is active or not, active users will have at least one verified contact method
  """
  active: Boolean
  ownerID: ID
  clearOwner: Boolean
}
"""
UpdateTFASettingInput is used for update TFASetting object.
Input was generated by ent.
"""
input UpdateTFASettingInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  updatedBy: String
  clearUpdatedBy: Boolean
  """
  specifies if the TFA device has been verified
  """
  verified: Boolean
  """
  specifies a user may complete authentication by verifying a TOTP code delivered through an authenticator app
  """
  totpAllowed: Boolean
  clearTotpAllowed: Boolean
}
"""
UpdateTemplateInput is used for update Template object.
Input was generated by ent.
"""
input UpdateTemplateInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  updatedBy: String
  clearUpdatedBy: Boolean
  """
  the name of the template
  """
  name: String
  """
  the type of the template, either a provided template or an implementation (document)
  """
  templateType: TemplateDocumentType
  """
  the description of the template
  """
  description: String
  clearDescription: Boolean
  """
  the jsonschema object of the template
  """
  jsonconfig: JSON
  """
  the uischema for the template to render in the UI
  """
  uischema: JSON
  clearUischema: Boolean
  ownerID: ID
  addDocumentIDs: [ID!]
  removeDocumentIDs: [ID!]
  clearDocuments: Boolean
}
"""
UpdateUserInput is used for update User object.
Input was generated by ent.
"""
input UpdateUserInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  updatedBy: String
  clearUpdatedBy: Boolean
  email: String
  firstName: String
  lastName: String
  """
  The user's displayed 'friendly' name
  """
  displayName: String
  """
  URL of the user's remote avatar
  """
  avatarRemoteURL: String
  clearAvatarRemoteURL: Boolean
  """
  The user's local avatar file
  """
  avatarLocalFile: String
  clearAvatarLocalFile: Boolean
  """
  The time the user's (local) avatar was last updated
  """
  avatarUpdatedAt: Time
  clearAvatarUpdatedAt: Boolean
  """
  the time the user was last seen
  """
  lastSeen: Time
  clearLastSeen: Boolean
  """
  user password hash
  """
  password: String
  clearPassword: Boolean
  """
  the Subject of the user JWT
  """
  sub: String
  clearSub: Boolean
  """
  auth provider used to register the account
  """
  authProvider: UserAuthProvider
  """
  the user's role
  """
  role: UserRole
  clearRole: Boolean
  addPersonalAccessTokenIDs: [ID!]
  removePersonalAccessTokenIDs: [ID!]
  clearPersonalAccessTokens: Boolean
  addTfaSettingIDs: [ID!]
  removeTfaSettingIDs: [ID!]
  clearTfaSettings: Boolean
  settingID: ID
  addEmailVerificationTokenIDs: [ID!]
  removeEmailVerificationTokenIDs: [ID!]
  clearEmailVerificationTokens: Boolean
  addPasswordResetTokenIDs: [ID!]
  removePasswordResetTokenIDs: [ID!]
  clearPasswordResetTokens: Boolean
  addGroupIDs: [ID!]
  removeGroupIDs: [ID!]
  clearGroups: Boolean
  addOrganizationIDs: [ID!]
  removeOrganizationIDs: [ID!]
  clearOrganizations: Boolean
  addWebauthnIDs: [ID!]
  removeWebauthnIDs: [ID!]
  clearWebauthn: Boolean
}
"""
UpdateUserSettingInput is used for update UserSetting object.
Input was generated by ent.
"""
input UpdateUserSettingInput {
  updatedAt: Time
  clearUpdatedAt: Boolean
  updatedBy: String
  clearUpdatedBy: Boolean
  """
  user account is locked if unconfirmed or explicitly locked
  """
  locked: Boolean
  """
  The time notifications regarding the user were silenced
  """
  silencedAt: Time
  clearSilencedAt: Boolean
  """
  The time the user was suspended
  """
  suspendedAt: Time
  clearSuspendedAt: Boolean
  """
  status of the user account
  """
  status: UserSettingUserStatus
  """
  whether the user has confirmed their email address
  """
  emailConfirmed: Boolean
  """
  tags associated with the user
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  specifies a user may complete authentication by verifying a WebAuthn capable device
  """
  isWebauthnAllowed: Boolean
  clearIsWebauthnAllowed: Boolean
  """
  whether the user has two factor authentication enabled
  """
  isTfaEnabled: Boolean
  clearIsTfaEnabled: Boolean
  userID: ID
  clearUser: Boolean
  defaultOrgID: ID
  clearDefaultOrg: Boolean
}
type User implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  email: String!
  firstName: String!
  lastName: String!
  """
  The user's displayed 'friendly' name
  """
  displayName: String!
  """
  URL of the user's remote avatar
  """
  avatarRemoteURL: String
  """
  The user's local avatar file
  """
  avatarLocalFile: String
  """
  The time the user's (local) avatar was last updated
  """
  avatarUpdatedAt: Time
  """
  the time the user was last seen
  """
  lastSeen: Time
  """
  the Subject of the user JWT
  """
  sub: String
  """
  auth provider used to register the account
  """
  authProvider: UserAuthProvider!
  """
  the user's role
  """
  role: UserRole
  personalAccessTokens: [PersonalAccessToken!]
  tfaSettings: [TFASetting!]
  setting: UserSetting!
  groups: [Group!]
  organizations: [Organization!]
  groupMemberships: [GroupMembership!]
  orgMemberships: [OrgMembership!]
}
"""
UserAuthProvider is enum for the field auth_provider
"""
enum UserAuthProvider @goModel(model: "github.com/datumforge/datum/internal/ent/enums.AuthProvider") {
  CREDENTIALS
  GOOGLE
  GITHUB
  WEBAUTHN
}
"""
A connection to a list of items.
"""
type UserConnection {
  """
  A list of edges.
  """
  edges: [UserEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type UserEdge {
  """
  The item at the end of the edge.
  """
  node: User
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type UserHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: UserHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  email: String!
  firstName: String!
  lastName: String!
  """
  The user's displayed 'friendly' name
  """
  displayName: String!
  """
  URL of the user's remote avatar
  """
  avatarRemoteURL: String
  """
  The user's local avatar file
  """
  avatarLocalFile: String
  """
  The time the user's (local) avatar was last updated
  """
  avatarUpdatedAt: Time
  """
  the time the user was last seen
  """
  lastSeen: Time
  """
  the Subject of the user JWT
  """
  sub: String
  """
  auth provider used to register the account
  """
  authProvider: UserHistoryAuthProvider!
  """
  the user's role
  """
  role: UserHistoryRole
}
"""
UserHistoryAuthProvider is enum for the field auth_provider
"""
enum UserHistoryAuthProvider @goModel(model: "github.com/datumforge/datum/internal/ent/enums.AuthProvider") {
  CREDENTIALS
  GOOGLE
  GITHUB
  WEBAUTHN
}
"""
A connection to a list of items.
"""
type UserHistoryConnection {
  """
  A list of edges.
  """
  edges: [UserHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type UserHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: UserHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
UserHistoryOpType is enum for the field operation
"""
enum UserHistoryOpType @goModel(model: "github.com/datumforge/enthistory.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
Ordering options for UserHistory connections
"""
input UserHistoryOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order UserHistories.
  """
  field: UserHistoryOrderField!
}
"""
Properties by which UserHistory connections can be ordered.
"""
enum UserHistoryOrderField {
  first_name
  last_name
  display_name
}
"""
UserHistoryRole is enum for the field role
"""
enum UserHistoryRole @goModel(model: "github.com/datumforge/datum/internal/ent/enums.Role") {
  ADMIN
  MEMBER
  USER
}
"""
UserHistoryWhereInput is used for filtering UserHistory objects.
Input was generated by ent.
"""
input UserHistoryWhereInput {
  not: UserHistoryWhereInput
  and: [UserHistoryWhereInput!]
  or: [UserHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: UserHistoryOpType
  operationNEQ: UserHistoryOpType
  operationIn: [UserHistoryOpType!]
  operationNotIn: [UserHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  email field predicates
  """
  email: String
  emailNEQ: String
  emailIn: [String!]
  emailNotIn: [String!]
  emailGT: String
  emailGTE: String
  emailLT: String
  emailLTE: String
  emailContains: String
  emailHasPrefix: String
  emailHasSuffix: String
  emailEqualFold: String
  emailContainsFold: String
  """
  first_name field predicates
  """
  firstName: String
  firstNameNEQ: String
  firstNameIn: [String!]
  firstNameNotIn: [String!]
  firstNameGT: String
  firstNameGTE: String
  firstNameLT: String
  firstNameLTE: String
  firstNameContains: String
  firstNameHasPrefix: String
  firstNameHasSuffix: String
  firstNameEqualFold: String
  firstNameContainsFold: String
  """
  last_name field predicates
  """
  lastName: String
  lastNameNEQ: String
  lastNameIn: [String!]
  lastNameNotIn: [String!]
  lastNameGT: String
  lastNameGTE: String
  lastNameLT: String
  lastNameLTE: String
  lastNameContains: String
  lastNameHasPrefix: String
  lastNameHasSuffix: String
  lastNameEqualFold: String
  lastNameContainsFold: String
  """
  display_name field predicates
  """
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameEqualFold: String
  displayNameContainsFold: String
  """
  avatar_remote_url field predicates
  """
  avatarRemoteURL: String
  avatarRemoteURLNEQ: String
  avatarRemoteURLIn: [String!]
  avatarRemoteURLNotIn: [String!]
  avatarRemoteURLGT: String
  avatarRemoteURLGTE: String
  avatarRemoteURLLT: String
  avatarRemoteURLLTE: String
  avatarRemoteURLContains: String
  avatarRemoteURLHasPrefix: String
  avatarRemoteURLHasSuffix: String
  avatarRemoteURLIsNil: Boolean
  avatarRemoteURLNotNil: Boolean
  avatarRemoteURLEqualFold: String
  avatarRemoteURLContainsFold: String
  """
  avatar_local_file field predicates
  """
  avatarLocalFile: String
  avatarLocalFileNEQ: String
  avatarLocalFileIn: [String!]
  avatarLocalFileNotIn: [String!]
  avatarLocalFileGT: String
  avatarLocalFileGTE: String
  avatarLocalFileLT: String
  avatarLocalFileLTE: String
  avatarLocalFileContains: String
  avatarLocalFileHasPrefix: String
  avatarLocalFileHasSuffix: String
  avatarLocalFileIsNil: Boolean
  avatarLocalFileNotNil: Boolean
  avatarLocalFileEqualFold: String
  avatarLocalFileContainsFold: String
  """
  avatar_updated_at field predicates
  """
  avatarUpdatedAt: Time
  avatarUpdatedAtNEQ: Time
  avatarUpdatedAtIn: [Time!]
  avatarUpdatedAtNotIn: [Time!]
  avatarUpdatedAtGT: Time
  avatarUpdatedAtGTE: Time
  avatarUpdatedAtLT: Time
  avatarUpdatedAtLTE: Time
  avatarUpdatedAtIsNil: Boolean
  avatarUpdatedAtNotNil: Boolean
  """
  last_seen field predicates
  """
  lastSeen: Time
  lastSeenNEQ: Time
  lastSeenIn: [Time!]
  lastSeenNotIn: [Time!]
  lastSeenGT: Time
  lastSeenGTE: Time
  lastSeenLT: Time
  lastSeenLTE: Time
  lastSeenIsNil: Boolean
  lastSeenNotNil: Boolean
  """
  sub field predicates
  """
  sub: String
  subNEQ: String
  subIn: [String!]
  subNotIn: [String!]
  subGT: String
  subGTE: String
  subLT: String
  subLTE: String
  subContains: String
  subHasPrefix: String
  subHasSuffix: String
  subIsNil: Boolean
  subNotNil: Boolean
  subEqualFold: String
  subContainsFold: String
  """
  auth_provider field predicates
  """
  authProvider: UserHistoryAuthProvider
  authProviderNEQ: UserHistoryAuthProvider
  authProviderIn: [UserHistoryAuthProvider!]
  authProviderNotIn: [UserHistoryAuthProvider!]
  """
  role field predicates
  """
  role: UserHistoryRole
  roleNEQ: UserHistoryRole
  roleIn: [UserHistoryRole!]
  roleNotIn: [UserHistoryRole!]
  roleIsNil: Boolean
  roleNotNil: Boolean
}
"""
Ordering options for User connections
"""
input UserOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Users.
  """
  field: UserOrderField!
}
"""
Properties by which User connections can be ordered.
"""
enum UserOrderField {
  first_name
  last_name
  display_name
}
"""
UserRole is enum for the field role
"""
enum UserRole @goModel(model: "github.com/datumforge/datum/internal/ent/enums.Role") {
  ADMIN
  MEMBER
  USER
}
type UserSetting implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  userID: ID
  """
  user account is locked if unconfirmed or explicitly locked
  """
  locked: Boolean!
  """
  The time notifications regarding the user were silenced
  """
  silencedAt: Time
  """
  The time the user was suspended
  """
  suspendedAt: Time
  """
  status of the user account
  """
  status: UserSettingUserStatus!
  """
  whether the user has confirmed their email address
  """
  emailConfirmed: Boolean!
  """
  tags associated with the user
  """
  tags: [String!]
  """
  specifies a user may complete authentication by verifying a WebAuthn capable device
  """
  isWebauthnAllowed: Boolean
  """
  whether the user has two factor authentication enabled
  """
  isTfaEnabled: Boolean
  user: User
  """
  organization to load on user login
  """
  defaultOrg: Organization
}
"""
A connection to a list of items.
"""
type UserSettingConnection {
  """
  A list of edges.
  """
  edges: [UserSettingEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type UserSettingEdge {
  """
  The item at the end of the edge.
  """
  node: UserSetting
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type UserSettingHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: UserSettingHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  userID: String
  """
  user account is locked if unconfirmed or explicitly locked
  """
  locked: Boolean!
  """
  The time notifications regarding the user were silenced
  """
  silencedAt: Time
  """
  The time the user was suspended
  """
  suspendedAt: Time
  """
  status of the user account
  """
  status: UserSettingHistoryUserStatus!
  """
  whether the user has confirmed their email address
  """
  emailConfirmed: Boolean!
  """
  tags associated with the user
  """
  tags: [String!]
  """
  specifies a user may complete authentication by verifying a WebAuthn capable device
  """
  isWebauthnAllowed: Boolean
  """
  whether the user has two factor authentication enabled
  """
  isTfaEnabled: Boolean
}
"""
A connection to a list of items.
"""
type UserSettingHistoryConnection {
  """
  A list of edges.
  """
  edges: [UserSettingHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type UserSettingHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: UserSettingHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
UserSettingHistoryOpType is enum for the field operation
"""
enum UserSettingHistoryOpType @goModel(model: "github.com/datumforge/enthistory.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
UserSettingHistoryUserStatus is enum for the field status
"""
enum UserSettingHistoryUserStatus @goModel(model: "github.com/datumforge/datum/internal/ent/enums.UserStatus") {
  ACTIVE
  INACTIVE
  DEACTIVATED
  SUSPENDED
}
"""
UserSettingHistoryWhereInput is used for filtering UserSettingHistory objects.
Input was generated by ent.
"""
input UserSettingHistoryWhereInput {
  not: UserSettingHistoryWhereInput
  and: [UserSettingHistoryWhereInput!]
  or: [UserSettingHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: UserSettingHistoryOpType
  operationNEQ: UserSettingHistoryOpType
  operationIn: [UserSettingHistoryOpType!]
  operationNotIn: [UserSettingHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  user_id field predicates
  """
  userID: String
  userIDNEQ: String
  userIDIn: [String!]
  userIDNotIn: [String!]
  userIDGT: String
  userIDGTE: String
  userIDLT: String
  userIDLTE: String
  userIDContains: String
  userIDHasPrefix: String
  userIDHasSuffix: String
  userIDIsNil: Boolean
  userIDNotNil: Boolean
  userIDEqualFold: String
  userIDContainsFold: String
  """
  locked field predicates
  """
  locked: Boolean
  lockedNEQ: Boolean
  """
  silenced_at field predicates
  """
  silencedAt: Time
  silencedAtNEQ: Time
  silencedAtIn: [Time!]
  silencedAtNotIn: [Time!]
  silencedAtGT: Time
  silencedAtGTE: Time
  silencedAtLT: Time
  silencedAtLTE: Time
  silencedAtIsNil: Boolean
  silencedAtNotNil: Boolean
  """
  suspended_at field predicates
  """
  suspendedAt: Time
  suspendedAtNEQ: Time
  suspendedAtIn: [Time!]
  suspendedAtNotIn: [Time!]
  suspendedAtGT: Time
  suspendedAtGTE: Time
  suspendedAtLT: Time
  suspendedAtLTE: Time
  suspendedAtIsNil: Boolean
  suspendedAtNotNil: Boolean
  """
  status field predicates
  """
  status: UserSettingHistoryUserStatus
  statusNEQ: UserSettingHistoryUserStatus
  statusIn: [UserSettingHistoryUserStatus!]
  statusNotIn: [UserSettingHistoryUserStatus!]
  """
  email_confirmed field predicates
  """
  emailConfirmed: Boolean
  emailConfirmedNEQ: Boolean
  """
  is_webauthn_allowed field predicates
  """
  isWebauthnAllowed: Boolean
  isWebauthnAllowedNEQ: Boolean
  isWebauthnAllowedIsNil: Boolean
  isWebauthnAllowedNotNil: Boolean
  """
  is_tfa_enabled field predicates
  """
  isTfaEnabled: Boolean
  isTfaEnabledNEQ: Boolean
  isTfaEnabledIsNil: Boolean
  isTfaEnabledNotNil: Boolean
}
"""
UserSettingUserStatus is enum for the field status
"""
enum UserSettingUserStatus @goModel(model: "github.com/datumforge/datum/internal/ent/enums.UserStatus") {
  ACTIVE
  INACTIVE
  DEACTIVATED
  SUSPENDED
}
"""
UserSettingWhereInput is used for filtering UserSetting objects.
Input was generated by ent.
"""
input UserSettingWhereInput {
  not: UserSettingWhereInput
  and: [UserSettingWhereInput!]
  or: [UserSettingWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  user_id field predicates
  """
  userID: ID
  userIDNEQ: ID
  userIDIn: [ID!]
  userIDNotIn: [ID!]
  userIDGT: ID
  userIDGTE: ID
  userIDLT: ID
  userIDLTE: ID
  userIDContains: ID
  userIDHasPrefix: ID
  userIDHasSuffix: ID
  userIDIsNil: Boolean
  userIDNotNil: Boolean
  userIDEqualFold: ID
  userIDContainsFold: ID
  """
  locked field predicates
  """
  locked: Boolean
  lockedNEQ: Boolean
  """
  silenced_at field predicates
  """
  silencedAt: Time
  silencedAtNEQ: Time
  silencedAtIn: [Time!]
  silencedAtNotIn: [Time!]
  silencedAtGT: Time
  silencedAtGTE: Time
  silencedAtLT: Time
  silencedAtLTE: Time
  silencedAtIsNil: Boolean
  silencedAtNotNil: Boolean
  """
  suspended_at field predicates
  """
  suspendedAt: Time
  suspendedAtNEQ: Time
  suspendedAtIn: [Time!]
  suspendedAtNotIn: [Time!]
  suspendedAtGT: Time
  suspendedAtGTE: Time
  suspendedAtLT: Time
  suspendedAtLTE: Time
  suspendedAtIsNil: Boolean
  suspendedAtNotNil: Boolean
  """
  status field predicates
  """
  status: UserSettingUserStatus
  statusNEQ: UserSettingUserStatus
  statusIn: [UserSettingUserStatus!]
  statusNotIn: [UserSettingUserStatus!]
  """
  email_confirmed field predicates
  """
  emailConfirmed: Boolean
  emailConfirmedNEQ: Boolean
  """
  is_webauthn_allowed field predicates
  """
  isWebauthnAllowed: Boolean
  isWebauthnAllowedNEQ: Boolean
  isWebauthnAllowedIsNil: Boolean
  isWebauthnAllowedNotNil: Boolean
  """
  is_tfa_enabled field predicates
  """
  isTfaEnabled: Boolean
  isTfaEnabledNEQ: Boolean
  isTfaEnabledIsNil: Boolean
  isTfaEnabledNotNil: Boolean
  """
  user edge predicates
  """
  hasUser: Boolean
  hasUserWith: [UserWhereInput!]
  """
  default_org edge predicates
  """
  hasDefaultOrg: Boolean
  hasDefaultOrgWith: [OrganizationWhereInput!]
}
"""
UserWhereInput is used for filtering User objects.
Input was generated by ent.
"""
input UserWhereInput {
  not: UserWhereInput
  and: [UserWhereInput!]
  or: [UserWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  email field predicates
  """
  email: String
  emailNEQ: String
  emailIn: [String!]
  emailNotIn: [String!]
  emailGT: String
  emailGTE: String
  emailLT: String
  emailLTE: String
  emailContains: String
  emailHasPrefix: String
  emailHasSuffix: String
  emailEqualFold: String
  emailContainsFold: String
  """
  first_name field predicates
  """
  firstName: String
  firstNameNEQ: String
  firstNameIn: [String!]
  firstNameNotIn: [String!]
  firstNameGT: String
  firstNameGTE: String
  firstNameLT: String
  firstNameLTE: String
  firstNameContains: String
  firstNameHasPrefix: String
  firstNameHasSuffix: String
  firstNameEqualFold: String
  firstNameContainsFold: String
  """
  last_name field predicates
  """
  lastName: String
  lastNameNEQ: String
  lastNameIn: [String!]
  lastNameNotIn: [String!]
  lastNameGT: String
  lastNameGTE: String
  lastNameLT: String
  lastNameLTE: String
  lastNameContains: String
  lastNameHasPrefix: String
  lastNameHasSuffix: String
  lastNameEqualFold: String
  lastNameContainsFold: String
  """
  display_name field predicates
  """
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameEqualFold: String
  displayNameContainsFold: String
  """
  avatar_remote_url field predicates
  """
  avatarRemoteURL: String
  avatarRemoteURLNEQ: String
  avatarRemoteURLIn: [String!]
  avatarRemoteURLNotIn: [String!]
  avatarRemoteURLGT: String
  avatarRemoteURLGTE: String
  avatarRemoteURLLT: String
  avatarRemoteURLLTE: String
  avatarRemoteURLContains: String
  avatarRemoteURLHasPrefix: String
  avatarRemoteURLHasSuffix: String
  avatarRemoteURLIsNil: Boolean
  avatarRemoteURLNotNil: Boolean
  avatarRemoteURLEqualFold: String
  avatarRemoteURLContainsFold: String
  """
  avatar_local_file field predicates
  """
  avatarLocalFile: String
  avatarLocalFileNEQ: String
  avatarLocalFileIn: [String!]
  avatarLocalFileNotIn: [String!]
  avatarLocalFileGT: String
  avatarLocalFileGTE: String
  avatarLocalFileLT: String
  avatarLocalFileLTE: String
  avatarLocalFileContains: String
  avatarLocalFileHasPrefix: String
  avatarLocalFileHasSuffix: String
  avatarLocalFileIsNil: Boolean
  avatarLocalFileNotNil: Boolean
  avatarLocalFileEqualFold: String
  avatarLocalFileContainsFold: String
  """
  avatar_updated_at field predicates
  """
  avatarUpdatedAt: Time
  avatarUpdatedAtNEQ: Time
  avatarUpdatedAtIn: [Time!]
  avatarUpdatedAtNotIn: [Time!]
  avatarUpdatedAtGT: Time
  avatarUpdatedAtGTE: Time
  avatarUpdatedAtLT: Time
  avatarUpdatedAtLTE: Time
  avatarUpdatedAtIsNil: Boolean
  avatarUpdatedAtNotNil: Boolean
  """
  last_seen field predicates
  """
  lastSeen: Time
  lastSeenNEQ: Time
  lastSeenIn: [Time!]
  lastSeenNotIn: [Time!]
  lastSeenGT: Time
  lastSeenGTE: Time
  lastSeenLT: Time
  lastSeenLTE: Time
  lastSeenIsNil: Boolean
  lastSeenNotNil: Boolean
  """
  sub field predicates
  """
  sub: String
  subNEQ: String
  subIn: [String!]
  subNotIn: [String!]
  subGT: String
  subGTE: String
  subLT: String
  subLTE: String
  subContains: String
  subHasPrefix: String
  subHasSuffix: String
  subIsNil: Boolean
  subNotNil: Boolean
  subEqualFold: String
  subContainsFold: String
  """
  auth_provider field predicates
  """
  authProvider: UserAuthProvider
  authProviderNEQ: UserAuthProvider
  authProviderIn: [UserAuthProvider!]
  authProviderNotIn: [UserAuthProvider!]
  """
  role field predicates
  """
  role: UserRole
  roleNEQ: UserRole
  roleIn: [UserRole!]
  roleNotIn: [UserRole!]
  roleIsNil: Boolean
  roleNotNil: Boolean
  """
  personal_access_tokens edge predicates
  """
  hasPersonalAccessTokens: Boolean
  hasPersonalAccessTokensWith: [PersonalAccessTokenWhereInput!]
  """
  tfa_settings edge predicates
  """
  hasTfaSettings: Boolean
  hasTfaSettingsWith: [TFASettingWhereInput!]
  """
  setting edge predicates
  """
  hasSetting: Boolean
  hasSettingWith: [UserSettingWhereInput!]
  """
  groups edge predicates
  """
  hasGroups: Boolean
  hasGroupsWith: [GroupWhereInput!]
  """
  organizations edge predicates
  """
  hasOrganizations: Boolean
  hasOrganizationsWith: [OrganizationWhereInput!]
  """
  group_memberships edge predicates
  """
  hasGroupMemberships: Boolean
  hasGroupMembershipsWith: [GroupMembershipWhereInput!]
  """
  org_memberships edge predicates
  """
  hasOrgMemberships: Boolean
  hasOrgMembershipsWith: [OrgMembershipWhereInput!]
}
