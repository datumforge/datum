openapi: 3.1.0
info:
    title: Datum OpenAPI 3.1.0 Specifications
    description: Documentation for Datum's API services
    termsOfService: https://datum.net/terms
    contact:
        name: Datum Support
        url: https://datum.net/support
        email: support@datum.net
    license:
        name: Apache 2.0
        url: https://www.apache.org/licenses/LICENSE-2.0.html
    version: 1.0.1
servers:
    - url: http://localhost:17608/v1
    - url: https://api.datum.net/v1
paths:
    /ready:
        get:
            security:
                - {}
            summary: Status Check
            description: A status check for the server and it's associated dependencies
            responses:
                "200":
                    description: The status of the server and sub components are returned
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    fga:
                                        type: string
                                    redis:
                                        type: string
                                    sqlite_db_primary:
                                        type: string
components:
  schemas:
    ForgotPasswordReply:
      type: object
      properties:
        error:
          type: string
          description: The error message if the request was unsuccessful
        message:
          type: string
        success:
          type: boolean
          description: Whether or not the request was successful or not
        unverified:
          type: boolean
    ForgotPasswordRequest:
      type: object
      properties:
        email:
          type: string
    LoginReply:
      type: object
      properties:
        access_token:
          type: string
        error:
          type: string
          description: The error message if the request was unsuccessful
        expires_in:
          type: integer
          format: int64
        message:
          type: string
        refresh_token:
          type: string
        success:
          type: boolean
          description: Whether or not the request was successful or not
        token_type:
          type: string
        unverified:
          type: boolean
    LoginRequest:
      type: object
      properties:
        otp_code:
          type: string
        password:
          type: string
        username:
          type: string
    MissingRequiredFieldError:
      type: object
      properties:
        required_field:
          type: string
    RefreshReply:
      type: object
      properties:
        error:
          type: string
          description: The error message if the request was unsuccessful
        message:
          type: string
        success:
          type: boolean
          description: Whether or not the request was successful or not
        unverified:
          type: boolean
    RefreshRequest:
      type: object
      properties:
        refresh_token:
          type: string
    RegisterReply:
      type: object
      properties:
        email:
          type: string
        error:
          type: string
          description: The error message if the request was unsuccessful
        message:
          type: string
        success:
          type: boolean
          description: Whether or not the request was successful or not
        token:
          type: string
        unverified:
          type: boolean
        user_id:
          type: string
    RegisterRequest:
      type: object
      properties:
        email:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        password:
          type: string
    ResendEmailReply:
      type: object
      properties:
        error:
          type: string
          description: The error message if the request was unsuccessful
        message:
          type: string
        success:
          type: boolean
          description: Whether or not the request was successful or not
        unverified:
          type: boolean
    ResendEmailRequest:
      type: object
      properties:
        email:
          type: string
    ResetPasswordReply:
      type: object
      properties:
        error:
          type: string
          description: The error message if the request was unsuccessful
        message:
          type: string
        success:
          type: boolean
          description: Whether or not the request was successful or not
        unverified:
          type: boolean
    ResetPasswordRequest:
      type: object
      properties:
        password:
          type: string
        token:
          type: string
    StatusError:
      type: object
      properties:
        code:
          type: integer
          description: the response HTTP code also in the response payload for your
            parsing convenience
        reply:
          type: object
          description: the Reply generated via the internal/rout package which contains
            a success bool and the corresponding message
          properties:
            error:
              type: string
              description: The error message if the request was unsuccessful
            success:
              type: boolean
              description: Whether or not the request was successful or not
            unverified:
              type: boolean
    SubscribeReply:
      type: object
      properties:
        error:
          type: string
          description: The error message if the request was unsuccessful
        message:
          type: string
        success:
          type: boolean
          description: Whether or not the request was successful or not
        unverified:
          type: boolean
    SubscribeRequest:
      type: object
      properties:
        OrganizationID:
          type: string
    VerifyReply:
      type: object
      properties:
        access_token:
          type: string
        email:
          type: string
        error:
          type: string
          description: The error message if the request was unsuccessful
        expires_in:
          type: integer
          format: int64
        message:
          type: string
        refresh_token:
          type: string
        success:
          type: boolean
          description: Whether or not the request was successful or not
        token:
          type: string
        token_type:
          type: string
        unverified:
          type: boolean
        user_id:
          type: string
    VerifyRequest: {}
  parameters:
    Token:
      name: token
      in: query
      description: the token to parse out of a URL
      required: true
      schema:
        type: integer
  requestBodies:
    ForgotPasswordRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForgotPasswordRequest'
          examples:
            error:
              value:
                email: ""
    LoginRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoginRequest'
          examples:
            error:
              value:
                username: ""
                password: ""
                otpcode: ""
    RefreshRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RefreshRequest'
          examples:
            error:
              value:
                refreshtoken: ""
    RegisterRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegisterRequest'
          examples:
            error:
              value:
                firstname: ""
                lastname: ""
                email: ""
                password: ""
    ResendEmailRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResendEmailRequest'
          examples:
            error:
              value:
                email: ""
    ResetPasswordRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResetPasswordRequest'
          examples:
            error:
              value:
                password: ""
                token: ""
    SubscribeRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubscribeRequest'
          examples:
            error:
              value:
                email: ""
                organizationid: ""
    VerifyRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VerifyRequest'
          examples:
            error:
              value:
                token: ""
  responses:
    BadRequest:
      description: The request's parameters are not valid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StatusError'
          examples:
            error:
              value:
                code: 400
                reply:
                  success: false
                  error: bad request
    Conflict:
      description: The request conflicts with the current state of the server
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StatusError'
          examples:
            error:
              value:
                code: 409
                reply:
                  success: false
                  error: conflict
    ForgotPasswordReply:
      description: The password reset email was sent
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForgotPasswordReply'
          examples:
            error:
              value:
                reply:
                  success: false
                message: ""
    InternalServerError:
      description: The server encountered an error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StatusError'
          examples:
            error:
              value:
                code: 500
                reply:
                  success: false
                  error: internal server error
    LoginReply:
      description: The login was successful
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoginReply'
          examples:
            error:
              value:
                reply:
                  success: false
                accesstoken: ""
                refreshtoken: ""
                tokentype: ""
                expiresin: 0
                message: ""
    RefreshReply:
      description: The token was refreshed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RefreshReply'
          examples:
            error:
              value:
                reply:
                  success: false
                message: ""
    RegisterReply:
      description: The user was registered
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegisterReply'
          examples:
            error:
              value:
                reply:
                  success: false
                id: ""
                email: ""
                message: ""
                token: ""
    ResendEmailReply:
      description: The email was resent
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResendEmailReply'
          examples:
            error:
              value:
                reply:
                  success: false
                message: ""
    ResetPasswordReply:
      description: The password was reset
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResetPasswordReply'
          examples:
            error:
              value:
                reply:
                  success: false
                message: ""
    SubscribeReply:
      description: The user was subscribed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubscribeReply'
          examples:
            error:
              value:
                reply:
                  success: false
                message: ""
    Unauthorized:
      description: The request is not authorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StatusError'
          examples:
            error:
              value:
                code: 401
                reply:
                  success: false
                  error: unauthorized
    VerifyReply:
      description: The email was verified
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VerifyReply'
          examples:
            error:
              value:
                reply:
                  success: false
                id: ""
                email: ""
                token: ""
                accesstoken: ""
                refreshtoken: ""
                tokentype: ""
                expiresin: 0
                message: ""
  examples:
    BadRequest:
      value:
        code: 400
        reply:
          success: false
          error: bad request
